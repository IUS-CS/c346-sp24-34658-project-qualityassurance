{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/appdata\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/appdata\/account","title":"var account: Account","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/appdata\/load()","title":"func load() async throws","type":"method"},{"path":"\/documentation\/goalsapp\/appdata\/save(account:)","title":"func save(account: Account) async throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/appdata\/fileurl()","title":"static func fileURL() throws -> URL","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/appdata\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/goalsapp\/appdata\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/appdata","title":"AppData","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/soundmanager\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/soundmanager\/player","title":"var player: AVAudioPlayer?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/soundmanager\/playsound(sound:)","title":"func playSound(sound: Sound)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/soundmanager\/instance","title":"static let instance: SoundManager","type":"property"}],"path":"\/documentation\/goalsapp\/soundmanager","title":"SoundManager","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/init(account:)","title":"init(account: Binding<Account>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/account","title":"var account: Account","type":"property"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibility(activationpoint:)-71y9c","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibility(activationpoint:)-wc2z","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityaction(named:_:)-2v11h","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityaction(named:_:)-67zaw","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityaction(named:_:)-8ob1u","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityactivationpoint(_:)-7lndj","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityactivationpoint(_:)-7yw71","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilitycustomcontent(_:_:importance:)-25w71","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilitycustomcontent(_:_:importance:)-2905b","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilitycustomcontent(_:_:importance:)-3xjkl","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilitycustomcontent(_:_:importance:)-51svp","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilitycustomcontent(_:_:importance:)-5uyu5","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilitycustomcontent(_:_:importance:)-7kt7","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilitycustomcontent(_:_:importance:)-8gqxm","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilitycustomcontent(_:_:importance:)-8ue5q","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityhint(_:)-3zqb8","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityhint(_:)-51ncd","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityhint(_:)-9nrmn","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityinputlabels(_:)-3kbt7","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityinputlabels(_:)-46sds","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityinputlabels(_:)-7f92l","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilitylabel(_:)-4ia23","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilitylabel(_:)-4ixd7","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilitylabel(_:)-5lb47","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityrotor(_:entries:)-20653","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityrotor(_:entries:)-4uq4n","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityrotor(_:entries:)-75ujz","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityrotor(_:entries:)-7kkbw","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityrotor(_:entries:entryid:entrylabel:)-2g0r2","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityrotor(_:entries:entryid:entrylabel:)-4ehpt","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityrotor(_:entries:entryid:entrylabel:)-92o7j","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityrotor(_:entries:entryid:entrylabel:)-99bmg","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityrotor(_:entries:entrylabel:)-20wwh","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityrotor(_:entries:entrylabel:)-2p376","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityrotor(_:entries:entrylabel:)-3vs1j","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityrotor(_:entries:entrylabel:)-4fc3v","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityrotor(_:textranges:)-4e2mi","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityrotor(_:textranges:)-6oaob","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityrotor(_:textranges:)-7edhd","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityrotor(_:textranges:)-94is0","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityvalue(_:)-1ojev","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityvalue(_:)-7ycq4","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityvalue(_:)-8ijuc","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/alert(_:ispresented:actions:)-4evl4","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/alert(_:ispresented:actions:)-4fc1r","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/alert(_:ispresented:actions:)-8gg8v","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/alert(_:ispresented:actions:message:)-2orzt","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/alert(_:ispresented:actions:message:)-55ew0","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/alert(_:ispresented:actions:message:)-7p5bx","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/alert(_:ispresented:presenting:actions:)-2gwb0","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/alert(_:ispresented:presenting:actions:)-6vu4d","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/alert(_:ispresented:presenting:actions:)-7fuj","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/alert(_:ispresented:presenting:actions:message:)-2qqp6","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/alert(_:ispresented:presenting:actions:message:)-5fhv8","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/alert(_:ispresented:presenting:actions:message:)-9hzms","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/alignmentguide(_:computevalue:)-4dtkm","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/alignmentguide(_:computevalue:)-6u1g7","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/aspectratio(_:contentmode:)-5thxj","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/aspectratio(_:contentmode:)-9nkhp","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/background(_:in:fillstyle:)-2cwev","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/background(_:in:fillstyle:)-602v9","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/background(in:fillstyle:)-1u0el","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/background(in:fillstyle:)-3r9p1","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/badge(_:)-2t8lh","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/badge(_:)-49be2","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/badge(_:)-8xoyk","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/badge(_:)-9dc4g","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/buttonstyle(_:)-5wiz","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/buttonstyle(_:)-8xjxf","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartsymbolscale(_:)-8ifx1","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartsymbolscale(_:)-90pxv","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartsymbolscale(domain:range:)-5v70o","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartsymbolscale(domain:range:)-5yrwj","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2dpch","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5uog2","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-927xg","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-25pub","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-641y1","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-s0k8","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-73c3","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7f5h","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-qsri","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5hapu","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5o8h3","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-89ivo","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/contentmargins(_:_:for:)-5487d","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/contentmargins(_:_:for:)-7hnvm","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/dialogsuppressiontoggle(_:issuppressed:)-4cj2f","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/dialogsuppressiontoggle(_:issuppressed:)-5svjg","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/dialogsuppressiontoggle(_:issuppressed:)-93ng8","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/filedialogconfirmationlabel(_:)-1exgg","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/filedialogconfirmationlabel(_:)-1f00l","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/filedialogconfirmationlabel(_:)-25b76","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/filedialogmessage(_:)-1he2m","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/filedialogmessage(_:)-6gnvb","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/filedialogmessage(_:)-93sqi","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1z2c5","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2988j","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-29tyr","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6lvju","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-18roi","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-6slou","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5fdfg","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-o56p","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fileexporterfilenamelabel(_:)-5o653","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fileexporterfilenamelabel(_:)-6crls","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fileexporterfilenamelabel(_:)-9xf6u","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/focusedobject(_:)-3nprs","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/focusedobject(_:)-8mpdq","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/focusedsceneobject(_:)-94f4i","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/focusedsceneobject(_:)-p9r3","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/focusedscenevalue(_:_:)-4osff","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/focusedscenevalue(_:_:)-5wnj4","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/focusedvalue(_:_:)-3x9rs","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/focusedvalue(_:_:)-9fgmx","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/help(_:)-2g6xe","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/help(_:)-50auk","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/help(_:)-9916d","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/keyboardshortcut(_:)-9cngj","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/keyboardshortcut(_:)-xswt","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/linelimit(_:)-2ofw8","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/linelimit(_:)-4rxns","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/linelimit(_:)-5buq3","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/linelimit(_:)-9oyhp","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/listitemtint(_:)-5jioh","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/listitemtint(_:)-5vycx","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/listsectionspacing(_:)-1jtra","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/listsectionspacing(_:)-3wjhb","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationbartitle(_:)-299vo","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationbartitle(_:)-9fb5x","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationbartitle(_:)-sg2h","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationbartitle(_:displaymode:)-2kv3s","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationbartitle(_:displaymode:)-2pi01","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationbartitle(_:displaymode:)-6x3ai","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationdocument(_:preview:)-6mn7z","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationdocument(_:preview:)-6sy5r","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationdocument(_:preview:)-84j8h","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationdocument(_:preview:)-uz81","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationtitle(_:)-49cn9","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationtitle(_:)-6ddbi","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationtitle(_:)-8frci","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationtitle(_:)-9xmf5","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationtitle(_:)-q5s0","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/onchange(of:initial:_:)-1x81x","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/onchange(of:initial:_:)-447k1","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/ondrop(of:delegate:)-47myi","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/ondrop(of:delegate:)-7wuyf","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/ondrop(of:istargeted:perform:)-3g7nu","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/ondrop(of:istargeted:perform:)-4nk69","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/ondrop(of:istargeted:perform:)-4xc0r","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/ondrop(of:istargeted:perform:)-88r0c","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/padding(_:)-4sia0","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/padding(_:)-5havt","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/renameaction(_:)-5nflo","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/renameaction(_:)-6lrpl","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/safeareainset(edge:alignment:spacing:content:)-1s13w","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/safeareainset(edge:alignment:spacing:content:)-78sx4","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/safeareapadding(_:)-266vm","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/safeareapadding(_:)-7nf8o","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/scaleeffect(_:anchor:)-4dt79","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/scaleeffect(_:anchor:)-8i9jm","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6e2re","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6wwb5","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-r3ip","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:editabletokens:placement:prompt:token:)-6vgog","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:editabletokens:placement:prompt:token:)-8silu","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:editabletokens:placement:prompt:token:)-wp1p","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:ispresented:placement:prompt:)-3ka31","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:ispresented:placement:prompt:)-6j94m","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:ispresented:placement:prompt:)-7f638","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:placement:prompt:)-2os4t","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:placement:prompt:)-4lf06","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:placement:prompt:)-95drq","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:placement:prompt:suggestions:)-1wjvy","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:placement:prompt:suggestions:)-83p0e","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:placement:prompt:suggestions:)-y5m6","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6gk0z","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:tokens:ispresented:placement:prompt:token:)-8oib9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:tokens:ispresented:placement:prompt:token:)-9c5sy","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:tokens:placement:prompt:token:)-32rg0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:tokens:placement:prompt:token:)-4duu2","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:tokens:placement:prompt:token:)-9c716","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-1k2l2","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-59dt2","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-851hw","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5fx5y","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6kio8","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7142l","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickeraccountview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/toolbar(content:)-1b8zm","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/toolbar(content:)-6bmjl","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/typeselectequivalent(_:)-3abfk","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/typeselectequivalent(_:)-8cxf3","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/typeselectequivalent(_:)-oog4","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/typesettinglanguage(_:isenabled:)-3xscn","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/typesettinglanguage(_:isenabled:)-6oxmq","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickeraccountview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/accentpickeraccountview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/accentpickeraccountview","title":"AccentPickerAccountView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/accentpickerview\/init(newhabit:)","title":"init(newHabit: Binding<Habit>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/accentpickerview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/goalsapp\/accentpickerview\/newhabit","title":"var newHabit: Habit","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/accessibility(activationpoint:)-2io0s","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/accessibility(activationpoint:)-9447f","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityaction(named:_:)-216g6","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityaction(named:_:)-2cwd6","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityaction(named:_:)-6jiit","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityactivationpoint(_:)-40avj","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityactivationpoint(_:)-4on3h","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilitycustomcontent(_:_:importance:)-13qvd","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilitycustomcontent(_:_:importance:)-64zr7","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilitycustomcontent(_:_:importance:)-6abcu","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilitycustomcontent(_:_:importance:)-6w65b","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilitycustomcontent(_:_:importance:)-7e9cu","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilitycustomcontent(_:_:importance:)-7l7e4","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilitycustomcontent(_:_:importance:)-9jjb","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilitycustomcontent(_:_:importance:)-zzpe","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityhint(_:)-383c3","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityhint(_:)-97rpy","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityhint(_:)-9nla1","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityinputlabels(_:)-2s4po","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityinputlabels(_:)-4s4fh","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityinputlabels(_:)-o1j3","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilitylabel(_:)-1368p","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilitylabel(_:)-6arvp","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilitylabel(_:)-9gjmm","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityrotor(_:entries:)-3zmth","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityrotor(_:entries:)-437h9","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityrotor(_:entries:)-465g","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityrotor(_:entries:)-5ztw3","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-33vts","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-5e5ag","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-6hmhb","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8tnjz","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityrotor(_:entries:entrylabel:)-7l1sn","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityrotor(_:entries:entrylabel:)-8cr54","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityrotor(_:entries:entrylabel:)-98sco","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityrotor(_:entries:entrylabel:)-9pier","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityrotor(_:textranges:)-2d5po","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityrotor(_:textranges:)-3oajv","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityrotor(_:textranges:)-79ico","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityrotor(_:textranges:)-8z8e4","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityvalue(_:)-4t2t0","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityvalue(_:)-6dlw1","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityvalue(_:)-7a91g","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/alert(_:ispresented:actions:)-5iozi","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/alert(_:ispresented:actions:)-7l1hw","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/alert(_:ispresented:actions:)-7tpy0","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/alert(_:ispresented:actions:message:)-3ilq","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/alert(_:ispresented:actions:message:)-7aycc","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/alert(_:ispresented:actions:message:)-821mk","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/alert(_:ispresented:presenting:actions:)-6650f","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/alert(_:ispresented:presenting:actions:)-6x8eg","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/alert(_:ispresented:presenting:actions:)-95n38","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/alert(_:ispresented:presenting:actions:message:)-3fr0s","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/alert(_:ispresented:presenting:actions:message:)-6i1ri","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/alert(_:ispresented:presenting:actions:message:)-8hw5b","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/alignmentguide(_:computevalue:)-62go2","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/alignmentguide(_:computevalue:)-76xw0","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/aspectratio(_:contentmode:)-14orl","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/aspectratio(_:contentmode:)-6979r","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/background(_:in:fillstyle:)-48dz4","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/background(_:in:fillstyle:)-8kta5","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/background(in:fillstyle:)-24n45","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/background(in:fillstyle:)-6ohrh","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/badge(_:)-15c0g","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/badge(_:)-1cmcf","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/badge(_:)-39q2k","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/badge(_:)-9fzye","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/buttonstyle(_:)-2okvg","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/buttonstyle(_:)-4mjfw","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartsymbolscale(_:)-4mmyj","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartsymbolscale(_:)-6lcra","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartsymbolscale(domain:range:)-7kinw","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartsymbolscale(domain:range:)-7or69","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1ysn5","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5s9uj","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-61hzl","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1w5pq","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6qbsc","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-ig0j","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1l85x","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6zt8e","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-98hp5","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-36ygo","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4sdat","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8cj7i","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/contentmargins(_:_:for:)-5z8l4","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/contentmargins(_:_:for:)-8j55s","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/dialogsuppressiontoggle(_:issuppressed:)-2ogvt","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/dialogsuppressiontoggle(_:issuppressed:)-6zamd","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/dialogsuppressiontoggle(_:issuppressed:)-k0w9","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/filedialogconfirmationlabel(_:)-3cjgr","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/filedialogconfirmationlabel(_:)-5fxkh","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/filedialogconfirmationlabel(_:)-8opei","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/filedialogmessage(_:)-3pk75","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/filedialogmessage(_:)-8upzj","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/filedialogmessage(_:)-cq56","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7wc3d","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-mdu8","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-7675m","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-7oyu9","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4aw38","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8jwnk","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-3zaaq","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-9nprc","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fileexporterfilenamelabel(_:)-7qj38","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fileexporterfilenamelabel(_:)-9tpjy","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fileexporterfilenamelabel(_:)-9vydn","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/focusedobject(_:)-87zrj","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/focusedobject(_:)-92v5q","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/focusedsceneobject(_:)-64sjk","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/focusedsceneobject(_:)-8ypxt","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/focusedscenevalue(_:_:)-7dizv","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/focusedscenevalue(_:_:)-8zo7b","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/focusedvalue(_:_:)-1p7nw","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/focusedvalue(_:_:)-3stg0","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/help(_:)-1f4yv","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/help(_:)-1vtju","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/help(_:)-69ajs","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/keyboardshortcut(_:)-4ajw1","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/keyboardshortcut(_:)-4ao54","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/linelimit(_:)-50q4y","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/linelimit(_:)-61o4m","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/linelimit(_:)-9drza","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/linelimit(_:)-zvq","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/listitemtint(_:)-1j8gb","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/listitemtint(_:)-5mbbz","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/listsectionspacing(_:)-630vn","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/listsectionspacing(_:)-7csc4","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/navigationbartitle(_:)-4nfqf","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/navigationbartitle(_:)-4z290","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/navigationbartitle(_:)-kos6","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/navigationbartitle(_:displaymode:)-4o7lp","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/navigationbartitle(_:displaymode:)-7o9wj","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/navigationbartitle(_:displaymode:)-8nely","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/navigationdocument(_:preview:)-3iogy","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/navigationdocument(_:preview:)-4bh1g","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/navigationdocument(_:preview:)-8wa33","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/navigationdocument(_:preview:)-9gn2a","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/navigationtitle(_:)-3h7a8","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/navigationtitle(_:)-3pr8i","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/navigationtitle(_:)-3sfvi","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/navigationtitle(_:)-6qie8","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/navigationtitle(_:)-9yqul","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/onchange(of:initial:_:)-2h035","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/onchange(of:initial:_:)-3zosw","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/ondrop(of:delegate:)-73ed2","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/ondrop(of:delegate:)-ofbj","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/ondrop(of:istargeted:perform:)-53yf8","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/ondrop(of:istargeted:perform:)-5a0fw","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/ondrop(of:istargeted:perform:)-6d0w3","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/ondrop(of:istargeted:perform:)-kpwq","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/padding(_:)-2yv6c","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/padding(_:)-4v8cs","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/renameaction(_:)-5gper","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/renameaction(_:)-8byoc","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/safeareainset(edge:alignment:spacing:content:)-5phy6","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/safeareainset(edge:alignment:spacing:content:)-7x1l4","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/safeareapadding(_:)-1evgk","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/safeareapadding(_:)-3px4n","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/scaleeffect(_:anchor:)-1t9f2","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/scaleeffect(_:anchor:)-8bk29","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-63g8j","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-79f6c","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7y3wm","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:editabletokens:placement:prompt:token:)-1y54l","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:editabletokens:placement:prompt:token:)-26fxq","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:editabletokens:placement:prompt:token:)-8jqss","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:ispresented:placement:prompt:)-4rb02","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:ispresented:placement:prompt:)-56rok","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:ispresented:placement:prompt:)-5ued8","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:placement:prompt:)-5jdkk","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:placement:prompt:)-6pyrm","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:placement:prompt:)-9f2qs","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:placement:prompt:suggestions:)-46v8o","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:placement:prompt:suggestions:)-4dl43","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:placement:prompt:suggestions:)-7odo9","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-345ph","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6pg5f","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-lz3u","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:tokens:placement:prompt:token:)-4g8la","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:tokens:placement:prompt:token:)-9ypq9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:tokens:placement:prompt:token:)-tvg6","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-1xww5","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3wdhz","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3wh4u","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6ewga","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6xwan","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-93tkh","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentpickerview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/toolbar(content:)-1qxmr","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/toolbar(content:)-1rigr","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/typeselectequivalent(_:)-20952","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/typeselectequivalent(_:)-6p666","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/typeselectequivalent(_:)-9u5v5","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/typesettinglanguage(_:isenabled:)-4n7ns","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/typesettinglanguage(_:isenabled:)-5bf85","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentpickerview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/accentpickerview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/accentpickerview","title":"AccentPickerView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/accentpickerview_previews\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/accentpickerview_previews\/previews","title":"static var previews: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/accentpickerview_previews\/platform","title":"static var platform: PreviewPlatform?","type":"property"}],"path":"\/documentation\/goalsapp\/accentpickerview_previews\/previewprovider-implementations","title":"PreviewProvider Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/accentpickerview_previews","title":"AccentPickerView_Previews","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/accentview\/init(accent:selection:)","title":"init(accent: Accent, selection: Binding<Accent>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/accentview\/accent","title":"var accent: Accent","type":"property"},{"path":"\/documentation\/goalsapp\/accentview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/goalsapp\/accentview\/selection","title":"var selection: Accent","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/accessibility(activationpoint:)-375vo","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/accessibility(activationpoint:)-869o5","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityaction(named:_:)-43vr3","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityaction(named:_:)-5og9i","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityaction(named:_:)-ueli","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityactivationpoint(_:)-6ezug","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityactivationpoint(_:)-867jt","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilitycustomcontent(_:_:importance:)-3a63d","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilitycustomcontent(_:_:importance:)-4xf1r","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilitycustomcontent(_:_:importance:)-5cxjt","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilitycustomcontent(_:_:importance:)-7cvtw","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilitycustomcontent(_:_:importance:)-7rcdg","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilitycustomcontent(_:_:importance:)-9fye8","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilitycustomcontent(_:_:importance:)-9wfff","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilitycustomcontent(_:_:importance:)-9ymsz","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityhint(_:)-1asm2","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityhint(_:)-1lkgx","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityhint(_:)-3wy9","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityinputlabels(_:)-536xu","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityinputlabels(_:)-597m3","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityinputlabels(_:)-6cdi","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilitylabel(_:)-297lp","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilitylabel(_:)-3sauw","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilitylabel(_:)-5yfh5","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityrotor(_:entries:)-19f6b","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityrotor(_:entries:)-5gmmm","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityrotor(_:entries:)-76o2w","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityrotor(_:entries:)-8vugx","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityrotor(_:entries:entryid:entrylabel:)-2kt6s","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityrotor(_:entries:entryid:entrylabel:)-5gv9s","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7l6vi","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9fdlt","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityrotor(_:entries:entrylabel:)-2j6a2","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityrotor(_:entries:entrylabel:)-53x7d","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityrotor(_:entries:entrylabel:)-8u0m9","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityrotor(_:entries:entrylabel:)-e42h","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityrotor(_:textranges:)-1l6ss","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityrotor(_:textranges:)-401sy","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityrotor(_:textranges:)-57yf7","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityrotor(_:textranges:)-l2ve","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityvalue(_:)-2toao","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityvalue(_:)-4y8va","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityvalue(_:)-5u4ra","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/alert(_:ispresented:actions:)-6kl5k","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/alert(_:ispresented:actions:)-7n1dq","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/alert(_:ispresented:actions:)-8kaw1","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/alert(_:ispresented:actions:message:)-13cr2","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/alert(_:ispresented:actions:message:)-268iu","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/alert(_:ispresented:actions:message:)-6gqgf","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/alert(_:ispresented:presenting:actions:)-4d8jl","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/alert(_:ispresented:presenting:actions:)-64cq5","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/alert(_:ispresented:presenting:actions:)-xb41","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/alert(_:ispresented:presenting:actions:message:)-4ieew","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/alert(_:ispresented:presenting:actions:message:)-leas","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/alert(_:ispresented:presenting:actions:message:)-u0m1","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/alignmentguide(_:computevalue:)-52qmp","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/alignmentguide(_:computevalue:)-8ap1p","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/aspectratio(_:contentmode:)-2xywn","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/aspectratio(_:contentmode:)-3uq95","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/background(_:in:fillstyle:)-2t211","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/background(_:in:fillstyle:)-3zji6","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/background(in:fillstyle:)-7hyfb","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/background(in:fillstyle:)-92mpl","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/badge(_:)-17rux","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/badge(_:)-2wzpu","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/badge(_:)-3amqr","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/badge(_:)-8gh7k","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/buttonstyle(_:)-1vv1d","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/buttonstyle(_:)-3inks","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartsymbolscale(_:)-50dgy","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartsymbolscale(_:)-9yfdj","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartsymbolscale(domain:range:)-6czg5","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartsymbolscale(domain:range:)-9mn2d","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1pq2h","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8tfxc","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-ssfa","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2oa3b","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5mky5","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-f8bo","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2q5ez","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6ox7m","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-70aiv","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4h91b","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4nm45","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9lsf0","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/contentmargins(_:_:for:)-2la83","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/contentmargins(_:_:for:)-9z9ut","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/dialogsuppressiontoggle(_:issuppressed:)-2enfy","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/dialogsuppressiontoggle(_:issuppressed:)-5b6ht","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/dialogsuppressiontoggle(_:issuppressed:)-83pa6","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/filedialogconfirmationlabel(_:)-3jy6e","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/filedialogconfirmationlabel(_:)-7o7nu","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/filedialogconfirmationlabel(_:)-m1fa","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/filedialogmessage(_:)-2jixl","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/filedialogmessage(_:)-8ram1","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/filedialogmessage(_:)-9qanv","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1l6l4","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3fkt2","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6ibm4","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-74jlh","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-2ljvi","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-9d22i","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5xfqz","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-9ppzn","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fileexporterfilenamelabel(_:)-1nlxv","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fileexporterfilenamelabel(_:)-3ofco","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fileexporterfilenamelabel(_:)-9vvhz","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/focusedobject(_:)-52o87","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/focusedobject(_:)-ggum","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/focusedsceneobject(_:)-6kzap","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/focusedsceneobject(_:)-8u55j","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/focusedscenevalue(_:_:)-7eesd","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/focusedscenevalue(_:_:)-8vpnf","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/focusedvalue(_:_:)-8t55x","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/focusedvalue(_:_:)-s6mi","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/help(_:)-2ew1v","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/help(_:)-4skh6","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/help(_:)-7l79x","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/keyboardshortcut(_:)-6u3wi","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/keyboardshortcut(_:)-g7di","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/linelimit(_:)-36svg","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/linelimit(_:)-3xrrx","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/linelimit(_:)-8g6vz","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/linelimit(_:)-8ofjp","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/listitemtint(_:)-6uo7","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/listitemtint(_:)-8pvuy","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/listsectionspacing(_:)-1qjku","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/listsectionspacing(_:)-5habk","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/navigationbartitle(_:)-2pz94","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/navigationbartitle(_:)-93u7k","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/navigationbartitle(_:)-u66b","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/navigationbartitle(_:displaymode:)-2hs13","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/navigationbartitle(_:displaymode:)-8sj0s","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/navigationbartitle(_:displaymode:)-9umm","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/navigationdocument(_:preview:)-3gamg","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/navigationdocument(_:preview:)-3lxe5","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/navigationdocument(_:preview:)-iu7d","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/navigationdocument(_:preview:)-txm3","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/navigationtitle(_:)-4yyca","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/navigationtitle(_:)-5n63c","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/navigationtitle(_:)-8wpvp","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/navigationtitle(_:)-93w3a","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/navigationtitle(_:)-9cmxw","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/onchange(of:initial:_:)-5zjc2","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/onchange(of:initial:_:)-7b23","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/ondrop(of:delegate:)-2cdt","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/ondrop(of:delegate:)-9nokj","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/ondrop(of:istargeted:perform:)-5e6p8","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/ondrop(of:istargeted:perform:)-5yqf1","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/ondrop(of:istargeted:perform:)-9etp9","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/ondrop(of:istargeted:perform:)-h4v3","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/padding(_:)-1qwsl","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/padding(_:)-6u5qh","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/renameaction(_:)-6bz9x","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/renameaction(_:)-6cxfa","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/safeareainset(edge:alignment:spacing:content:)-8pzoi","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/safeareainset(edge:alignment:spacing:content:)-8rkug","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/safeareapadding(_:)-2mq6v","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/safeareapadding(_:)-55mip","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/scaleeffect(_:anchor:)-2r7jv","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/scaleeffect(_:anchor:)-314ls","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-35kji","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7yj6g","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-80xye","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:editabletokens:placement:prompt:token:)-2195k","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:editabletokens:placement:prompt:token:)-30y8q","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:editabletokens:placement:prompt:token:)-48wr7","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:ispresented:placement:prompt:)-1s3wg","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:ispresented:placement:prompt:)-471ll","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:ispresented:placement:prompt:)-79ivb","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:placement:prompt:)-2vb7b","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:placement:prompt:)-3yrtf","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:placement:prompt:)-777cw","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/searchable(text:placement:prompt:suggestions:)-4os0u","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/searchable(text:placement:prompt:suggestions:)-5cgtq","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/searchable(text:placement:prompt:suggestions:)-62ycx","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:tokens:ispresented:placement:prompt:token:)-66zlj","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6uuky","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:tokens:ispresented:placement:prompt:token:)-8aaik","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:tokens:placement:prompt:token:)-17jds","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:tokens:placement:prompt:token:)-35pi9","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:tokens:placement:prompt:token:)-8itor","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3gxx9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-8ey4n","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9y9lt","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1h7jm","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7t7gn","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-86ogc","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accentview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/toolbar(content:)-7u6dn","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/toolbar(content:)-99niz","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/typeselectequivalent(_:)-3uuu6","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/typeselectequivalent(_:)-40af8","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/typeselectequivalent(_:)-4gcm4","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/typesettinglanguage(_:isenabled:)-2rx73","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/typesettinglanguage(_:isenabled:)-3i4se","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accentview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/accentview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/accentview","title":"AccentView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/accentview_previews\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/accentview_previews\/previews","title":"static var previews: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/accentview_previews\/platform","title":"static var platform: PreviewPlatform?","type":"property"}],"path":"\/documentation\/goalsapp\/accentview_previews\/previewprovider-implementations","title":"PreviewProvider Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/accentview_previews","title":"AccentView_Previews","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/account\/init()","title":"init()","type":"init"},{"path":"\/documentation\/goalsapp\/account\/init(accenttheme:backgroundtheme:)","title":"init(accentTheme: Accent, backgroundTheme: BackgroundTheme)","type":"init"},{"path":"\/documentation\/goalsapp\/account\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/account\/accenttheme","title":"var accentTheme: Accent","type":"property"},{"path":"\/documentation\/goalsapp\/account\/acctalltimecompletionrate","title":"var acctAllTimeCompletionRate: Double","type":"property"},{"path":"\/documentation\/goalsapp\/account\/acctbeststreak","title":"var acctBestStreak: Int","type":"property"},{"path":"\/documentation\/goalsapp\/account\/accttotalcompletions","title":"var acctTotalCompletions: Int","type":"property"},{"path":"\/documentation\/goalsapp\/account\/activehabitthemes","title":"var activeHabitThemes: [HabitTheme]","type":"property"},{"path":"\/documentation\/goalsapp\/account\/activehabitscomplete","title":"var activeHabitsComplete: Int","type":"property"},{"path":"\/documentation\/goalsapp\/account\/activehabitsincomplete","title":"var activeHabitsIncomplete: Int","type":"property"},{"path":"\/documentation\/goalsapp\/account\/activehabitsskipped","title":"var activeHabitsSkipped: Int","type":"property"},{"path":"\/documentation\/goalsapp\/account\/backgroundtheme","title":"var backgroundTheme: BackgroundTheme","type":"property"},{"path":"\/documentation\/goalsapp\/account\/celebrationsenabled","title":"var celebrationsEnabled: Bool","type":"property"},{"path":"\/documentation\/goalsapp\/account\/completionsound","title":"var completionSound: Sound","type":"property"},{"path":"\/documentation\/goalsapp\/account\/dailycompletionrate","title":"var dailyCompletionRate: Double","type":"property"},{"path":"\/documentation\/goalsapp\/account\/dailyhabits","title":"var dailyHabits: [Habit]","type":"property"},{"path":"\/documentation\/goalsapp\/account\/failuresound","title":"var failureSound: Sound","type":"property"},{"path":"\/documentation\/goalsapp\/account\/habits","title":"var habits: [Habit]","type":"property"},{"path":"\/documentation\/goalsapp\/account\/hapticfeedbackenabled","title":"var hapticFeedbackEnabled: Bool","type":"property"},{"path":"\/documentation\/goalsapp\/account\/id","title":"var id: UUID","type":"property"},{"path":"\/documentation\/goalsapp\/account\/monthlyhabits","title":"var monthlyHabits: [Habit]","type":"property"},{"path":"\/documentation\/goalsapp\/account\/notificationsound","title":"var notificationSound: Sound","type":"property"},{"path":"\/documentation\/goalsapp\/account\/notificationsenabled","title":"var notificationsEnabled: Bool","type":"property"},{"path":"\/documentation\/goalsapp\/account\/selectionsound","title":"var selectionSound: Sound","type":"property"},{"path":"\/documentation\/goalsapp\/account\/showcompletedhabits","title":"var showCompletedHabits: Bool","type":"property"},{"path":"\/documentation\/goalsapp\/account\/skippedhabits","title":"var skippedHabits: [Habit]","type":"property"},{"path":"\/documentation\/goalsapp\/account\/soundsenabled","title":"var soundsEnabled: Bool","type":"property"},{"path":"\/documentation\/goalsapp\/account\/weeklyhabits","title":"var weeklyHabits: [Habit]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/account\/deletehabit(_:)","title":"func deleteHabit(Habit)","type":"method"},{"path":"\/documentation\/goalsapp\/account\/updatehabits()","title":"func updateHabits()","type":"method"}],"path":"\/documentation\/goalsapp\/account","title":"Account","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/init(ispresentingaccountview:)","title":"init(isPresentingAccountView: Binding<Bool>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/ispresentingaccountview","title":"var isPresentingAccountView: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibility(activationpoint:)-17d5h","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibility(activationpoint:)-5g2pa","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityaction(named:_:)-19mfj","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityaction(named:_:)-5o7tw","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityaction(named:_:)-5rffq","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityactivationpoint(_:)-2d2x2","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityactivationpoint(_:)-8zf2d","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilitycustomcontent(_:_:importance:)-6uffz","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilitycustomcontent(_:_:importance:)-7w11g","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilitycustomcontent(_:_:importance:)-881k0","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilitycustomcontent(_:_:importance:)-8bmgs","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilitycustomcontent(_:_:importance:)-8ufii","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilitycustomcontent(_:_:importance:)-8uvxm","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilitycustomcontent(_:_:importance:)-9ayz7","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilitycustomcontent(_:_:importance:)-b6il","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityhint(_:)-5npe8","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityhint(_:)-7a0uk","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityhint(_:)-80vsz","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityinputlabels(_:)-1119q","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityinputlabels(_:)-1jeji","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityinputlabels(_:)-2o0hy","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilitylabel(_:)-27god","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilitylabel(_:)-2c8ot","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilitylabel(_:)-8tljz","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityrotor(_:entries:)-1t8xa","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityrotor(_:entries:)-60ah4","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityrotor(_:entries:)-6te5w","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityrotor(_:entries:)-mrqu","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityrotor(_:entries:entryid:entrylabel:)-2773i","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityrotor(_:entries:entryid:entrylabel:)-5bbz1","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityrotor(_:entries:entryid:entrylabel:)-68ojb","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityrotor(_:entries:entryid:entrylabel:)-pagn","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityrotor(_:entries:entrylabel:)-5bft7","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityrotor(_:entries:entrylabel:)-6ei2n","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityrotor(_:entries:entrylabel:)-9tv25","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityrotor(_:entries:entrylabel:)-9ya4q","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityrotor(_:textranges:)-1j0fs","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityrotor(_:textranges:)-6e55g","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityrotor(_:textranges:)-6xa1z","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityrotor(_:textranges:)-8l6nj","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityvalue(_:)-3qvsm","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityvalue(_:)-65sc9","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityvalue(_:)-6j5yl","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/alert(_:ispresented:actions:)-256ln","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/alert(_:ispresented:actions:)-2eewu","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/alert(_:ispresented:actions:)-7g74m","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/alert(_:ispresented:actions:message:)-19vkr","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/alert(_:ispresented:actions:message:)-6igd6","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/alert(_:ispresented:actions:message:)-8kcpq","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/alert(_:ispresented:presenting:actions:)-1yl1y","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/alert(_:ispresented:presenting:actions:)-5pfdr","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/alert(_:ispresented:presenting:actions:)-989kt","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/alert(_:ispresented:presenting:actions:message:)-1ue13","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/alert(_:ispresented:presenting:actions:message:)-6si8x","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/alert(_:ispresented:presenting:actions:message:)-wmvh","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/alignmentguide(_:computevalue:)-2lxcr","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/alignmentguide(_:computevalue:)-3mhfp","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/aspectratio(_:contentmode:)-2q12k","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/aspectratio(_:contentmode:)-77ayf","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/background(_:in:fillstyle:)-1z5sw","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/background(_:in:fillstyle:)-48iz3","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/background(in:fillstyle:)-4ryb6","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/background(in:fillstyle:)-6pj7l","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/badge(_:)-1tle2","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/badge(_:)-2nko3","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/badge(_:)-7j8wk","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/badge(_:)-8l2qu","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/buttonstyle(_:)-3d50x","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/buttonstyle(_:)-72t34","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartsymbolscale(_:)-8o2k1","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartsymbolscale(_:)-r5xa","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartsymbolscale(domain:range:)-1c4mn","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartsymbolscale(domain:range:)-8lcjo","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4xk7d","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5kkuz","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-64vsv","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3w67d","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-48gf8","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-89wga","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1gbnk","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2wkel","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-599ln","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5tlcm","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6gbep","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9ejvu","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/contentmargins(_:_:for:)-65oxi","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/contentmargins(_:_:for:)-8a4t7","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/dialogsuppressiontoggle(_:issuppressed:)-1vk6","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/dialogsuppressiontoggle(_:issuppressed:)-2ey3y","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/dialogsuppressiontoggle(_:issuppressed:)-lcpc","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/filedialogconfirmationlabel(_:)-5xjkx","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/filedialogconfirmationlabel(_:)-978m7","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/filedialogconfirmationlabel(_:)-byw8","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/filedialogmessage(_:)-1762v","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/filedialogmessage(_:)-956l9","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/filedialogmessage(_:)-96uv3","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7wyr6","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-96uj8","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6d9vb","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-7fm69","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-6rnav","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-9w5sw","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-2u6b8","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-hcs8","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fileexporterfilenamelabel(_:)-61fqg","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fileexporterfilenamelabel(_:)-7yvbn","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fileexporterfilenamelabel(_:)-gjyl","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/focusedobject(_:)-6arc7","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/focusedobject(_:)-86sov","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/focusedsceneobject(_:)-40ql9","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/focusedsceneobject(_:)-7o1zb","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/focusedscenevalue(_:_:)-2qeht","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/focusedscenevalue(_:_:)-4aewi","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/focusedvalue(_:_:)-71qnn","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/focusedvalue(_:_:)-96p9j","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/help(_:)-4de52","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/help(_:)-8ig9h","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/help(_:)-8rfq","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/keyboardshortcut(_:)-9wxkz","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/keyboardshortcut(_:)-r8tj","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/linelimit(_:)-38ceb","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/linelimit(_:)-3o4jh","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/linelimit(_:)-3q94g","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/linelimit(_:)-89vop","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/listitemtint(_:)-169k7","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/listitemtint(_:)-6lf02","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/listsectionspacing(_:)-9fi4u","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/listsectionspacing(_:)-9hwyl","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationbartitle(_:)-24kew","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationbartitle(_:)-7e8p7","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationbartitle(_:)-9wbz3","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationbartitle(_:displaymode:)-2s9fn","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationbartitle(_:displaymode:)-5iz9e","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationbartitle(_:displaymode:)-8b6wa","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationdocument(_:preview:)-11xug","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationdocument(_:preview:)-57zm6","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationdocument(_:preview:)-89veb","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationdocument(_:preview:)-k0wj","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationtitle(_:)-1kgvk","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationtitle(_:)-88zlf","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationtitle(_:)-hegg","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationtitle(_:)-oj3e","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationtitle(_:)-xu7b","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/onchange(of:initial:_:)-5z9xp","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/onchange(of:initial:_:)-8lobi","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/ondrop(of:delegate:)-1lmco","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/ondrop(of:delegate:)-3zk2h","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/ondrop(of:istargeted:perform:)-4qsz9","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/ondrop(of:istargeted:perform:)-6eaq3","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/ondrop(of:istargeted:perform:)-76v03","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/ondrop(of:istargeted:perform:)-7xi5g","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/padding(_:)-26y8n","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/padding(_:)-47gre","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/renameaction(_:)-12n3f","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/renameaction(_:)-53gm9","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/safeareainset(edge:alignment:spacing:content:)-10666","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/safeareainset(edge:alignment:spacing:content:)-1aoq8","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/safeareapadding(_:)-3snbu","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/safeareapadding(_:)-5pd42","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/scaleeffect(_:anchor:)-7glz4","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/scaleeffect(_:anchor:)-8qg5i","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1lph9","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3l2","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3sw3","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:editabletokens:placement:prompt:token:)-368om","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:editabletokens:placement:prompt:token:)-5ar3g","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:editabletokens:placement:prompt:token:)-5avqu","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:ispresented:placement:prompt:)-3vmyt","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:ispresented:placement:prompt:)-49iav","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:ispresented:placement:prompt:)-6jod","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:placement:prompt:)-3z8xv","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:placement:prompt:)-843pq","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:placement:prompt:)-9dyqg","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:placement:prompt:suggestions:)-3obuq","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:placement:prompt:suggestions:)-6tc1o","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:placement:prompt:suggestions:)-7f7qc","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:tokens:ispresented:placement:prompt:token:)-1sho7","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6t78z","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:tokens:ispresented:placement:prompt:token:)-8w36v","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:tokens:placement:prompt:token:)-2cpdg","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:tokens:placement:prompt:token:)-3724f","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:tokens:placement:prompt:token:)-8zme3","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-5xrog","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-7ywsh","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9phux","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-17j8g","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4xcrz","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5r3oe","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/accountsettingsview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/toolbar(content:)-74rg","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/toolbar(content:)-79fxz","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/typeselectequivalent(_:)-1ckuw","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/typeselectequivalent(_:)-3l0h5","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/typeselectequivalent(_:)-8w0ai","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/typesettinglanguage(_:isenabled:)-4sw0m","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/typesettinglanguage(_:isenabled:)-8b9u9","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/accountsettingsview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/accountsettingsview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/accountsettingsview","title":"AccountSettingsView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/audiopickerview\/init(selection:audiosetting:)","title":"init(selection: Binding<Sound>, audioSetting: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/audiopickerview\/audiosetting","title":"var audioSetting: String","type":"property"},{"path":"\/documentation\/goalsapp\/audiopickerview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/goalsapp\/audiopickerview\/selection","title":"var selection: Sound","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/accessibility(activationpoint:)-6cdrr","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/accessibility(activationpoint:)-7iakh","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityaction(named:_:)-1c1c4","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityaction(named:_:)-1k1vs","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityaction(named:_:)-6b3rk","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityactivationpoint(_:)-28ujl","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityactivationpoint(_:)-81019","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilitycustomcontent(_:_:importance:)-13qgk","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilitycustomcontent(_:_:importance:)-24tab","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilitycustomcontent(_:_:importance:)-2od9l","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilitycustomcontent(_:_:importance:)-329ef","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilitycustomcontent(_:_:importance:)-4g931","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilitycustomcontent(_:_:importance:)-7nixn","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilitycustomcontent(_:_:importance:)-7p3dm","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilitycustomcontent(_:_:importance:)-9cpil","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityhint(_:)-43v5e","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityhint(_:)-5uni","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityhint(_:)-8c9gp","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityinputlabels(_:)-3tmp6","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityinputlabels(_:)-6o70","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityinputlabels(_:)-7338w","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilitylabel(_:)-8owwm","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilitylabel(_:)-8yj0","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilitylabel(_:)-lunw","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityrotor(_:entries:)-52u39","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityrotor(_:entries:)-7z13i","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityrotor(_:entries:)-sdf2","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityrotor(_:entries:)-zd8x","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-2yli1","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-418le","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-4o8kt","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-bho5","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityrotor(_:entries:entrylabel:)-1p3es","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityrotor(_:entries:entrylabel:)-2se5v","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityrotor(_:entries:entrylabel:)-8ic5y","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityrotor(_:entries:entrylabel:)-vfcp","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityrotor(_:textranges:)-3ctkv","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityrotor(_:textranges:)-79u3x","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityrotor(_:textranges:)-9ll3","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityrotor(_:textranges:)-je7w","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityvalue(_:)-15xrh","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityvalue(_:)-4leot","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityvalue(_:)-4mqy4","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/alert(_:ispresented:actions:)-6bqn7","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/alert(_:ispresented:actions:)-7t7on","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/alert(_:ispresented:actions:)-8zql3","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/alert(_:ispresented:actions:message:)-1fvmw","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/alert(_:ispresented:actions:message:)-6ylc6","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/alert(_:ispresented:actions:message:)-87rcz","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/alert(_:ispresented:presenting:actions:)-1n0q9","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/alert(_:ispresented:presenting:actions:)-2p6lq","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/alert(_:ispresented:presenting:actions:)-9oyir","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/alert(_:ispresented:presenting:actions:message:)-4goki","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/alert(_:ispresented:presenting:actions:message:)-5mqea","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/alert(_:ispresented:presenting:actions:message:)-6rkpz","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/alignmentguide(_:computevalue:)-1x777","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/alignmentguide(_:computevalue:)-8impu","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/aspectratio(_:contentmode:)-4c9wi","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/aspectratio(_:contentmode:)-e3tg","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/background(_:in:fillstyle:)-72a50","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/background(_:in:fillstyle:)-9ig9l","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/background(in:fillstyle:)-1lbob","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/background(in:fillstyle:)-41lpy","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/badge(_:)-1f0r1","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/badge(_:)-2wgoj","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/badge(_:)-5y8d8","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/badge(_:)-7bggi","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/buttonstyle(_:)-89y7k","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/buttonstyle(_:)-9qawm","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartsymbolscale(_:)-1bs1m","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartsymbolscale(_:)-36cnj","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartsymbolscale(domain:range:)-5dzc","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartsymbolscale(domain:range:)-5i8oi","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2lu9k","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6mdaa","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8j110","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1jyb9","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2xbc5","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-80lha","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4pxgc","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7vug1","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9pv20","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3wkj1","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5p1c8","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-e7fm","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/contentmargins(_:_:for:)-371y9","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/contentmargins(_:_:for:)-3dkfi","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/dialogsuppressiontoggle(_:issuppressed:)-6miv6","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/dialogsuppressiontoggle(_:issuppressed:)-73usw","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/dialogsuppressiontoggle(_:issuppressed:)-8angq","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/filedialogconfirmationlabel(_:)-5h0bj","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/filedialogconfirmationlabel(_:)-89sa1","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/filedialogconfirmationlabel(_:)-9gah0","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/filedialogmessage(_:)-15o9","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/filedialogmessage(_:)-633ps","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/filedialogmessage(_:)-77cjj","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-222ku","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8if52","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-2thy3","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-7ma7t","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-227mr","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-cspp","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-2q0bw","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-5pmad","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fileexporterfilenamelabel(_:)-10gfb","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fileexporterfilenamelabel(_:)-2voax","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fileexporterfilenamelabel(_:)-5jodp","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/focusedobject(_:)-2pno3","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/focusedobject(_:)-6pudi","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/focusedsceneobject(_:)-1q3g3","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/focusedsceneobject(_:)-5qgxb","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/focusedscenevalue(_:_:)-360fe","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/focusedscenevalue(_:_:)-7judu","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/focusedvalue(_:_:)-98taf","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/focusedvalue(_:_:)-990bu","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/help(_:)-2fbem","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/help(_:)-3bn06","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/help(_:)-4nqo8","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/keyboardshortcut(_:)-1rbvo","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/keyboardshortcut(_:)-t5mu","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/linelimit(_:)-2czm7","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/linelimit(_:)-3m9od","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/linelimit(_:)-8jswk","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/linelimit(_:)-8zo6e","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/listitemtint(_:)-3gqjh","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/listitemtint(_:)-628jh","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/listsectionspacing(_:)-3mwoq","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/listsectionspacing(_:)-42kms","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/navigationbartitle(_:)-1bu2r","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/navigationbartitle(_:)-5k431","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/navigationbartitle(_:)-j38p","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/navigationbartitle(_:displaymode:)-4t1ln","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/navigationbartitle(_:displaymode:)-5azik","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/navigationbartitle(_:displaymode:)-71y16","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/navigationdocument(_:preview:)-46vmb","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/navigationdocument(_:preview:)-4btq2","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/navigationdocument(_:preview:)-9t64r","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/navigationdocument(_:preview:)-zet3","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/navigationtitle(_:)-1bgzx","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/navigationtitle(_:)-51jzk","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/navigationtitle(_:)-5svs7","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/navigationtitle(_:)-5v6je","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/navigationtitle(_:)-7ourl","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/onchange(of:initial:_:)-3mzmb","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/onchange(of:initial:_:)-4s291","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/ondrop(of:delegate:)-6c3aa","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/ondrop(of:delegate:)-7sp5c","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/ondrop(of:istargeted:perform:)-1lwc1","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/ondrop(of:istargeted:perform:)-6kigx","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/ondrop(of:istargeted:perform:)-7tley","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/ondrop(of:istargeted:perform:)-992er","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/padding(_:)-qmhc","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/padding(_:)-zfn","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/renameaction(_:)-16dnl","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/renameaction(_:)-3az0p","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/safeareainset(edge:alignment:spacing:content:)-398ak","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/safeareainset(edge:alignment:spacing:content:)-9fms4","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/safeareapadding(_:)-59f77","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/safeareapadding(_:)-67ici","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/scaleeffect(_:anchor:)-3w8sq","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/scaleeffect(_:anchor:)-9g5oz","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-35nz2","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-evoq","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-lc5i","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:editabletokens:placement:prompt:token:)-2lu8y","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:editabletokens:placement:prompt:token:)-6kkzx","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:editabletokens:placement:prompt:token:)-8tuyw","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:ispresented:placement:prompt:)-66eia","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:ispresented:placement:prompt:)-6xusy","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:ispresented:placement:prompt:)-9d1lc","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:placement:prompt:)-2rjrw","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:placement:prompt:)-7e6wp","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:placement:prompt:)-7ebq","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:placement:prompt:suggestions:)-21zqa","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:placement:prompt:suggestions:)-366l9","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:placement:prompt:suggestions:)-6nnoq","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-2xpfy","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-8g1x7","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-kwp1","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:tokens:placement:prompt:token:)-37lzf","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:tokens:placement:prompt:token:)-3jssw","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:tokens:placement:prompt:token:)-9e2wf","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-7rx5h","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9polx","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9wsl0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2e85g","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4mt6m","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6t8pu","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/audiopickerview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/toolbar(content:)-5ufno","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/toolbar(content:)-5yomx","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/typeselectequivalent(_:)-1qh8z","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/typeselectequivalent(_:)-80edp","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/typeselectequivalent(_:)-9h4xx","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/typesettinglanguage(_:isenabled:)-11ixr","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/typesettinglanguage(_:isenabled:)-6rjs3","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/audiopickerview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/audiopickerview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/audiopickerview","title":"AudioPickerView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/init(selection:)","title":"init(selection: Binding<BackgroundTheme>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/selection","title":"var selection: BackgroundTheme","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibility(activationpoint:)-2plfn","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibility(activationpoint:)-631bc","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityaction(named:_:)-3gc4j","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityaction(named:_:)-7r4x7","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityaction(named:_:)-8xa4j","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityactivationpoint(_:)-3p9j6","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityactivationpoint(_:)-4acfb","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilitycustomcontent(_:_:importance:)-231v5","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilitycustomcontent(_:_:importance:)-3hr5h","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilitycustomcontent(_:_:importance:)-3k7va","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilitycustomcontent(_:_:importance:)-3nnkq","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilitycustomcontent(_:_:importance:)-50lap","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilitycustomcontent(_:_:importance:)-5t844","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilitycustomcontent(_:_:importance:)-6q7lr","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilitycustomcontent(_:_:importance:)-8exc3","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityhint(_:)-6h43v","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityhint(_:)-9d4er","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityhint(_:)-ltwc","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityinputlabels(_:)-11xl0","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityinputlabels(_:)-6g8j5","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityinputlabels(_:)-8b5bn","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilitylabel(_:)-6bfcn","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilitylabel(_:)-78tua","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilitylabel(_:)-8cnes","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityrotor(_:entries:)-14mjw","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityrotor(_:entries:)-2cnoa","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityrotor(_:entries:)-4a0mh","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityrotor(_:entries:)-65256","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-1xs5p","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3lu3s","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-6nl4s","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9u2jj","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityrotor(_:entries:entrylabel:)-20iec","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityrotor(_:entries:entrylabel:)-3ix40","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityrotor(_:entries:entrylabel:)-5bdgj","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityrotor(_:entries:entrylabel:)-5pn5a","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityrotor(_:textranges:)-1pwl","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityrotor(_:textranges:)-53yjw","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityrotor(_:textranges:)-54c76","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityrotor(_:textranges:)-5zbes","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityvalue(_:)-7dbdc","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityvalue(_:)-8lte9","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityvalue(_:)-9gsxz","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/alert(_:ispresented:actions:)-5f5hh","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/alert(_:ispresented:actions:)-72mjf","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/alert(_:ispresented:actions:)-qha8","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/alert(_:ispresented:actions:message:)-4u1c1","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/alert(_:ispresented:actions:message:)-5wzvc","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/alert(_:ispresented:actions:message:)-7dhe4","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/alert(_:ispresented:presenting:actions:)-2d9o2","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/alert(_:ispresented:presenting:actions:)-5r2u0","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/alert(_:ispresented:presenting:actions:)-6r76c","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/alert(_:ispresented:presenting:actions:message:)-1w1oj","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/alert(_:ispresented:presenting:actions:message:)-8wby5","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/alert(_:ispresented:presenting:actions:message:)-kbtz","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/alignmentguide(_:computevalue:)-2etfe","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/alignmentguide(_:computevalue:)-6ytds","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/aspectratio(_:contentmode:)-75584","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/aspectratio(_:contentmode:)-9vpa7","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/background(_:in:fillstyle:)-2bdjy","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/background(_:in:fillstyle:)-6ivfs","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/background(in:fillstyle:)-4ee0j","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/background(in:fillstyle:)-4iick","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/badge(_:)-2ssgo","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/badge(_:)-43bm3","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/badge(_:)-9fofy","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/badge(_:)-9k3bq","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/buttonstyle(_:)-6m2he","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/buttonstyle(_:)-7lvij","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartsymbolscale(_:)-7hdzq","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartsymbolscale(_:)-9hudm","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartsymbolscale(domain:range:)-3qbwy","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartsymbolscale(domain:range:)-60mze","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-797el","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9oj9c","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-p7bm","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6xib8","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8v07t","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9wwj5","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1xqi0","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5e695","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6522x","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1b8wv","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1l3jl","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8m0ef","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/contentmargins(_:_:for:)-4nh5t","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/contentmargins(_:_:for:)-5v34g","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/dialogsuppressiontoggle(_:issuppressed:)-6f14d","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/dialogsuppressiontoggle(_:issuppressed:)-8z1hc","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/dialogsuppressiontoggle(_:issuppressed:)-90luc","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/filedialogconfirmationlabel(_:)-1f8kw","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/filedialogconfirmationlabel(_:)-68brc","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/filedialogconfirmationlabel(_:)-75x2t","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/filedialogmessage(_:)-2vp7s","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/filedialogmessage(_:)-6nwm","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/filedialogmessage(_:)-74she","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7rjxr","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-zoxp","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-1qwvx","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6huf1","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1bgh3","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-79dar","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-429wo","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-8ofke","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fileexporterfilenamelabel(_:)-3ct46","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fileexporterfilenamelabel(_:)-4yd90","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fileexporterfilenamelabel(_:)-yv7x","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/focusedobject(_:)-4g7uk","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/focusedobject(_:)-82gkl","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/focusedsceneobject(_:)-5w2p8","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/focusedsceneobject(_:)-92d95","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/focusedscenevalue(_:_:)-7rsyv","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/focusedscenevalue(_:_:)-q3a7","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/focusedvalue(_:_:)-1yb68","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/focusedvalue(_:_:)-3r84a","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/help(_:)-4j32n","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/help(_:)-5k2nb","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/help(_:)-5yyyy","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/keyboardshortcut(_:)-15rrf","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/keyboardshortcut(_:)-23ls4","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/linelimit(_:)-1pahp","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/linelimit(_:)-5ftyl","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/linelimit(_:)-6im80","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/linelimit(_:)-6t4qx","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/listitemtint(_:)-2jd8p","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/listitemtint(_:)-5ft6","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/listsectionspacing(_:)-3c7u8","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/listsectionspacing(_:)-8o6bx","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationbartitle(_:)-1ixrk","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationbartitle(_:)-2v8r4","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationbartitle(_:)-86sd2","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationbartitle(_:displaymode:)-3cq1k","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationbartitle(_:displaymode:)-5brez","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationbartitle(_:displaymode:)-8g45e","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationdocument(_:preview:)-59ybq","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationdocument(_:preview:)-66go8","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationdocument(_:preview:)-6mtfj","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationdocument(_:preview:)-kudz","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationtitle(_:)-1hmc6","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationtitle(_:)-2qdp8","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationtitle(_:)-4jv9m","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationtitle(_:)-66vy6","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationtitle(_:)-pe2w","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/onchange(of:initial:_:)-5smr0","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/onchange(of:initial:_:)-7axyx","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/ondrop(of:delegate:)-71j0i","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/ondrop(of:delegate:)-ja23","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/ondrop(of:istargeted:perform:)-2qnke","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/ondrop(of:istargeted:perform:)-58hqi","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/ondrop(of:istargeted:perform:)-5fy6k","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/ondrop(of:istargeted:perform:)-7kq9g","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/padding(_:)-1jr32","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/padding(_:)-1ohow","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/renameaction(_:)-2djep","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/renameaction(_:)-65dm6","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/safeareainset(edge:alignment:spacing:content:)-3tz6d","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/safeareainset(edge:alignment:spacing:content:)-5473w","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/safeareapadding(_:)-35zef","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/safeareapadding(_:)-lkzm","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/scaleeffect(_:anchor:)-1cd9z","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/scaleeffect(_:anchor:)-ihnk","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1rda7","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6gq6a","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-979f5","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:editabletokens:placement:prompt:token:)-2c3tm","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:editabletokens:placement:prompt:token:)-8rssl","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:editabletokens:placement:prompt:token:)-w520","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:ispresented:placement:prompt:)-6n82r","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:ispresented:placement:prompt:)-832bj","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:ispresented:placement:prompt:)-9po8k","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:placement:prompt:)-5ibka","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:placement:prompt:)-7gscm","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:placement:prompt:)-7oohk","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:placement:prompt:suggestions:)-1yx0h","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:placement:prompt:suggestions:)-5iwpq","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:placement:prompt:suggestions:)-6dx3b","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-507kj","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-5xipx","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-630l7","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:tokens:placement:prompt:token:)-2ticu","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:tokens:placement:prompt:token:)-8h617","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:tokens:placement:prompt:token:)-s8qg","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-1sm51","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-6hyff","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-70k1h","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3n5cb","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-656e0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9ebpb","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/backgroundpickerview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/toolbar(content:)-6h89b","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/toolbar(content:)-8xxw6","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/typeselectequivalent(_:)-2n0zo","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/typeselectequivalent(_:)-330mj","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/typeselectequivalent(_:)-5fdl6","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/typesettinglanguage(_:isenabled:)-8999k","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/typesettinglanguage(_:isenabled:)-9xkbo","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundpickerview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/backgroundpickerview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/backgroundpickerview","title":"BackgroundPickerView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/init(selectedtab:)","title":"init(selectedTab: Binding<ContentView.Tab>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/selectedtab","title":"var selectedTab: ContentView.Tab","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibility(activationpoint:)-9w2em","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibility(activationpoint:)-oer8","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityaction(named:_:)-16olx","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityaction(named:_:)-63ag9","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityaction(named:_:)-8o6am","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityactivationpoint(_:)-6o231","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityactivationpoint(_:)-9gpvc","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilitycustomcontent(_:_:importance:)-102vm","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilitycustomcontent(_:_:importance:)-2bsz9","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilitycustomcontent(_:_:importance:)-3kdjx","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilitycustomcontent(_:_:importance:)-3mips","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilitycustomcontent(_:_:importance:)-6ea9g","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilitycustomcontent(_:_:importance:)-6jdh5","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilitycustomcontent(_:_:importance:)-9tl3p","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilitycustomcontent(_:_:importance:)-i3uh","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityhint(_:)-81k89","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityhint(_:)-8lciz","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityhint(_:)-8mtfk","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityinputlabels(_:)-4ij1h","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityinputlabels(_:)-5r09i","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityinputlabels(_:)-7zzws","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilitylabel(_:)-2p5tn","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilitylabel(_:)-616e5","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilitylabel(_:)-qaqi","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityrotor(_:entries:)-69oe9","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityrotor(_:entries:)-8hb2u","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityrotor(_:entries:)-9e3xd","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityrotor(_:entries:)-kao5","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityrotor(_:entries:entryid:entrylabel:)-32p8e","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7nfzk","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8h50m","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8lvho","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityrotor(_:entries:entrylabel:)-1wdx6","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityrotor(_:entries:entrylabel:)-4cw94","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityrotor(_:entries:entrylabel:)-4j6ci","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityrotor(_:entries:entrylabel:)-9yqqc","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityrotor(_:textranges:)-3ar09","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityrotor(_:textranges:)-586e3","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityrotor(_:textranges:)-9aen9","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityrotor(_:textranges:)-rlm4","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityvalue(_:)-1r9uc","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityvalue(_:)-84fyc","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityvalue(_:)-fl0d","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/alert(_:ispresented:actions:)-1zif1","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/alert(_:ispresented:actions:)-6zu9u","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/alert(_:ispresented:actions:)-9ulud","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/alert(_:ispresented:actions:message:)-2og3u","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/alert(_:ispresented:actions:message:)-8s6vl","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/alert(_:ispresented:actions:message:)-8xnzk","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/alert(_:ispresented:presenting:actions:)-4zptw","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/alert(_:ispresented:presenting:actions:)-6h2wp","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/alert(_:ispresented:presenting:actions:)-jol1","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/alert(_:ispresented:presenting:actions:message:)-4p3hh","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/alert(_:ispresented:presenting:actions:message:)-6se0","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/alert(_:ispresented:presenting:actions:message:)-7cgci","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/alignmentguide(_:computevalue:)-7mci4","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/alignmentguide(_:computevalue:)-9sqp","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/aspectratio(_:contentmode:)-2213t","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/aspectratio(_:contentmode:)-23hfu","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/background(_:in:fillstyle:)-4rmgz","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/background(_:in:fillstyle:)-mtfi","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/background(in:fillstyle:)-2uslk","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/background(in:fillstyle:)-45zyv","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/badge(_:)-2wngk","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/badge(_:)-8cfbo","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/badge(_:)-8sq2g","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/badge(_:)-8wbae","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/buttonstyle(_:)-1mqti","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/buttonstyle(_:)-2q4kx","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartsymbolscale(_:)-7445a","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartsymbolscale(_:)-8rthw","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartsymbolscale(domain:range:)-3xg2p","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartsymbolscale(domain:range:)-5m1gb","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-27usm","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4qis2","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-55r8i","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5g97h","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7q148","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9knob","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-198u1","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1ua36","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9nez4","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2lr8m","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-96jk8","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9sz0x","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/contentmargins(_:_:for:)-25lfx","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/contentmargins(_:_:for:)-3nstq","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/dialogsuppressiontoggle(_:issuppressed:)-239ut","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/dialogsuppressiontoggle(_:issuppressed:)-7r2xt","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/dialogsuppressiontoggle(_:issuppressed:)-lklw","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/filedialogconfirmationlabel(_:)-2jl7y","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/filedialogconfirmationlabel(_:)-42oqy","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/filedialogconfirmationlabel(_:)-8nxqh","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/filedialogmessage(_:)-14ik8","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/filedialogmessage(_:)-39c4t","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/filedialogmessage(_:)-8l4hv","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-47xgi","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8vxfv","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6zb8l","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-7wcez","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4tez2","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-9pl9u","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-7kp7j","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-7o5z8","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fileexporterfilenamelabel(_:)-1q33v","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fileexporterfilenamelabel(_:)-60ue0","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fileexporterfilenamelabel(_:)-87qw3","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/focusedobject(_:)-14trs","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/focusedobject(_:)-v8dm","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/focusedsceneobject(_:)-15lb0","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/focusedsceneobject(_:)-52ke8","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/focusedscenevalue(_:_:)-7pllu","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/focusedscenevalue(_:_:)-83oa2","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/focusedvalue(_:_:)-393p6","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/focusedvalue(_:_:)-9mz7","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/help(_:)-5mox6","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/help(_:)-82jnp","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/help(_:)-jrix","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/keyboardshortcut(_:)-3zlug","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/keyboardshortcut(_:)-62ihk","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/linelimit(_:)-4po4u","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/linelimit(_:)-61dtg","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/linelimit(_:)-637wv","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/linelimit(_:)-9iqbx","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/listitemtint(_:)-3apzo","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/listitemtint(_:)-zz5y","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/listsectionspacing(_:)-8a7dp","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/listsectionspacing(_:)-c2pb","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationbartitle(_:)-3l96g","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationbartitle(_:)-9oz1t","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationbartitle(_:)-u90p","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationbartitle(_:displaymode:)-2x3iw","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationbartitle(_:displaymode:)-6esap","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationbartitle(_:displaymode:)-9w5lj","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationdocument(_:preview:)-3q2rh","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationdocument(_:preview:)-43qqj","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationdocument(_:preview:)-4s0yf","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationdocument(_:preview:)-5yuzi","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationtitle(_:)-2kkxs","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationtitle(_:)-6858b","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationtitle(_:)-6s7n2","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationtitle(_:)-8o9af","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationtitle(_:)-9djuh","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/onchange(of:initial:_:)-1k75v","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/onchange(of:initial:_:)-7kpcm","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/ondrop(of:delegate:)-5f6w8","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/ondrop(of:delegate:)-9spl4","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/ondrop(of:istargeted:perform:)-84iek","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/ondrop(of:istargeted:perform:)-8r7mz","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/ondrop(of:istargeted:perform:)-tf27","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/ondrop(of:istargeted:perform:)-vnti","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/padding(_:)-16trz","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/padding(_:)-4qttx","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/renameaction(_:)-3qnfd","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/renameaction(_:)-99k2h","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/safeareainset(edge:alignment:spacing:content:)-23v1m","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/safeareainset(edge:alignment:spacing:content:)-90c0m","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/safeareapadding(_:)-4v4cp","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/safeareapadding(_:)-5u5ys","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/scaleeffect(_:anchor:)-2jehz","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/scaleeffect(_:anchor:)-6043p","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-24xd0","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4dron","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7ih3n","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:editabletokens:placement:prompt:token:)-27ejg","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:editabletokens:placement:prompt:token:)-838v","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:editabletokens:placement:prompt:token:)-gecm","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:ispresented:placement:prompt:)-3dhwy","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:ispresented:placement:prompt:)-64cz5","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:ispresented:placement:prompt:)-9anbl","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:placement:prompt:)-6sq2l","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:placement:prompt:)-8pfc6","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:placement:prompt:)-8x52i","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:placement:prompt:suggestions:)-4dhjo","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:placement:prompt:suggestions:)-6a2hk","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:placement:prompt:suggestions:)-7tu3u","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:tokens:ispresented:placement:prompt:token:)-23oo7","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:tokens:ispresented:placement:prompt:token:)-5fdk6","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:tokens:ispresented:placement:prompt:token:)-cdio","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:tokens:placement:prompt:token:)-1gg6s","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:tokens:placement:prompt:token:)-5udfk","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:tokens:placement:prompt:token:)-7qlm8","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3ba08","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4tz32","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-7rsg5","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1i7tl","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6dgqu","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-mgwt","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/bottomtabbarview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/toolbar(content:)-3if58","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/toolbar(content:)-7450d","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/typeselectequivalent(_:)-1vgkt","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/typeselectequivalent(_:)-44i1x","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/typeselectequivalent(_:)-8h4vf","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/typesettinglanguage(_:isenabled:)-8tm7d","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/typesettinglanguage(_:isenabled:)-9aki5","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/bottomtabbarview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/bottomtabbarview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/bottomtabbarview","title":"BottomTabBarView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/chartdataset\/init(id:category:amount:color:)","title":"init(id: UUID, category: String, amount: Double, color: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/chartdataset\/amount","title":"var amount: Double","type":"property"},{"path":"\/documentation\/goalsapp\/chartdataset\/category","title":"var category: String","type":"property"},{"path":"\/documentation\/goalsapp\/chartdataset\/color","title":"var color: String","type":"property"},{"path":"\/documentation\/goalsapp\/chartdataset\/id","title":"var id: UUID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/chartdataset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/goalsapp\/chartdataset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/chartdataset","title":"ChartDataSet","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/contentview\/init(saveaction:)","title":"init(saveAction: () -> Void)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/contentview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/goalsapp\/contentview\/saveaction","title":"let saveAction: () -> Void","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/contentview\/tab\/habits","title":"case habits","type":"case"},{"path":"\/documentation\/goalsapp\/contentview\/tab\/newhabit","title":"case newHabit","type":"case"},{"path":"\/documentation\/goalsapp\/contentview\/tab\/stats","title":"case stats","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/contentview\/tab\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/goalsapp\/contentview\/tab\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/contentview\/tab","title":"ContentView.Tab","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/accessibility(activationpoint:)-2fepn","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/accessibility(activationpoint:)-3zkqr","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityaction(named:_:)-207gt","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityaction(named:_:)-24p2c","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityaction(named:_:)-696bi","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityactivationpoint(_:)-10jd1","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityactivationpoint(_:)-16z0","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilitycustomcontent(_:_:importance:)-2lwe8","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilitycustomcontent(_:_:importance:)-6psdf","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilitycustomcontent(_:_:importance:)-8e6fc","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilitycustomcontent(_:_:importance:)-8izlc","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilitycustomcontent(_:_:importance:)-8j7bq","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilitycustomcontent(_:_:importance:)-9eb7z","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilitycustomcontent(_:_:importance:)-nlhk","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilitycustomcontent(_:_:importance:)-wb18","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityhint(_:)-7k9cv","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityhint(_:)-8bqlg","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityhint(_:)-98kvr","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityinputlabels(_:)-78ttb","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityinputlabels(_:)-8zhi4","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityinputlabels(_:)-98hwl","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilitylabel(_:)-3a77f","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilitylabel(_:)-6ab18","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilitylabel(_:)-7xg97","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityrotor(_:entries:)-1zrwt","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityrotor(_:entries:)-5klj8","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityrotor(_:entries:)-6sz8","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityrotor(_:entries:)-nm7h","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3taok","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityrotor(_:entries:entryid:entrylabel:)-4xj6n","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityrotor(_:entries:entryid:entrylabel:)-6a3hf","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityrotor(_:entries:entryid:entrylabel:)-885c0","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityrotor(_:entries:entrylabel:)-1lvnw","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityrotor(_:entries:entrylabel:)-31k4r","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityrotor(_:entries:entrylabel:)-4178o","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityrotor(_:entries:entrylabel:)-4ornp","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityrotor(_:textranges:)-2bxg2","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityrotor(_:textranges:)-3eygf","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityrotor(_:textranges:)-8xfzv","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityrotor(_:textranges:)-95o81","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityvalue(_:)-1eqh9","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityvalue(_:)-36qh6","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityvalue(_:)-976dq","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/alert(_:ispresented:actions:)-68rqb","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/alert(_:ispresented:actions:)-96r69","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/alert(_:ispresented:actions:)-l8bq","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/alert(_:ispresented:actions:message:)-1sbrq","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/alert(_:ispresented:actions:message:)-pkgc","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/alert(_:ispresented:actions:message:)-v54q","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/alert(_:ispresented:presenting:actions:)-213hr","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/alert(_:ispresented:presenting:actions:)-2huz2","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/alert(_:ispresented:presenting:actions:)-4kyoc","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/alert(_:ispresented:presenting:actions:message:)-24w5j","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/alert(_:ispresented:presenting:actions:message:)-3tqac","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/alert(_:ispresented:presenting:actions:message:)-7d2nu","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/alignmentguide(_:computevalue:)-21x12","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/alignmentguide(_:computevalue:)-2aj90","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/aspectratio(_:contentmode:)-2m57h","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/aspectratio(_:contentmode:)-k6mn","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/background(_:in:fillstyle:)-26qte","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/background(_:in:fillstyle:)-59jo7","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/background(in:fillstyle:)-306rf","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/background(in:fillstyle:)-9wuv4","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/badge(_:)-2e3jc","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/badge(_:)-95561","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/badge(_:)-9mfny","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/badge(_:)-zilb","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/buttonstyle(_:)-94lg4","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/buttonstyle(_:)-vx2u","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartsymbolscale(_:)-82hef","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartsymbolscale(_:)-9ujoj","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartsymbolscale(domain:range:)-20urz","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartsymbolscale(domain:range:)-6ikul","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2dxer","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6lkwu","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-82i08","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1ckqu","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3m92o","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4b1nt","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-11r5a","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3r5cg","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-910wn","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1w0gc","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-48aia","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9a7wu","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/contentmargins(_:_:for:)-9nofk","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/contentmargins(_:_:for:)-j7ug","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/dialogsuppressiontoggle(_:issuppressed:)-3chvt","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/dialogsuppressiontoggle(_:issuppressed:)-7brsr","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/dialogsuppressiontoggle(_:issuppressed:)-ldvb","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/filedialogconfirmationlabel(_:)-7yzgl","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/filedialogconfirmationlabel(_:)-9imb3","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/filedialogconfirmationlabel(_:)-9m4fd","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/filedialogmessage(_:)-18acc","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/filedialogmessage(_:)-80jkb","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/filedialogmessage(_:)-9oymu","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5s4pa","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-67l5c","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-25wtq","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-7kxvo","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-15uu2","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-ot08","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-28qsf","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-39bfw","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fileexporterfilenamelabel(_:)-2b0xt","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fileexporterfilenamelabel(_:)-67if6","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fileexporterfilenamelabel(_:)-9rl1v","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/focusedobject(_:)-186xu","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/focusedobject(_:)-1jqrw","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/focusedsceneobject(_:)-37jgx","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/focusedsceneobject(_:)-8c6tq","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/focusedscenevalue(_:_:)-5hnpl","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/focusedscenevalue(_:_:)-9nbvm","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/focusedvalue(_:_:)-8tcyq","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/focusedvalue(_:_:)-9um2q","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/help(_:)-57cga","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/help(_:)-6ef71","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/help(_:)-775ag","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/keyboardshortcut(_:)-1ohov","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/keyboardshortcut(_:)-8k3h3","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/linelimit(_:)-2m1uf","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/linelimit(_:)-2vpkh","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/linelimit(_:)-6t7sx","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/linelimit(_:)-9g0xj","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/listitemtint(_:)-1jwvi","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/listitemtint(_:)-fslp","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/listsectionspacing(_:)-6wugz","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/listsectionspacing(_:)-8nkw","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/navigationbartitle(_:)-7mhr9","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/navigationbartitle(_:)-9cep9","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/navigationbartitle(_:)-qprf","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/navigationbartitle(_:displaymode:)-7o5f2","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/navigationbartitle(_:displaymode:)-aekr","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/navigationbartitle(_:displaymode:)-euyt","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/navigationdocument(_:preview:)-1w3gr","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/navigationdocument(_:preview:)-274fj","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/navigationdocument(_:preview:)-2papm","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/navigationdocument(_:preview:)-9y0d7","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/navigationtitle(_:)-1c807","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/navigationtitle(_:)-2lon3","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/navigationtitle(_:)-8867t","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/navigationtitle(_:)-9g91v","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/navigationtitle(_:)-9tmr8","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/onchange(of:initial:_:)-2frhz","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/onchange(of:initial:_:)-8cme8","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/ondrop(of:delegate:)-7il16","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/ondrop(of:delegate:)-s0z8","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/ondrop(of:istargeted:perform:)-11ep3","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/ondrop(of:istargeted:perform:)-17ske","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/ondrop(of:istargeted:perform:)-83jxn","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/ondrop(of:istargeted:perform:)-967en","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/padding(_:)-5o20u","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/padding(_:)-5vui3","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/renameaction(_:)-11c0x","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/renameaction(_:)-13vsf","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/safeareainset(edge:alignment:spacing:content:)-2vwd8","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/safeareainset(edge:alignment:spacing:content:)-8eek4","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/safeareapadding(_:)-1kbim","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/safeareapadding(_:)-4ngb2","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/scaleeffect(_:anchor:)-51vsd","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/scaleeffect(_:anchor:)-5gc5k","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-2v284","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4gpx0","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7ykoa","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:editabletokens:placement:prompt:token:)-5637m","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:editabletokens:placement:prompt:token:)-6bn42","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:editabletokens:placement:prompt:token:)-6fd70","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:ispresented:placement:prompt:)-2stp7","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:ispresented:placement:prompt:)-4faqk","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:ispresented:placement:prompt:)-8ufjs","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:placement:prompt:)-66in2","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:placement:prompt:)-70gpv","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:placement:prompt:)-q6uh","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/searchable(text:placement:prompt:suggestions:)-2kqg6","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/searchable(text:placement:prompt:suggestions:)-5szr8","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/searchable(text:placement:prompt:suggestions:)-9pggp","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:tokens:ispresented:placement:prompt:token:)-94lay","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:tokens:ispresented:placement:prompt:token:)-gsv6","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:tokens:ispresented:placement:prompt:token:)-pxvy","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:tokens:placement:prompt:token:)-2tk95","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:tokens:placement:prompt:token:)-2ywbk","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:tokens:placement:prompt:token:)-ncrf","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-1bdld","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-377h6","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9wmv2","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1p8c7","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4e8nb","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-rkmb","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/contentview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/toolbar(content:)-33z4r","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/toolbar(content:)-877ls","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/typeselectequivalent(_:)-40gxz","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/typeselectequivalent(_:)-59pjf","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/typeselectequivalent(_:)-632si","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/typesettinglanguage(_:isenabled:)-1xgjz","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/typesettinglanguage(_:isenabled:)-57g72","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/contentview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/contentview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/contentview","title":"ContentView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/edgeborder\/init(width:edges:)","title":"init(width: CGFloat, edges: [Edge])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/edgeborder\/edges","title":"var edges: [Edge]","type":"property"},{"path":"\/documentation\/goalsapp\/edgeborder\/width","title":"var width: CGFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/edgeborder\/path(in:)","title":"func path(in: CGRect) -> Path","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/edgeborder\/animatabledata","title":"var animatableData: EmptyAnimatableData","type":"property"}],"path":"\/documentation\/goalsapp\/edgeborder\/animatable-implementations","title":"Animatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/edgeborder\/layoutdirectionbehavior","title":"var layoutDirectionBehavior: LayoutDirectionBehavior","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/edgeborder\/fill(_:style:)-1yjdz","title":"func fill<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fill(_:style:)-4b1pd","title":"func fill<S>(S, style: FillStyle) -> _ShapeView<Self, S>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fill(style:)","title":"func fill(style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/intersection(_:eofill:)","title":"func intersection<T>(T, eoFill: Bool) -> some Shape","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/lineintersection(_:eofill:)","title":"func lineIntersection<T>(T, eoFill: Bool) -> some Shape","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/linesubtraction(_:eofill:)","title":"func lineSubtraction<T>(T, eoFill: Bool) -> some Shape","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/offset(_:)-6jsfv","title":"func offset(CGPoint) -> OffsetShape<Self>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/offset(_:)-7hw5h","title":"func offset(CGSize) -> OffsetShape<Self>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> OffsetShape<Self>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/rotation(_:anchor:)","title":"func rotation(Angle, anchor: UnitPoint) -> RotatedShape<Self>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scale(_:anchor:)","title":"func scale(CGFloat, anchor: UnitPoint) -> ScaledShape<Self>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scale(x:y:anchor:)","title":"func scale(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> ScaledShape<Self>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/size(_:)","title":"func size(CGSize) -> some Shape","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/size(width:height:)","title":"func size(width: CGFloat, height: CGFloat) -> some Shape","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/sizethatfits(_:)","title":"func sizeThatFits(ProposedViewSize) -> CGSize","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/stroke(_:linewidth:)","title":"func stroke<S>(S, lineWidth: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/stroke(_:linewidth:antialiased:)","title":"func stroke<S>(S, lineWidth: CGFloat, antialiased: Bool) -> StrokeShapeView<Self, S, EmptyView>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/stroke(_:style:)","title":"func stroke<S>(S, style: StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/stroke(_:style:antialiased:)","title":"func stroke<S>(S, style: StrokeStyle, antialiased: Bool) -> StrokeShapeView<Self, S, EmptyView>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/stroke(linewidth:)","title":"func stroke(lineWidth: CGFloat) -> some Shape","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/stroke(style:)","title":"func stroke(style: StrokeStyle) -> some Shape","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/subtracting(_:eofill:)","title":"func subtracting<T>(T, eoFill: Bool) -> some Shape","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/symmetricdifference(_:eofill:)","title":"func symmetricDifference<T>(T, eoFill: Bool) -> some Shape","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/transform(_:)","title":"func transform(CGAffineTransform) -> TransformedShape<Self>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/trim(from:to:)","title":"func trim(from: CGFloat, to: CGFloat) -> some Shape","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/union(_:eofill:)","title":"func union<T>(T, eoFill: Bool) -> some Shape","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/edgeborder\/role","title":"static var role: ShapeRole","type":"property"}],"path":"\/documentation\/goalsapp\/edgeborder\/shape-implementations","title":"Shape Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/edgeborder\/body","title":"var body: _ShapeView<Self, ForegroundStyle>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/accessibility(activationpoint:)-6iww7","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/accessibility(activationpoint:)-9ova3","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityaction(named:_:)-1omea","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityaction(named:_:)-297lz","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityaction(named:_:)-3lpbl","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityactivationpoint(_:)-831ft","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityactivationpoint(_:)-9vi3q","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilitycustomcontent(_:_:importance:)-1he1r","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilitycustomcontent(_:_:importance:)-26q2q","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilitycustomcontent(_:_:importance:)-3wnqw","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilitycustomcontent(_:_:importance:)-4m7qy","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilitycustomcontent(_:_:importance:)-86ziv","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilitycustomcontent(_:_:importance:)-8af56","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilitycustomcontent(_:_:importance:)-945lq","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilitycustomcontent(_:_:importance:)-9kldj","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityhint(_:)-2pmzr","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityhint(_:)-6gi3y","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityhint(_:)-9fpur","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityinputlabels(_:)-2k7ec","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityinputlabels(_:)-7xim4","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityinputlabels(_:)-kg6q","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilitylabel(_:)-27dft","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilitylabel(_:)-4n2sz","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilitylabel(_:)-81vgw","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityrotor(_:entries:)-10l6z","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityrotor(_:entries:)-2ha9n","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityrotor(_:entries:)-6muz1","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityrotor(_:entries:)-73fi8","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityrotor(_:entries:entryid:entrylabel:)-1epe4","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityrotor(_:entries:entryid:entrylabel:)-4srij","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityrotor(_:entries:entryid:entrylabel:)-56j5m","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityrotor(_:entries:entryid:entrylabel:)-7kpe1","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityrotor(_:entries:entrylabel:)-2acb6","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityrotor(_:entries:entrylabel:)-2hkgg","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityrotor(_:entries:entrylabel:)-3z006","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityrotor(_:entries:entrylabel:)-6buhr","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityrotor(_:textranges:)-2cp84","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityrotor(_:textranges:)-4q5xv","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityrotor(_:textranges:)-5yb6v","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityrotor(_:textranges:)-8wk53","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityvalue(_:)-58z10","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityvalue(_:)-5fegm","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityvalue(_:)-7xizm","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/alert(_:ispresented:actions:)-4yt40","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/alert(_:ispresented:actions:)-75ytj","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/alert(_:ispresented:actions:)-83kur","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/alert(_:ispresented:actions:message:)-3v3fo","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/alert(_:ispresented:actions:message:)-5lqqn","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/alert(_:ispresented:actions:message:)-jo25","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/alert(_:ispresented:presenting:actions:)-4ixxs","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/alert(_:ispresented:presenting:actions:)-8vm1c","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/alert(_:ispresented:presenting:actions:)-9bfe","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/alert(_:ispresented:presenting:actions:message:)-40wil","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/alert(_:ispresented:presenting:actions:message:)-46w0a","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/alert(_:ispresented:presenting:actions:message:)-98oo9","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/alignmentguide(_:computevalue:)-6ncbz","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/alignmentguide(_:computevalue:)-75nra","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/aspectratio(_:contentmode:)-3ad0f","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/aspectratio(_:contentmode:)-5d3rh","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/background(_:in:fillstyle:)-1k3b0","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/background(_:in:fillstyle:)-8cfml","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/background(in:fillstyle:)-6gzny","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/background(in:fillstyle:)-9uif9","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/badge(_:)-2mrun","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/badge(_:)-68la9","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/badge(_:)-91hrv","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/badge(_:)-bmv4","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/buttonstyle(_:)-3av1j","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/buttonstyle(_:)-6bg8h","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartsymbolscale(_:)-211j3","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartsymbolscale(_:)-9plan","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartsymbolscale(domain:range:)-7jkti","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartsymbolscale(domain:range:)-8lvvn","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2c7tk","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2jo03","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9jna3","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2ckff","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2ud76","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9nqn2","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1j2md","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-67r8n","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7ms7a","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-37vxd","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-52mi6","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6tx3f","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/contentmargins(_:_:for:)-76uhu","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/contentmargins(_:_:for:)-zvk6","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/dialogsuppressiontoggle(_:issuppressed:)-39euc","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/dialogsuppressiontoggle(_:issuppressed:)-5wjz4","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/dialogsuppressiontoggle(_:issuppressed:)-wwgi","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/filedialogconfirmationlabel(_:)-4v4ws","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/filedialogconfirmationlabel(_:)-52kn7","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/filedialogconfirmationlabel(_:)-74qvb","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/filedialogmessage(_:)-15kcu","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/filedialogmessage(_:)-5atj4","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/filedialogmessage(_:)-lgpi","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7xpdz","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8hzb2","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-4iwqy","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-4pwjz","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1y6mt","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fileexporter(ispresented:documents:contenttype:oncompletion:)-2e0iy","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-7a8y5","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-9qf5d","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fileexporterfilenamelabel(_:)-1oot9","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fileexporterfilenamelabel(_:)-5efm1","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fileexporterfilenamelabel(_:)-hi0j","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/focusedobject(_:)-5mamj","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/focusedobject(_:)-9y9nt","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/focusedsceneobject(_:)-5l214","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/focusedsceneobject(_:)-8lb67","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/focusedscenevalue(_:_:)-1fz29","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/focusedscenevalue(_:_:)-6a2pc","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/focusedvalue(_:_:)-75ss7","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/focusedvalue(_:_:)-bgmk","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/help(_:)-2sl02","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/help(_:)-303v2","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/help(_:)-irzv","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/keyboardshortcut(_:)-9y05d","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/keyboardshortcut(_:)-ugkt","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/linelimit(_:)-1hmqx","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/linelimit(_:)-231wi","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/linelimit(_:)-2gjqy","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/linelimit(_:)-56eeu","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/listitemtint(_:)-2skfp","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/listitemtint(_:)-41lpd","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/listsectionspacing(_:)-4kvjs","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/listsectionspacing(_:)-ux32","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/navigationbartitle(_:)-1h0gv","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/navigationbartitle(_:)-39jk6","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/navigationbartitle(_:)-4r9ul","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/navigationbartitle(_:displaymode:)-24lmn","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/navigationbartitle(_:displaymode:)-6dvxz","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/navigationbartitle(_:displaymode:)-8co9m","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/navigationdocument(_:preview:)-2103e","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/navigationdocument(_:preview:)-40g11","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/navigationdocument(_:preview:)-9a9hg","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/navigationdocument(_:preview:)-w74a","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/navigationtitle(_:)-58q2l","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/navigationtitle(_:)-6cmkn","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/navigationtitle(_:)-71v9r","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/navigationtitle(_:)-9p9kl","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/navigationtitle(_:)-9woxr","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/offset(_:)-3vruy","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/onchange(of:initial:_:)-77goo","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/onchange(of:initial:_:)-80e4j","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/ondrop(of:delegate:)-3ewwq","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/ondrop(of:delegate:)-3zg4z","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/ondrop(of:istargeted:perform:)-4qjmg","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/ondrop(of:istargeted:perform:)-55bpp","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/ondrop(of:istargeted:perform:)-8c56a","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/ondrop(of:istargeted:perform:)-8ffse","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/padding(_:)-691ei","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/padding(_:)-6cd2h","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/renameaction(_:)-1pmfr","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/renameaction(_:)-3a4nv","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/safeareainset(edge:alignment:spacing:content:)-3g4tl","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/safeareainset(edge:alignment:spacing:content:)-ay7q","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/safeareapadding(_:)-1ajd5","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/safeareapadding(_:)-8k5tc","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scaleeffect(_:anchor:)-9ydcx","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scaleeffect(_:anchor:)-fhnt","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-2n321","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6wku6","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-8nfmp","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:editabletokens:placement:prompt:token:)-3fhxv","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:editabletokens:placement:prompt:token:)-8y1vi","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:editabletokens:placement:prompt:token:)-9xquw","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:ispresented:placement:prompt:)-1f88t","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:ispresented:placement:prompt:)-7wlxl","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:ispresented:placement:prompt:)-9k9wq","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:placement:prompt:)-26cr6","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:placement:prompt:)-5ma29","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:placement:prompt:)-88j0s","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:placement:prompt:suggestions:)-1zoti","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:placement:prompt:suggestions:)-2ht28","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:placement:prompt:suggestions:)-toom","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:tokens:ispresented:placement:prompt:token:)-35jwt","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:tokens:ispresented:placement:prompt:token:)-okc1","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:tokens:ispresented:placement:prompt:token:)-wf2u","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:tokens:placement:prompt:token:)-1htw9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:tokens:placement:prompt:token:)-2u6qp","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:tokens:placement:prompt:token:)-4kpif","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3sl9d","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-5w2uz","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-k1wh","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5jyid","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5o1n1","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-xtej","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/edgeborder\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/toolbar(content:)-4ldg6","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/toolbar(content:)-8uekd","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/typeselectequivalent(_:)-1c1zi","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/typeselectequivalent(_:)-3yk0s","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/typeselectequivalent(_:)-9sagr","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/typesettinglanguage(_:isenabled:)-86a4w","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/typesettinglanguage(_:isenabled:)-s6io","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/edgeborder\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/edgeborder\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/edgeborder","title":"EdgeBorder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/errorview\/init(errorwrapper:)","title":"init(errorWrapper: ErrorWrapper)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/errorview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/goalsapp\/errorview\/errorwrapper","title":"let errorWrapper: ErrorWrapper","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/accessibility(activationpoint:)-4mkwz","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/accessibility(activationpoint:)-9f2q6","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityaction(named:_:)-2a5yi","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityaction(named:_:)-5b3ag","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityaction(named:_:)-5zjt8","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityactivationpoint(_:)-6v701","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityactivationpoint(_:)-91fg5","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilitycustomcontent(_:_:importance:)-13ido","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilitycustomcontent(_:_:importance:)-1d3eh","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilitycustomcontent(_:_:importance:)-2ujeb","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilitycustomcontent(_:_:importance:)-3na1i","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilitycustomcontent(_:_:importance:)-4if5m","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilitycustomcontent(_:_:importance:)-4xk56","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilitycustomcontent(_:_:importance:)-52eqx","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilitycustomcontent(_:_:importance:)-j8dj","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityhint(_:)-2vrkd","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityhint(_:)-7qeix","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityhint(_:)-9lnxg","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityinputlabels(_:)-1q59i","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityinputlabels(_:)-2bl00","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityinputlabels(_:)-5nuxy","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilitylabel(_:)-182fc","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilitylabel(_:)-4zl7q","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilitylabel(_:)-7qjzv","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityrotor(_:entries:)-1eaap","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityrotor(_:entries:)-1pgp0","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityrotor(_:entries:)-8r2xt","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityrotor(_:entries:)-9ve0u","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityrotor(_:entries:entryid:entrylabel:)-4r4wk","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityrotor(_:entries:entryid:entrylabel:)-5hkuv","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityrotor(_:entries:entryid:entrylabel:)-bcob","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityrotor(_:entries:entryid:entrylabel:)-ubwq","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityrotor(_:entries:entrylabel:)-3k126","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityrotor(_:entries:entrylabel:)-4mfq1","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityrotor(_:entries:entrylabel:)-6l5y8","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityrotor(_:entries:entrylabel:)-8y361","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityrotor(_:textranges:)-2grn4","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityrotor(_:textranges:)-46qax","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityrotor(_:textranges:)-9h9u9","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityrotor(_:textranges:)-k9wz","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityvalue(_:)-1a4dq","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityvalue(_:)-4xhc1","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityvalue(_:)-9frze","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/alert(_:ispresented:actions:)-494ay","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/alert(_:ispresented:actions:)-61q52","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/alert(_:ispresented:actions:)-8z2qc","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/alert(_:ispresented:actions:message:)-1q838","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/alert(_:ispresented:actions:message:)-2gvio","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/alert(_:ispresented:actions:message:)-59vwd","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/alert(_:ispresented:presenting:actions:)-3fcgb","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/alert(_:ispresented:presenting:actions:)-5lisi","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/alert(_:ispresented:presenting:actions:)-5zwot","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/alert(_:ispresented:presenting:actions:message:)-3oe1o","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/alert(_:ispresented:presenting:actions:message:)-3syn0","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/alert(_:ispresented:presenting:actions:message:)-4cel4","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/alignmentguide(_:computevalue:)-1jlnf","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/alignmentguide(_:computevalue:)-735nc","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/aspectratio(_:contentmode:)-5e17f","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/aspectratio(_:contentmode:)-9y3kp","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/background(_:in:fillstyle:)-8y3e5","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/background(_:in:fillstyle:)-rnhl","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/background(in:fillstyle:)-2me4k","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/background(in:fillstyle:)-7oks1","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/badge(_:)-2wyu1","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/badge(_:)-3leof","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/badge(_:)-95qyq","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/badge(_:)-r7co","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/buttonstyle(_:)-16ibb","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/buttonstyle(_:)-qspx","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartsymbolscale(_:)-337ds","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartsymbolscale(_:)-3l19d","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartsymbolscale(domain:range:)-36uxw","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartsymbolscale(domain:range:)-ktd","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-18u28","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-25aem","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6tabo","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1g0c2","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2imf6","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-p6is","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4qiz7","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6i80p","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7lz7h","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1v6ws","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7mxpy","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9bw2g","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/contentmargins(_:_:for:)-2wpu4","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/contentmargins(_:_:for:)-4wjnp","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/dialogsuppressiontoggle(_:issuppressed:)-11n7r","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/dialogsuppressiontoggle(_:issuppressed:)-1qm58","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/dialogsuppressiontoggle(_:issuppressed:)-5ma77","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/filedialogconfirmationlabel(_:)-2t5e5","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/filedialogconfirmationlabel(_:)-2upt8","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/filedialogconfirmationlabel(_:)-77sun","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/filedialogmessage(_:)-19qot","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/filedialogmessage(_:)-7bfdj","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/filedialogmessage(_:)-81f5t","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3xqjx","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4i852","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-44wri","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-my5h","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-21ydj","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8gatr","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-7b94o","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-8uyk5","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fileexporterfilenamelabel(_:)-3213y","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fileexporterfilenamelabel(_:)-6eia8","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fileexporterfilenamelabel(_:)-9a9f","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/focusedobject(_:)-5kom1","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/focusedobject(_:)-5liu7","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/focusedsceneobject(_:)-2wpg4","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/focusedsceneobject(_:)-6oto0","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/focusedscenevalue(_:_:)-4trwn","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/focusedscenevalue(_:_:)-8qyt1","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/focusedvalue(_:_:)-21ohj","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/focusedvalue(_:_:)-2cu4i","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/help(_:)-7jys7","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/help(_:)-7v5li","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/help(_:)-9388x","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/keyboardshortcut(_:)-134ng","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/keyboardshortcut(_:)-8ih2e","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/linelimit(_:)-1tdx6","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/linelimit(_:)-21405","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/linelimit(_:)-4x4at","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/linelimit(_:)-5kaqr","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/listitemtint(_:)-4imek","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/listitemtint(_:)-9vtnr","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/listsectionspacing(_:)-4vtit","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/listsectionspacing(_:)-94edc","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/navigationbartitle(_:)-2yqml","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/navigationbartitle(_:)-4tipq","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/navigationbartitle(_:)-dtr9","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/navigationbartitle(_:displaymode:)-1qs42","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/navigationbartitle(_:displaymode:)-1uw8h","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/navigationbartitle(_:displaymode:)-7620q","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/navigationdocument(_:preview:)-2ubbb","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/navigationdocument(_:preview:)-3514m","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/navigationdocument(_:preview:)-458m6","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/navigationdocument(_:preview:)-8aff0","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/navigationtitle(_:)-6egx5","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/navigationtitle(_:)-6mh7k","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/navigationtitle(_:)-8m0wu","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/navigationtitle(_:)-95awc","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/navigationtitle(_:)-9yirk","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/onchange(of:initial:_:)-4jwl5","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/onchange(of:initial:_:)-5jabt","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/ondrop(of:delegate:)-1i42r","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/ondrop(of:delegate:)-6tkot","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/ondrop(of:istargeted:perform:)-19qbv","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/ondrop(of:istargeted:perform:)-2j6u3","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/ondrop(of:istargeted:perform:)-4y9pr","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/ondrop(of:istargeted:perform:)-mav5","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/padding(_:)-4xe85","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/padding(_:)-8h7mq","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/renameaction(_:)-2c57u","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/renameaction(_:)-5edou","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/safeareainset(edge:alignment:spacing:content:)-63u40","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/safeareainset(edge:alignment:spacing:content:)-78gva","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/safeareapadding(_:)-7j2or","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/safeareapadding(_:)-ytch","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/scaleeffect(_:anchor:)-6ft6m","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/scaleeffect(_:anchor:)-8cyqe","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1dxfp","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1ppxm","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-9pg89","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:editabletokens:placement:prompt:token:)-6bwcj","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:editabletokens:placement:prompt:token:)-8uxk7","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:editabletokens:placement:prompt:token:)-fu63","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:ispresented:placement:prompt:)-16wlq","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:ispresented:placement:prompt:)-1jzt2","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:ispresented:placement:prompt:)-2u748","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:placement:prompt:)-3jzrd","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:placement:prompt:)-7wytn","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:placement:prompt:)-zqff","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/searchable(text:placement:prompt:suggestions:)-2x42v","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/searchable(text:placement:prompt:suggestions:)-ygan","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/searchable(text:placement:prompt:suggestions:)-zg7s","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:tokens:ispresented:placement:prompt:token:)-4o6zp","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:tokens:ispresented:placement:prompt:token:)-7r2p4","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:tokens:ispresented:placement:prompt:token:)-8wxft","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:tokens:placement:prompt:token:)-1187u","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:tokens:placement:prompt:token:)-21u9t","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:tokens:placement:prompt:token:)-7dvj2","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-31bsd","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4iezi","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-90xt1","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-61xjp","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6cvf8","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-avx7","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/errorview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/toolbar(content:)-3j0b6","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/toolbar(content:)-3z16b","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/typeselectequivalent(_:)-1l6ng","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/typeselectequivalent(_:)-6p3fg","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/typeselectequivalent(_:)-6ravl","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/typesettinglanguage(_:isenabled:)-2dfhx","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/typesettinglanguage(_:isenabled:)-3riwl","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/errorview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/errorview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/errorview","title":"ErrorView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/errorview_previews\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/errorview_previews\/previews","title":"static var previews: some View","type":"property"},{"path":"\/documentation\/goalsapp\/errorview_previews\/wrapper","title":"static var wrapper: ErrorWrapper","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/errorview_previews\/sampleerror\/errorrequired","title":"case errorRequired","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/errorview_previews\/sampleerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/goalsapp\/errorview_previews\/sampleerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/errorview_previews\/sampleerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/goalsapp\/errorview_previews\/sampleerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/errorview_previews\/sampleerror","title":"ErrorView_Previews.SampleError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/errorview_previews\/platform","title":"static var platform: PreviewPlatform?","type":"property"}],"path":"\/documentation\/goalsapp\/errorview_previews\/previewprovider-implementations","title":"PreviewProvider Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/errorview_previews","title":"ErrorView_Previews","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/errorwrapper\/init(id:error:guidance:)","title":"init(id: UUID, error: Error, guidance: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/errorwrapper\/error","title":"let error: Error","type":"property"},{"path":"\/documentation\/goalsapp\/errorwrapper\/guidance","title":"let guidance: String","type":"property"},{"path":"\/documentation\/goalsapp\/errorwrapper\/id","title":"let id: UUID","type":"property"}],"path":"\/documentation\/goalsapp\/errorwrapper","title":"ErrorWrapper","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/init(habit:)","title":"init(habit: Binding<Habit>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/habit","title":"var habit: Habit","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/calcpercent()","title":"func calcPercent() -> CGFloat","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibility(activationpoint:)-23zkv","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibility(activationpoint:)-3a2yb","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityaction(named:_:)-1lr7g","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityaction(named:_:)-6sdls","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityaction(named:_:)-x7pi","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityactivationpoint(_:)-4ra6r","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityactivationpoint(_:)-hsno","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilitycustomcontent(_:_:importance:)-23oeb","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilitycustomcontent(_:_:importance:)-4hvoc","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilitycustomcontent(_:_:importance:)-5sjhz","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilitycustomcontent(_:_:importance:)-6ex81","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilitycustomcontent(_:_:importance:)-7qe77","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilitycustomcontent(_:_:importance:)-933bj","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilitycustomcontent(_:_:importance:)-kr43","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilitycustomcontent(_:_:importance:)-m92","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityhint(_:)-56aod","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityhint(_:)-5mga3","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityhint(_:)-9ckv7","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityinputlabels(_:)-41cql","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityinputlabels(_:)-7tkev","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityinputlabels(_:)-9vqd7","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilitylabel(_:)-2ywcv","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilitylabel(_:)-62x33","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilitylabel(_:)-9jtic","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityrotor(_:entries:)-2b6f0","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityrotor(_:entries:)-4m798","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityrotor(_:entries:)-7y3xw","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityrotor(_:entries:)-8rezg","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityrotor(_:entries:entryid:entrylabel:)-2owmk","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityrotor(_:entries:entryid:entrylabel:)-30h0s","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityrotor(_:entries:entryid:entrylabel:)-54jzq","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityrotor(_:entries:entryid:entrylabel:)-60ynd","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityrotor(_:entries:entrylabel:)-3f10w","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityrotor(_:entries:entrylabel:)-58r7c","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityrotor(_:entries:entrylabel:)-5y2hw","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityrotor(_:entries:entrylabel:)-8tzm9","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityrotor(_:textranges:)-1bmwe","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityrotor(_:textranges:)-3zqlb","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityrotor(_:textranges:)-4jdkv","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityrotor(_:textranges:)-8z8iz","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityvalue(_:)-4w5j5","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityvalue(_:)-5uadl","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityvalue(_:)-f7f8","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/alert(_:ispresented:actions:)-3vwmw","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/alert(_:ispresented:actions:)-6o0fz","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/alert(_:ispresented:actions:)-92hyf","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/alert(_:ispresented:actions:message:)-5kt0r","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/alert(_:ispresented:actions:message:)-pebh","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/alert(_:ispresented:actions:message:)-yqbp","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/alert(_:ispresented:presenting:actions:)-1l5tl","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/alert(_:ispresented:presenting:actions:)-6o2tj","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/alert(_:ispresented:presenting:actions:)-8per6","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/alert(_:ispresented:presenting:actions:message:)-2qh7a","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/alert(_:ispresented:presenting:actions:message:)-5ewmv","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/alert(_:ispresented:presenting:actions:message:)-910eb","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/alignmentguide(_:computevalue:)-2kwbk","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/alignmentguide(_:computevalue:)-bfz1","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/aspectratio(_:contentmode:)-1fbje","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/aspectratio(_:contentmode:)-5r8t5","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/background(_:in:fillstyle:)-1idal","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/background(_:in:fillstyle:)-1xndm","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/background(in:fillstyle:)-8it2","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/background(in:fillstyle:)-99vam","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/badge(_:)-2jf41","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/badge(_:)-5riyx","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/badge(_:)-60gza","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/badge(_:)-8x4jm","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/buttonstyle(_:)-21rwt","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/buttonstyle(_:)-9j5y9","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartsymbolscale(_:)-1ljcc","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartsymbolscale(_:)-7le8s","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartsymbolscale(domain:range:)-77w92","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartsymbolscale(domain:range:)-8ujy2","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-18818","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-32s57","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5q4mo","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5s3de","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-96t3i","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-x9kj","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1koy3","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2j4hs","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-792tj","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-14c9x","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2f076","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4wik","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/contentmargins(_:_:for:)-3lndp","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/contentmargins(_:_:for:)-4k8hl","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/dialogsuppressiontoggle(_:issuppressed:)-1wuzz","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/dialogsuppressiontoggle(_:issuppressed:)-6r6ir","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/dialogsuppressiontoggle(_:issuppressed:)-75qmi","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/filedialogconfirmationlabel(_:)-10ae2","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/filedialogconfirmationlabel(_:)-603n7","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/filedialogconfirmationlabel(_:)-9d16q","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/filedialogmessage(_:)-1z9ix","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/filedialogmessage(_:)-6ri35","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/filedialogmessage(_:)-ojuz","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3rdh5","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-6i7eb","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-5um6g","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-8lupc","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-3aoo7","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-cud1","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-7njt7","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-nmrh","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fileexporterfilenamelabel(_:)-2jtzl","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fileexporterfilenamelabel(_:)-5veu4","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fileexporterfilenamelabel(_:)-9bhdk","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/focusedobject(_:)-35vxo","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/focusedobject(_:)-63s8u","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/focusedsceneobject(_:)-794rk","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/focusedsceneobject(_:)-89umh","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/focusedscenevalue(_:_:)-88lyw","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/focusedscenevalue(_:_:)-x58a","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/focusedvalue(_:_:)-2u3sn","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/focusedvalue(_:_:)-7vd26","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/help(_:)-15oj2","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/help(_:)-1hl66","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/help(_:)-2zrka","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/keyboardshortcut(_:)-48p0w","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/keyboardshortcut(_:)-896pc","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/linelimit(_:)-23j9o","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/linelimit(_:)-305bk","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/linelimit(_:)-3occu","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/linelimit(_:)-6tuby","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/listitemtint(_:)-9hou1","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/listitemtint(_:)-xxo2","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/listsectionspacing(_:)-2f2pz","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/listsectionspacing(_:)-6j7x5","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationbartitle(_:)-9yi8c","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationbartitle(_:)-v3eu","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationbartitle(_:)-wjxl","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationbartitle(_:displaymode:)-25urf","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationbartitle(_:displaymode:)-5n0te","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationbartitle(_:displaymode:)-66k40","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationdocument(_:preview:)-3lc6p","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationdocument(_:preview:)-4j8ma","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationdocument(_:preview:)-7oh7n","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationdocument(_:preview:)-9j3nh","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationtitle(_:)-1pd8b","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationtitle(_:)-1zdys","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationtitle(_:)-3ch6i","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationtitle(_:)-45ge1","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationtitle(_:)-5n7lt","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/onchange(of:initial:_:)-7l3bg","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/onchange(of:initial:_:)-qsc1","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/ondrop(of:delegate:)-1mkf9","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/ondrop(of:delegate:)-9v8rr","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/ondrop(of:istargeted:perform:)-1fa1a","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/ondrop(of:istargeted:perform:)-20dba","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/ondrop(of:istargeted:perform:)-33v0a","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/ondrop(of:istargeted:perform:)-50187","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/padding(_:)-1fqw7","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/padding(_:)-5pqvc","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/renameaction(_:)-3wkq9","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/renameaction(_:)-4rs5g","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/safeareainset(edge:alignment:spacing:content:)-5exq1","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/safeareainset(edge:alignment:spacing:content:)-84t24","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/safeareapadding(_:)-2tojf","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/safeareapadding(_:)-3taji","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/scaleeffect(_:anchor:)-4tagz","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/scaleeffect(_:anchor:)-77c0e","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3bq84","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3ukpv","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-989yf","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:editabletokens:placement:prompt:token:)-3z2ii","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:editabletokens:placement:prompt:token:)-6c8t6","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:editabletokens:placement:prompt:token:)-6psde","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:ispresented:placement:prompt:)-41twm","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:ispresented:placement:prompt:)-68yqc","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:ispresented:placement:prompt:)-7ezmu","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:placement:prompt:)-4cffl","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:placement:prompt:)-90uti","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:placement:prompt:)-aa0o","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:placement:prompt:suggestions:)-33jg0","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:placement:prompt:suggestions:)-76yy8","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:placement:prompt:suggestions:)-u8ij","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6xlpa","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:tokens:ispresented:placement:prompt:token:)-8t0qg","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:tokens:ispresented:placement:prompt:token:)-99y9s","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:tokens:placement:prompt:token:)-1h61c","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:tokens:placement:prompt:token:)-38w17","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:tokens:placement:prompt:token:)-6nevc","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-8rb7r","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9gfx1","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9t3mv","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2jojs","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-5pjt","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-k6xj","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/expandedhabitcardview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/toolbar(content:)-2dlug","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/toolbar(content:)-2hxx3","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/typeselectequivalent(_:)-5umbq","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/typeselectequivalent(_:)-9m4mu","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/typeselectequivalent(_:)-jxni","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/typesettinglanguage(_:isenabled:)-92cdb","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/typesettinglanguage(_:isenabled:)-gu7h","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/expandedhabitcardview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/expandedhabitcardview","title":"ExpandedHabitCardView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview_previews\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview_previews\/habit","title":"static var habit: Habit","type":"property"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview_previews\/previews","title":"static var previews: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/expandedhabitcardview_previews\/platform","title":"static var platform: PreviewPlatform?","type":"property"}],"path":"\/documentation\/goalsapp\/expandedhabitcardview_previews\/previewprovider-implementations","title":"PreviewProvider Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/expandedhabitcardview_previews","title":"ExpandedHabitCardView_Previews","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/goalsapp\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/goalsapp\/body","title":"var body: some Scene","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/goalsapp\/scheduleapprefresh()","title":"func scheduleAppRefresh()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/goalsapp\/main()","title":"static func main()","type":"method"}],"path":"\/documentation\/goalsapp\/goalsapp\/app-implementations","title":"App Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/goalsapp","title":"GoalsApp","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/goalsapp\/habit\/init(id:title:content:theme:streak:frequency:)","title":"init(id: UUID, title: String, content: String, theme: HabitTheme, streak: Int, frequency: Frequency)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/accent","title":"var accent: Accent","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/activedays","title":"var activeDays: [Days]","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/celebration","title":"var celebration: Int","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/content","title":"var content: String","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/currentamount","title":"var currentAmount: Int","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/datecreated","title":"var dateCreated: Date","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/datescompleted","title":"var datesCompleted: [Date]","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/duedate","title":"var dueDate: Date","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/enddate","title":"var endDate: Date","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/frequency-swift.property","title":"var frequency: Frequency","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/goalamount","title":"var goalAmount: Int","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/habittotalattempts","title":"var habitTotalAttempts: Int","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/habittotalpercentagecompleted","title":"var habitTotalPercentageCompleted: Double","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/habittotalpercentagemissed","title":"var habitTotalPercentageMissed: Double","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/hasenddate","title":"var hasEndDate: Bool","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/higheststreak","title":"var highestStreak: Int","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/icon","title":"var icon: String","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/id","title":"var id: UUID","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/inactivedays","title":"var inactiveDays: [Days]","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/iscomplete","title":"var isComplete: Bool","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/isskipped","title":"var isSkipped: Bool","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/misseddays_andamount","title":"var missedDays_andAmount: [Date : Int]","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/notificationmessage","title":"var notificationMessage: String","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/notificationtime","title":"var notificationTime: Date","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/notifications","title":"var notifications: Bool","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/period","title":"var period: (start: Date, end: Date)","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/periodcompletionrate","title":"var periodCompletionRate: Double","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/priority-swift.property","title":"var priority: Priority","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/skippeddays","title":"var skippedDays: [Date]","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/streak","title":"var streak: Int","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/theme","title":"var theme: HabitTheme","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/title","title":"var title: String","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/todo","title":"var toDo: Bool","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/totalcompleted","title":"var totalCompleted: Int","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/totalmissed","title":"var totalMissed: Int","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/totalskipped","title":"var totalSkipped: Int","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/unitname","title":"var unitName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/addactiveday(day:)","title":"func addActiveDay(day: Days)","type":"method"},{"path":"\/documentation\/goalsapp\/habit\/hit()","title":"func hit()","type":"method"},{"path":"\/documentation\/goalsapp\/habit\/markcomplete()","title":"func markComplete()","type":"method"},{"path":"\/documentation\/goalsapp\/habit\/markincomplete()","title":"func markIncomplete()","type":"method"},{"path":"\/documentation\/goalsapp\/habit\/missed()","title":"func missed()","type":"method"},{"path":"\/documentation\/goalsapp\/habit\/removeactiveday(day:)","title":"func removeActiveDay(day: Days)","type":"method"},{"path":"\/documentation\/goalsapp\/habit\/toggleskipped()","title":"func toggleSkipped()","type":"method"},{"path":"\/documentation\/goalsapp\/habit\/update()","title":"func update()","type":"method"},{"path":"\/documentation\/goalsapp\/habit\/updatecompletionpercentage()","title":"func updateCompletionPercentage()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/emptyhabit","title":"static var emptyHabit: Habit","type":"property"},{"path":"\/documentation\/goalsapp\/habit\/testhabits","title":"static let testHabits: [Habit]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/days\/friday","title":"case Friday","type":"case"},{"path":"\/documentation\/goalsapp\/habit\/days\/monday","title":"case Monday","type":"case"},{"path":"\/documentation\/goalsapp\/habit\/days\/saturday","title":"case Saturday","type":"case"},{"path":"\/documentation\/goalsapp\/habit\/days\/sunday","title":"case Sunday","type":"case"},{"path":"\/documentation\/goalsapp\/habit\/days\/thursday","title":"case Thursday","type":"case"},{"path":"\/documentation\/goalsapp\/habit\/days\/tuesday","title":"case Tuesday","type":"case"},{"path":"\/documentation\/goalsapp\/habit\/days\/wednesday","title":"case Wednesday","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/days\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/days\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/goalsapp\/habit\/days\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/days\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/days\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/days\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/goalsapp\/habit\/days\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/goalsapp\/habit\/days\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/habit\/days","title":"Habit.Days","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/frequency-swift.enum\/daily","title":"case daily","type":"case"},{"path":"\/documentation\/goalsapp\/habit\/frequency-swift.enum\/monthly","title":"case monthly","type":"case"},{"path":"\/documentation\/goalsapp\/habit\/frequency-swift.enum\/weekly","title":"case weekly","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/frequency-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/frequency-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/goalsapp\/habit\/frequency-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/frequency-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/frequency-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/frequency-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/goalsapp\/habit\/frequency-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/goalsapp\/habit\/frequency-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/habit\/frequency-swift.enum","title":"Habit.Frequency","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/priority-swift.enum\/high","title":"case high","type":"case"},{"path":"\/documentation\/goalsapp\/habit\/priority-swift.enum\/low","title":"case low","type":"case"},{"path":"\/documentation\/goalsapp\/habit\/priority-swift.enum\/medium","title":"case medium","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/priority-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/priority-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/goalsapp\/habit\/priority-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/priority-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/priority-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/priority-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/goalsapp\/habit\/priority-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/goalsapp\/habit\/priority-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/habit\/priority-swift.enum","title":"Habit.Priority","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/units\/count","title":"case count","type":"case"},{"path":"\/documentation\/goalsapp\/habit\/units\/days","title":"case days","type":"case"},{"path":"\/documentation\/goalsapp\/habit\/units\/drinks","title":"case drinks","type":"case"},{"path":"\/documentation\/goalsapp\/habit\/units\/hrs","title":"case hrs","type":"case"},{"path":"\/documentation\/goalsapp\/habit\/units\/km","title":"case km","type":"case"},{"path":"\/documentation\/goalsapp\/habit\/units\/lbs","title":"case lbs","type":"case"},{"path":"\/documentation\/goalsapp\/habit\/units\/miles","title":"case miles","type":"case"},{"path":"\/documentation\/goalsapp\/habit\/units\/mins","title":"case mins","type":"case"},{"path":"\/documentation\/goalsapp\/habit\/units\/none","title":"case none","type":"case"},{"path":"\/documentation\/goalsapp\/habit\/units\/oz","title":"case oz","type":"case"},{"path":"\/documentation\/goalsapp\/habit\/units\/reps","title":"case reps","type":"case"},{"path":"\/documentation\/goalsapp\/habit\/units\/steps","title":"case steps","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/units\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/units\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/goalsapp\/habit\/units\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/units\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/units\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/units\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/goalsapp\/habit\/units\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/goalsapp\/habit\/units\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/habit\/units","title":"Habit.Units","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/goalsapp\/habit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/habit","title":"Habit","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habitcardview\/init(habit:)","title":"init(habit: Binding<Habit>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habitcardview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/goalsapp\/habitcardview\/habit","title":"var habit: Habit","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habitcardview\/calcpercent()","title":"func calcPercent() -> CGFloat","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/accessibility(activationpoint:)-5fgk6","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/accessibility(activationpoint:)-5pj76","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityaction(named:_:)-370bb","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityaction(named:_:)-3e5ro","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityaction(named:_:)-5xhsd","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityactivationpoint(_:)-2zhwz","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityactivationpoint(_:)-7bpv3","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilitycustomcontent(_:_:importance:)-2ddfe","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilitycustomcontent(_:_:importance:)-4ov2h","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilitycustomcontent(_:_:importance:)-673wa","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilitycustomcontent(_:_:importance:)-79rqp","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilitycustomcontent(_:_:importance:)-7w4zx","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilitycustomcontent(_:_:importance:)-9y8jp","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilitycustomcontent(_:_:importance:)-fk36","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilitycustomcontent(_:_:importance:)-fq04","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityhint(_:)-80u6j","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityhint(_:)-8xoce","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityhint(_:)-w4fh","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityinputlabels(_:)-7hk6q","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityinputlabels(_:)-7skgc","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityinputlabels(_:)-9nc0","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilitylabel(_:)-7lpkq","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilitylabel(_:)-81agl","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilitylabel(_:)-8jd2o","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityrotor(_:entries:)-2jtqx","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityrotor(_:entries:)-38tn0","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityrotor(_:entries:)-5310a","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityrotor(_:entries:)-9d1p8","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityrotor(_:entries:entryid:entrylabel:)-1je9","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityrotor(_:entries:entryid:entrylabel:)-2ocxq","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityrotor(_:entries:entryid:entrylabel:)-4rx5o","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8owej","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityrotor(_:entries:entrylabel:)-1kcvp","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityrotor(_:entries:entrylabel:)-57xr7","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityrotor(_:entries:entrylabel:)-5bqno","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityrotor(_:entries:entrylabel:)-9yg3m","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityrotor(_:textranges:)-3uads","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityrotor(_:textranges:)-6zgvp","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityrotor(_:textranges:)-707ar","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityrotor(_:textranges:)-94680","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityvalue(_:)-2na1g","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityvalue(_:)-7qv8","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityvalue(_:)-8m3hh","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/alert(_:ispresented:actions:)-20dih","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/alert(_:ispresented:actions:)-5itj7","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/alert(_:ispresented:actions:)-9m21h","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/alert(_:ispresented:actions:message:)-5coga","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/alert(_:ispresented:actions:message:)-5naa7","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/alert(_:ispresented:actions:message:)-9ukos","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/alert(_:ispresented:presenting:actions:)-4bc6i","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/alert(_:ispresented:presenting:actions:)-53m2b","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/alert(_:ispresented:presenting:actions:)-95bm6","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/alert(_:ispresented:presenting:actions:message:)-1j2nd","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/alert(_:ispresented:presenting:actions:message:)-3rf3s","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/alert(_:ispresented:presenting:actions:message:)-9apf9","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/alignmentguide(_:computevalue:)-4boiu","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/alignmentguide(_:computevalue:)-7cvup","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/aspectratio(_:contentmode:)-2u3yf","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/aspectratio(_:contentmode:)-8h4l0","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/background(_:in:fillstyle:)-8fjsk","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/background(_:in:fillstyle:)-8u3y3","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/background(in:fillstyle:)-2zh1o","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/background(in:fillstyle:)-4zxj4","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/badge(_:)-43zzi","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/badge(_:)-5h11w","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/badge(_:)-66z5u","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/badge(_:)-gxlg","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/buttonstyle(_:)-5mzxs","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/buttonstyle(_:)-6tf7v","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartsymbolscale(_:)-1zp71","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartsymbolscale(_:)-4pnab","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartsymbolscale(domain:range:)-1umes","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartsymbolscale(domain:range:)-5fz7r","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-2aiwm","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-42ilv","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-863l0","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-159yx","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-26fxs","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-a52r","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-17gpr","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3p3js","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-uw1w","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2r6g2","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6smsl","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-70b8t","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/contentmargins(_:_:for:)-564bd","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/contentmargins(_:_:for:)-91po3","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/dialogsuppressiontoggle(_:issuppressed:)-62138","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/dialogsuppressiontoggle(_:issuppressed:)-7k5pq","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/dialogsuppressiontoggle(_:issuppressed:)-99axl","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/filedialogconfirmationlabel(_:)-24rtv","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/filedialogconfirmationlabel(_:)-2m100","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/filedialogconfirmationlabel(_:)-36wlg","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/filedialogmessage(_:)-6r78w","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/filedialogmessage(_:)-6uax0","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/filedialogmessage(_:)-7gx4z","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-12vmn","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-6dskb","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-148y8","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-3rgzh","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1wbae","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-5ezao","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-3kdow","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-9n97p","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fileexporterfilenamelabel(_:)-1m1u7","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fileexporterfilenamelabel(_:)-4ar8l","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fileexporterfilenamelabel(_:)-7xzv0","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/focusedobject(_:)-7hnlt","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/focusedobject(_:)-8ze0y","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/focusedsceneobject(_:)-dwzq","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/focusedsceneobject(_:)-jvrw","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/focusedscenevalue(_:_:)-4e0he","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/focusedscenevalue(_:_:)-6x25o","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/focusedvalue(_:_:)-2ly8p","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/focusedvalue(_:_:)-72i7r","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/help(_:)-27r6f","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/help(_:)-2kvkr","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/help(_:)-8qcws","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/keyboardshortcut(_:)-4zico","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/keyboardshortcut(_:)-9b1bz","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/linelimit(_:)-1xjsq","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/linelimit(_:)-2a1o2","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/linelimit(_:)-3u4qz","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/linelimit(_:)-7brvy","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/listitemtint(_:)-2dtgm","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/listitemtint(_:)-y3nu","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/listsectionspacing(_:)-5g2lo","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/listsectionspacing(_:)-60y6v","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/navigationbartitle(_:)-1z7u4","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/navigationbartitle(_:)-63vva","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/navigationbartitle(_:)-6asxo","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/navigationbartitle(_:displaymode:)-3lvv2","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/navigationbartitle(_:displaymode:)-9k7jp","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/navigationbartitle(_:displaymode:)-gdz5","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/navigationdocument(_:preview:)-1s91b","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/navigationdocument(_:preview:)-6dz3q","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/navigationdocument(_:preview:)-6kvzu","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/navigationdocument(_:preview:)-6uwod","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/navigationtitle(_:)-4se5a","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/navigationtitle(_:)-51w6g","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/navigationtitle(_:)-6jkzk","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/navigationtitle(_:)-7q51y","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/navigationtitle(_:)-8b8ks","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/onchange(of:initial:_:)-4m72x","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/onchange(of:initial:_:)-6hgrt","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/ondrop(of:delegate:)-5gm1u","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/ondrop(of:delegate:)-6k2bc","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/ondrop(of:istargeted:perform:)-2g8ua","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/ondrop(of:istargeted:perform:)-3z3xq","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/ondrop(of:istargeted:perform:)-5w0ai","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/ondrop(of:istargeted:perform:)-8e2ga","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/padding(_:)-4iax4","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/padding(_:)-5f78d","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/renameaction(_:)-22avd","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/renameaction(_:)-kasp","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/safeareainset(edge:alignment:spacing:content:)-2tze8","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/safeareainset(edge:alignment:spacing:content:)-33z96","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/safeareapadding(_:)-3xn59","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/safeareapadding(_:)-7c7g4","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/scaleeffect(_:anchor:)-4jlbi","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/scaleeffect(_:anchor:)-jolj","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5lqz4","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-74pia","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-yeoj","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:editabletokens:placement:prompt:token:)-5gt31","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:editabletokens:placement:prompt:token:)-9590q","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:editabletokens:placement:prompt:token:)-z7l","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:ispresented:placement:prompt:)-1f2ka","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:ispresented:placement:prompt:)-74w82","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:ispresented:placement:prompt:)-81d9","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:placement:prompt:)-1bxxq","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:placement:prompt:)-1o9sc","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:placement:prompt:)-8y63u","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:placement:prompt:suggestions:)-2qlgk","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:placement:prompt:suggestions:)-6apw7","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:placement:prompt:suggestions:)-96mvs","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:tokens:ispresented:placement:prompt:token:)-1xx5j","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:tokens:ispresented:placement:prompt:token:)-37xpa","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:tokens:ispresented:placement:prompt:token:)-9xryr","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:tokens:placement:prompt:token:)-3ug94","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:tokens:placement:prompt:token:)-7jqfb","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:tokens:placement:prompt:token:)-7zcec","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-1e987","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-25l92","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-66gn5","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-11yne","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-35cok","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4w2j","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitcardview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/toolbar(content:)-50zfo","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/toolbar(content:)-86kw7","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/typeselectequivalent(_:)-5zgnm","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/typeselectequivalent(_:)-74wfw","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/typeselectequivalent(_:)-87m2j","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/typesettinglanguage(_:isenabled:)-4xvaf","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/typesettinglanguage(_:isenabled:)-8fhh2","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitcardview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/habitcardview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/habitcardview","title":"HabitCardView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habitcardview_previews\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habitcardview_previews\/habit","title":"static var habit: Habit","type":"property"},{"path":"\/documentation\/goalsapp\/habitcardview_previews\/previews","title":"static var previews: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habitcardview_previews\/platform","title":"static var platform: PreviewPlatform?","type":"property"}],"path":"\/documentation\/goalsapp\/habitcardview_previews\/previewprovider-implementations","title":"PreviewProvider Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/habitcardview_previews","title":"HabitCardView_Previews","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habitdetailview\/init(selectedhabit:namespace:selectedcharttype:)","title":"init(selectedHabit: Habit?, namespace: Namespace.ID, selectedChartType: HabitDetailView.ChartType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habitdetailview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/goalsapp\/habitdetailview\/namespace","title":"let namespace: Namespace.ID","type":"property"},{"path":"\/documentation\/goalsapp\/habitdetailview\/selectedcharttype","title":"var selectedChartType: ChartType","type":"property"},{"path":"\/documentation\/goalsapp\/habitdetailview\/selectedhabit","title":"var selectedHabit: Habit?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habitdetailview\/charttype\/monthly","title":"case monthly","type":"case"},{"path":"\/documentation\/goalsapp\/habitdetailview\/charttype\/weekly","title":"case weekly","type":"case"},{"path":"\/documentation\/goalsapp\/habitdetailview\/charttype\/yearly","title":"case yearly","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habitdetailview\/charttype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habitdetailview\/charttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/goalsapp\/habitdetailview\/charttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habitdetailview\/charttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habitdetailview\/charttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/goalsapp\/habitdetailview\/charttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/habitdetailview\/charttype","title":"HabitDetailView.ChartType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/accessibility(activationpoint:)-5748a","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/accessibility(activationpoint:)-8aup4","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityaction(named:_:)-4gpk8","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityaction(named:_:)-5vakb","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityaction(named:_:)-xq7e","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityactivationpoint(_:)-2bnsr","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityactivationpoint(_:)-4cswj","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilitycustomcontent(_:_:importance:)-1okjo","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilitycustomcontent(_:_:importance:)-1s151","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilitycustomcontent(_:_:importance:)-1snn8","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilitycustomcontent(_:_:importance:)-2frht","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilitycustomcontent(_:_:importance:)-2go5z","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilitycustomcontent(_:_:importance:)-6q03k","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilitycustomcontent(_:_:importance:)-8yhat","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilitycustomcontent(_:_:importance:)-nvot","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityhint(_:)-19bm2","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityhint(_:)-4oapo","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityhint(_:)-5m3xg","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityinputlabels(_:)-2hrsc","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityinputlabels(_:)-2k274","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityinputlabels(_:)-45fqg","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilitylabel(_:)-2rtdn","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilitylabel(_:)-5pikd","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilitylabel(_:)-ztfu","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityrotor(_:entries:)-12o3q","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityrotor(_:entries:)-52mb3","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityrotor(_:entries:)-6xo2h","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityrotor(_:entries:)-81o1l","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3r3t1","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityrotor(_:entries:entryid:entrylabel:)-5v9a3","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityrotor(_:entries:entryid:entrylabel:)-60m19","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityrotor(_:entries:entryid:entrylabel:)-96old","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityrotor(_:entries:entrylabel:)-19dxh","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityrotor(_:entries:entrylabel:)-2buzk","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityrotor(_:entries:entrylabel:)-3rm8z","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityrotor(_:entries:entrylabel:)-7oiqe","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityrotor(_:textranges:)-27k0y","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityrotor(_:textranges:)-2jpfr","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityrotor(_:textranges:)-4jbvd","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityrotor(_:textranges:)-83am","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityvalue(_:)-1j5we","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityvalue(_:)-3lsvi","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityvalue(_:)-9570e","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/alert(_:ispresented:actions:)-1a91y","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/alert(_:ispresented:actions:)-666kl","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/alert(_:ispresented:actions:)-7430r","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/alert(_:ispresented:actions:message:)-1khla","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/alert(_:ispresented:actions:message:)-5uliz","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/alert(_:ispresented:actions:message:)-662a2","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/alert(_:ispresented:presenting:actions:)-2qc8a","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/alert(_:ispresented:presenting:actions:)-3el84","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/alert(_:ispresented:presenting:actions:)-8g4sw","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/alert(_:ispresented:presenting:actions:message:)-6vz38","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/alert(_:ispresented:presenting:actions:message:)-6w72f","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/alert(_:ispresented:presenting:actions:message:)-8j6li","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/alignmentguide(_:computevalue:)-7dd7r","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/alignmentguide(_:computevalue:)-7jvef","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/aspectratio(_:contentmode:)-6hb12","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/aspectratio(_:contentmode:)-9qovh","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/background(_:in:fillstyle:)-3m0c5","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/background(_:in:fillstyle:)-9l05j","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/background(in:fillstyle:)-2u9c2","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/background(in:fillstyle:)-sszx","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/badge(_:)-2mx8v","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/badge(_:)-2r05f","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/badge(_:)-3eheg","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/badge(_:)-6zv9f","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/buttonstyle(_:)-1gryq","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/buttonstyle(_:)-55unb","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartsymbolscale(_:)-95s63","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartsymbolscale(_:)-aexh","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartsymbolscale(domain:range:)-4j2bt","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartsymbolscale(domain:range:)-6ef5t","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5c4s6","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7qwcx","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8cgrj","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1b7ay","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3ozij","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5vpvq","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6hxzd","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6lm1f","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9ww4h","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5bkez","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5jhbg","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9pl5s","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/contentmargins(_:_:for:)-6ejiu","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/contentmargins(_:_:for:)-6mo4x","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/dialogsuppressiontoggle(_:issuppressed:)-121su","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/dialogsuppressiontoggle(_:issuppressed:)-1hha0","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/dialogsuppressiontoggle(_:issuppressed:)-6yaqc","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/filedialogconfirmationlabel(_:)-30ok8","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/filedialogconfirmationlabel(_:)-3f910","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/filedialogconfirmationlabel(_:)-8nrlw","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/filedialogmessage(_:)-1mvg9","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/filedialogmessage(_:)-5hpt4","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/filedialogmessage(_:)-5osie","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2lfje","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-6vf0v","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-1py12","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-20z2l","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-242eu","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-v1i7","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-2qz2y","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-irpx","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fileexporterfilenamelabel(_:)-4vycj","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fileexporterfilenamelabel(_:)-879di","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fileexporterfilenamelabel(_:)-p8sk","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/focusedobject(_:)-16edj","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/focusedobject(_:)-9yr1m","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/focusedsceneobject(_:)-1qav0","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/focusedsceneobject(_:)-7jxnj","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/focusedscenevalue(_:_:)-2dhdq","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/focusedscenevalue(_:_:)-5eyu2","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/focusedvalue(_:_:)-83qu7","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/focusedvalue(_:_:)-8joq3","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/help(_:)-1mplk","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/help(_:)-6wybo","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/help(_:)-9swbk","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/keyboardshortcut(_:)-6z5z2","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/keyboardshortcut(_:)-90exd","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/linelimit(_:)-563a7","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/linelimit(_:)-5jf0c","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/linelimit(_:)-5sb3w","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/linelimit(_:)-9h3m5","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/listitemtint(_:)-7z6mp","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/listitemtint(_:)-8acsn","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/listsectionspacing(_:)-2b1a4","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/listsectionspacing(_:)-7w57n","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/navigationbartitle(_:)-2sqpi","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/navigationbartitle(_:)-4m8o6","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/navigationbartitle(_:)-9o3ej","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/navigationbartitle(_:displaymode:)-3ulds","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/navigationbartitle(_:displaymode:)-5bsrv","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/navigationbartitle(_:displaymode:)-60y2h","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/navigationdocument(_:preview:)-66dfq","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/navigationdocument(_:preview:)-89dh1","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/navigationdocument(_:preview:)-8o4cv","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/navigationdocument(_:preview:)-kcjt","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/navigationtitle(_:)-21eec","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/navigationtitle(_:)-4vzpw","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/navigationtitle(_:)-6kl0g","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/navigationtitle(_:)-6y53p","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/navigationtitle(_:)-9wnbe","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/onchange(of:initial:_:)-4bj3q","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/onchange(of:initial:_:)-7acy","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/ondrop(of:delegate:)-4or6j","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/ondrop(of:delegate:)-4zwiq","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/ondrop(of:istargeted:perform:)-1mznl","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/ondrop(of:istargeted:perform:)-3cvls","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/ondrop(of:istargeted:perform:)-4n43o","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/ondrop(of:istargeted:perform:)-8smsb","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/padding(_:)-43l5g","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/padding(_:)-7zpkd","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/renameaction(_:)-2zo49","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/renameaction(_:)-5zq5g","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/safeareainset(edge:alignment:spacing:content:)-5lbt4","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/safeareainset(edge:alignment:spacing:content:)-69pln","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/safeareapadding(_:)-2po3h","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/safeareapadding(_:)-86w31","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/scaleeffect(_:anchor:)-7buxk","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/scaleeffect(_:anchor:)-8nmph","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5hrji","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-948nj","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-9iyru","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:editabletokens:placement:prompt:token:)-1ec9b","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:editabletokens:placement:prompt:token:)-7f6qr","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:editabletokens:placement:prompt:token:)-8uykq","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:ispresented:placement:prompt:)-3f149","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:ispresented:placement:prompt:)-6mjvk","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:ispresented:placement:prompt:)-6tan0","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:placement:prompt:)-186hj","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:placement:prompt:)-49w5m","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:placement:prompt:)-6ut0o","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:placement:prompt:suggestions:)-43wk2","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:placement:prompt:suggestions:)-6zjom","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:placement:prompt:suggestions:)-927en","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:tokens:ispresented:placement:prompt:token:)-51ert","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:tokens:ispresented:placement:prompt:token:)-8e9ob","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:tokens:ispresented:placement:prompt:token:)-8fmcg","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:tokens:placement:prompt:token:)-8mr9h","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:tokens:placement:prompt:token:)-99msi","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:tokens:placement:prompt:token:)-qgjd","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9edhh","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9r8i0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9wycr","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6kooz","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7hj92","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7s6do","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitdetailview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/toolbar(content:)-2puq4","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/toolbar(content:)-86t37","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/typeselectequivalent(_:)-1gx71","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/typeselectequivalent(_:)-40l3n","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/typeselectequivalent(_:)-59wah","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/typesettinglanguage(_:isenabled:)-3dmb1","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/typesettinglanguage(_:isenabled:)-8rtsp","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitdetailview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/habitdetailview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/habitdetailview","title":"HabitDetailView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habitdetailview_previews\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habitdetailview_previews\/previews","title":"static var previews: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habitdetailview_previews\/platform","title":"static var platform: PreviewPlatform?","type":"property"}],"path":"\/documentation\/goalsapp\/habitdetailview_previews\/previewprovider-implementations","title":"PreviewProvider Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/habitdetailview_previews","title":"HabitDetailView_Previews","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habiteditview\/init(appdata:ispresentinghabiteditview:selectedhabit:)","title":"init(appData: EnvironmentObject<AppData>, isPresentingHabitEditView: Binding<Bool>, selectedHabit: Binding<Habit>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habiteditview\/appdata","title":"var appData: AppData","type":"property"},{"path":"\/documentation\/goalsapp\/habiteditview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/goalsapp\/habiteditview\/ispresentinghabiteditview","title":"var isPresentingHabitEditView: Bool","type":"property"},{"path":"\/documentation\/goalsapp\/habiteditview\/selectedhabit","title":"var selectedHabit: Habit","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/accessibility(activationpoint:)-26k45","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/accessibility(activationpoint:)-h6yz","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityaction(named:_:)-5gg6","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityaction(named:_:)-6lar6","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityaction(named:_:)-7gugn","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityactivationpoint(_:)-6xld9","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityactivationpoint(_:)-7f2l1","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilitycustomcontent(_:_:importance:)-1jn97","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilitycustomcontent(_:_:importance:)-1ry32","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilitycustomcontent(_:_:importance:)-2kgd9","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilitycustomcontent(_:_:importance:)-40rg6","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilitycustomcontent(_:_:importance:)-42g7d","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilitycustomcontent(_:_:importance:)-45sl8","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilitycustomcontent(_:_:importance:)-9tvzf","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilitycustomcontent(_:_:importance:)-mhhn","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityhint(_:)-2bxpx","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityhint(_:)-56l3p","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityhint(_:)-9k6ux","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityinputlabels(_:)-62oan","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityinputlabels(_:)-86k16","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityinputlabels(_:)-rt9b","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilitylabel(_:)-1tm5d","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilitylabel(_:)-7fraw","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilitylabel(_:)-8z9p2","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityrotor(_:entries:)-3bp5u","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityrotor(_:entries:)-4je29","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityrotor(_:entries:)-75ezc","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityrotor(_:entries:)-uiy8","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityrotor(_:entries:entryid:entrylabel:)-11rxd","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityrotor(_:entries:entryid:entrylabel:)-47pok","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityrotor(_:entries:entryid:entrylabel:)-85rys","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityrotor(_:entries:entryid:entrylabel:)-i5bv","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityrotor(_:entries:entrylabel:)-63m4d","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityrotor(_:entries:entrylabel:)-6tllg","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityrotor(_:entries:entrylabel:)-9cwyx","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityrotor(_:entries:entrylabel:)-dfz9","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityrotor(_:textranges:)-21xpc","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityrotor(_:textranges:)-4ev2k","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityrotor(_:textranges:)-5vhb3","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityrotor(_:textranges:)-91tpj","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityvalue(_:)-5vh19","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityvalue(_:)-614q4","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityvalue(_:)-9b7xd","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/alert(_:ispresented:actions:)-2a5ye","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/alert(_:ispresented:actions:)-30r0v","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/alert(_:ispresented:actions:)-7k0ge","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/alert(_:ispresented:actions:message:)-1o7dl","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/alert(_:ispresented:actions:message:)-6sh32","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/alert(_:ispresented:actions:message:)-yoja","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/alert(_:ispresented:presenting:actions:)-1offp","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/alert(_:ispresented:presenting:actions:)-2c1nq","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/alert(_:ispresented:presenting:actions:)-g4ao","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/alert(_:ispresented:presenting:actions:message:)-2o9ss","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/alert(_:ispresented:presenting:actions:message:)-54z80","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/alert(_:ispresented:presenting:actions:message:)-5olg2","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/alignmentguide(_:computevalue:)-2emcy","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/alignmentguide(_:computevalue:)-53trl","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/aspectratio(_:contentmode:)-460","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/aspectratio(_:contentmode:)-8xxst","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/background(_:in:fillstyle:)-13sg","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/background(_:in:fillstyle:)-31nw6","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/background(in:fillstyle:)-4cpkx","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/background(in:fillstyle:)-lxm0","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/badge(_:)-7va4c","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/badge(_:)-8r5s1","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/badge(_:)-92e46","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/badge(_:)-9xbss","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/buttonstyle(_:)-53xnu","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/buttonstyle(_:)-7baz2","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartsymbolscale(_:)-3a9f6","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartsymbolscale(_:)-5hiq0","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartsymbolscale(domain:range:)-4qs08","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartsymbolscale(domain:range:)-682g","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3kmef","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7peq6","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8eo0t","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4sebg","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-7fqud","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8nj2m","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7bzv7","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8zu5","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-rbis","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-299hu","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-535e0","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-65gtd","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/contentmargins(_:_:for:)-7il82","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/contentmargins(_:_:for:)-cial","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/dialogsuppressiontoggle(_:issuppressed:)-2bs4q","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/dialogsuppressiontoggle(_:issuppressed:)-4cjmz","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/dialogsuppressiontoggle(_:issuppressed:)-yupg","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/filedialogconfirmationlabel(_:)-7g9iq","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/filedialogconfirmationlabel(_:)-7qd8o","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/filedialogconfirmationlabel(_:)-bme7","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/filedialogmessage(_:)-3llna","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/filedialogmessage(_:)-9t9vm","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/filedialogmessage(_:)-r68g","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-16vhs","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7jijw","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-1jugp","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6puex","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1hlsb","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1o6gi","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-2hmkh","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-4xxu9","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fileexporterfilenamelabel(_:)-3qlh7","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fileexporterfilenamelabel(_:)-5nzqe","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fileexporterfilenamelabel(_:)-68931","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/focusedobject(_:)-125hb","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/focusedobject(_:)-5fl8v","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/focusedsceneobject(_:)-1brad","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/focusedsceneobject(_:)-96gbp","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/focusedscenevalue(_:_:)-1woac","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/focusedscenevalue(_:_:)-2j2dw","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/focusedvalue(_:_:)-248mc","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/focusedvalue(_:_:)-2vqpi","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/help(_:)-2q956","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/help(_:)-772sh","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/help(_:)-8z4d0","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/keyboardshortcut(_:)-1dsrw","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/keyboardshortcut(_:)-3aksn","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/linelimit(_:)-1oobn","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/linelimit(_:)-4hs73","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/linelimit(_:)-8m5x","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/linelimit(_:)-kk7x","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/listitemtint(_:)-5rofu","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/listitemtint(_:)-9l1j9","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/listsectionspacing(_:)-3q6qn","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/listsectionspacing(_:)-3zd0j","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/navigationbartitle(_:)-7fytm","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/navigationbartitle(_:)-98f37","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/navigationbartitle(_:)-id3f","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/navigationbartitle(_:displaymode:)-502lc","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/navigationbartitle(_:displaymode:)-6ozwd","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/navigationbartitle(_:displaymode:)-8k9zq","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/navigationdocument(_:preview:)-40zhe","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/navigationdocument(_:preview:)-690eq","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/navigationdocument(_:preview:)-7ef34","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/navigationdocument(_:preview:)-7rj42","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/navigationtitle(_:)-2ezmv","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/navigationtitle(_:)-3335i","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/navigationtitle(_:)-93e0r","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/navigationtitle(_:)-9xv9f","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/navigationtitle(_:)-eyti","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/onchange(of:initial:_:)-5ajw9","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/onchange(of:initial:_:)-jg3h","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/ondrop(of:delegate:)-3to7k","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/ondrop(of:delegate:)-6tuor","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/ondrop(of:istargeted:perform:)-13l8i","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/ondrop(of:istargeted:perform:)-29qqe","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/ondrop(of:istargeted:perform:)-5mi29","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/ondrop(of:istargeted:perform:)-8952t","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/padding(_:)-1w92l","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/padding(_:)-6knju","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/renameaction(_:)-5cz1d","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/renameaction(_:)-7ckza","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/safeareainset(edge:alignment:spacing:content:)-349n3","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/safeareainset(edge:alignment:spacing:content:)-8g3zu","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/safeareapadding(_:)-1swil","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/safeareapadding(_:)-4e8zz","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/scaleeffect(_:anchor:)-2w5j0","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/scaleeffect(_:anchor:)-5lca","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4laum","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5w10v","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-82qa9","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:editabletokens:placement:prompt:token:)-3ybrz","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:editabletokens:placement:prompt:token:)-4tnjt","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:editabletokens:placement:prompt:token:)-7txv8","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:ispresented:placement:prompt:)-1k46l","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:ispresented:placement:prompt:)-2fl4a","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:ispresented:placement:prompt:)-5vd7a","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:placement:prompt:)-99xqz","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:placement:prompt:)-9g8nf","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:placement:prompt:)-c4qt","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:placement:prompt:suggestions:)-1io08","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:placement:prompt:suggestions:)-3nc09","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:placement:prompt:suggestions:)-6p8wd","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:tokens:ispresented:placement:prompt:token:)-5ptje","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6hscq","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:tokens:ispresented:placement:prompt:token:)-7gfkl","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:tokens:placement:prompt:token:)-6qhrg","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:tokens:placement:prompt:token:)-9kve","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:tokens:placement:prompt:token:)-9nnju","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-1h5e5","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-5jvm5","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-8juzt","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1hi9f","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6mbf6","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6uwy9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habiteditview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/toolbar(content:)-1kuca","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/toolbar(content:)-3oc1k","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/typeselectequivalent(_:)-7ligu","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/typeselectequivalent(_:)-80nkt","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/typeselectequivalent(_:)-adpk","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/typesettinglanguage(_:isenabled:)-4838x","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/typesettinglanguage(_:isenabled:)-585c2","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habiteditview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/habiteditview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/habiteditview","title":"HabitEditView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habitlistview\/init(habits:namespace:)","title":"init(habits: Binding<[Habit]>, namespace: Namespace)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habitlistview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/goalsapp\/habitlistview\/habits","title":"var habits: [Habit]","type":"property"},{"path":"\/documentation\/goalsapp\/habitlistview\/namespace","title":"var namespace: Namespace.ID","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habitlistview\/sortoption\/datecreated","title":"case dateCreated","type":"case"},{"path":"\/documentation\/goalsapp\/habitlistview\/sortoption\/duedate","title":"case dueDate","type":"case"},{"path":"\/documentation\/goalsapp\/habitlistview\/sortoption\/priority","title":"case priority","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habitlistview\/sortoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/goalsapp\/habitlistview\/sortoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/habitlistview\/sortoption","title":"HabitListView.SortOption","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/accessibility(activationpoint:)-30scp","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/accessibility(activationpoint:)-8k5d","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityaction(named:_:)-2dgt4","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityaction(named:_:)-2nxwl","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityaction(named:_:)-8hlqt","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityactivationpoint(_:)-8020z","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityactivationpoint(_:)-8g9qf","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilitycustomcontent(_:_:importance:)-2ynpc","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilitycustomcontent(_:_:importance:)-4rbiq","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilitycustomcontent(_:_:importance:)-6xoc1","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilitycustomcontent(_:_:importance:)-7j7k0","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilitycustomcontent(_:_:importance:)-7jvv6","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilitycustomcontent(_:_:importance:)-8vbpv","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilitycustomcontent(_:_:importance:)-8wqp0","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilitycustomcontent(_:_:importance:)-9vna7","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityhint(_:)-12r2j","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityhint(_:)-4rab3","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityhint(_:)-8j3mw","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityinputlabels(_:)-3bb5","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityinputlabels(_:)-576kx","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityinputlabels(_:)-tgpn","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilitylabel(_:)-154eb","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilitylabel(_:)-4eb5m","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilitylabel(_:)-9rrz6","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityrotor(_:entries:)-3ly6e","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityrotor(_:entries:)-4qwcw","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityrotor(_:entries:)-846wi","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityrotor(_:entries:)-95t6j","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityrotor(_:entries:entryid:entrylabel:)-5sjx1","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityrotor(_:entries:entryid:entrylabel:)-6wl7u","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9eeet","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityrotor(_:entries:entryid:entrylabel:)-ly32","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityrotor(_:entries:entrylabel:)-1v9fd","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityrotor(_:entries:entrylabel:)-6bh0r","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityrotor(_:entries:entrylabel:)-6dut5","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityrotor(_:entries:entrylabel:)-74gp5","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityrotor(_:textranges:)-1taue","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityrotor(_:textranges:)-2525e","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityrotor(_:textranges:)-4ysdu","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityrotor(_:textranges:)-mznu","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityvalue(_:)-4ry3m","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityvalue(_:)-5gmiy","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityvalue(_:)-9q876","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/alert(_:ispresented:actions:)-2dcc3","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/alert(_:ispresented:actions:)-3tlch","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/alert(_:ispresented:actions:)-4uuhi","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/alert(_:ispresented:actions:message:)-1te82","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/alert(_:ispresented:actions:message:)-3m1j6","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/alert(_:ispresented:actions:message:)-75lxh","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/alert(_:ispresented:presenting:actions:)-3jj3y","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/alert(_:ispresented:presenting:actions:)-9njc9","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/alert(_:ispresented:presenting:actions:)-9xipr","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/alert(_:ispresented:presenting:actions:message:)-5x7xf","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/alert(_:ispresented:presenting:actions:message:)-5xhic","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/alert(_:ispresented:presenting:actions:message:)-9hffl","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/alignmentguide(_:computevalue:)-25zns","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/alignmentguide(_:computevalue:)-7ikh2","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/aspectratio(_:contentmode:)-30jtt","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/aspectratio(_:contentmode:)-9nryw","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/background(_:in:fillstyle:)-8ris9","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/background(_:in:fillstyle:)-ftv2","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/background(in:fillstyle:)-1gnmk","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/background(in:fillstyle:)-6dish","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/badge(_:)-14zd9","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/badge(_:)-2uxw","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/badge(_:)-797o8","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/badge(_:)-mffj","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/buttonstyle(_:)-2g4p","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/buttonstyle(_:)-8cb5s","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartsymbolscale(_:)-5rru4","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartsymbolscale(_:)-6v22b","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartsymbolscale(domain:range:)-1fhj7","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartsymbolscale(domain:range:)-9f1ii","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4uhkz","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5dyl4","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8ea4z","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5sx0w","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-73tfw","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-hh69","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-33uo1","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5wtss","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-80v9w","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5xw18","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7ax44","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7zkc8","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/contentmargins(_:_:for:)-72r33","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/contentmargins(_:_:for:)-9twp4","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/dialogsuppressiontoggle(_:issuppressed:)-2sy4v","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/dialogsuppressiontoggle(_:issuppressed:)-3glfg","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/dialogsuppressiontoggle(_:issuppressed:)-7kx1d","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/filedialogconfirmationlabel(_:)-8l30c","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/filedialogconfirmationlabel(_:)-8pg6d","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/filedialogconfirmationlabel(_:)-8z8vp","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/filedialogmessage(_:)-2oia","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/filedialogmessage(_:)-5tlzc","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/filedialogmessage(_:)-yhsb","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-6ak07","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8ohuw","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-3k8bc","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-7kkb1","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1oz4","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-3iwo","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-6ao5g","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-9xdji","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fileexporterfilenamelabel(_:)-3yln7","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fileexporterfilenamelabel(_:)-5pfw6","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fileexporterfilenamelabel(_:)-6dh30","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/focusedobject(_:)-28b77","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/focusedobject(_:)-6ypfv","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/focusedsceneobject(_:)-1lzwh","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/focusedsceneobject(_:)-4fm8o","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/focusedscenevalue(_:_:)-3ds0w","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/focusedscenevalue(_:_:)-91nm1","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/focusedvalue(_:_:)-1vlr6","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/focusedvalue(_:_:)-2ywzn","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/help(_:)-20ieu","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/help(_:)-6o9m2","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/help(_:)-9l83c","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/keyboardshortcut(_:)-7acxk","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/keyboardshortcut(_:)-939zw","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/linelimit(_:)-2zxhm","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/linelimit(_:)-3sxfv","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/linelimit(_:)-4ykgz","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/linelimit(_:)-61blu","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/listitemtint(_:)-4ihm8","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/listitemtint(_:)-6j2ep","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/listsectionspacing(_:)-2up69","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/listsectionspacing(_:)-9eypm","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/navigationbartitle(_:)-18mpw","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/navigationbartitle(_:)-687rq","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/navigationbartitle(_:)-6naq3","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/navigationbartitle(_:displaymode:)-3dryf","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/navigationbartitle(_:displaymode:)-6r3js","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/navigationbartitle(_:displaymode:)-9g8et","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/navigationdocument(_:preview:)-1x8zo","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/navigationdocument(_:preview:)-27sdq","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/navigationdocument(_:preview:)-8fd7w","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/navigationdocument(_:preview:)-8k1fa","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/navigationtitle(_:)-1ijc9","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/navigationtitle(_:)-1sd9h","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/navigationtitle(_:)-2gzdc","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/navigationtitle(_:)-4a33k","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/navigationtitle(_:)-57xjh","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/onchange(of:initial:_:)-2kp6o","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/onchange(of:initial:_:)-6sdbp","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/ondrop(of:delegate:)-18jtk","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/ondrop(of:delegate:)-54gk4","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/ondrop(of:istargeted:perform:)-2ye5f","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/ondrop(of:istargeted:perform:)-4n5vn","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/ondrop(of:istargeted:perform:)-71yzh","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/ondrop(of:istargeted:perform:)-817bd","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/padding(_:)-2hmbx","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/padding(_:)-na4g","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/renameaction(_:)-2v08q","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/renameaction(_:)-3kpp8","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/safeareainset(edge:alignment:spacing:content:)-51t9s","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/safeareainset(edge:alignment:spacing:content:)-9v4jz","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/safeareapadding(_:)-1y1c4","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/safeareapadding(_:)-9onft","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/scaleeffect(_:anchor:)-10b7i","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/scaleeffect(_:anchor:)-2gbk1","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5a6b7","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7tksw","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-g03","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:editabletokens:placement:prompt:token:)-1gczc","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:editabletokens:placement:prompt:token:)-2bope","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:editabletokens:placement:prompt:token:)-6ms2k","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:ispresented:placement:prompt:)-5cdi8","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:ispresented:placement:prompt:)-60htd","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:ispresented:placement:prompt:)-8nbah","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:placement:prompt:)-14n8x","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:placement:prompt:)-1h13f","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:placement:prompt:)-4pygh","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:placement:prompt:suggestions:)-2zd69","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:placement:prompt:suggestions:)-3sguo","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:placement:prompt:suggestions:)-6txct","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:tokens:ispresented:placement:prompt:token:)-4ltif","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:tokens:ispresented:placement:prompt:token:)-5hgu7","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:tokens:ispresented:placement:prompt:token:)-5tafo","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:tokens:placement:prompt:token:)-27smg","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:tokens:placement:prompt:token:)-2espx","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:tokens:placement:prompt:token:)-5dvtw","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-7dz2s","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-7ovkk","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-87xe0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1q5ru","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4fcgd","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6mx5d","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/habitlistview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/toolbar(content:)-3y9hj","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/toolbar(content:)-mcpw","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/typeselectequivalent(_:)-2wba1","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/typeselectequivalent(_:)-4a8f4","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/typeselectequivalent(_:)-66xoc","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/typesettinglanguage(_:isenabled:)-6uyo2","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/typesettinglanguage(_:isenabled:)-75owb","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/habitlistview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/habitlistview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/habitlistview","title":"HabitListView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/iconpickerview\/init(selection:title:autodismiss:)","title":"init(selection: Binding<String>, title: String, autoDismiss: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/iconpickerview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/goalsapp\/iconpickerview\/columns","title":"let columns: [GridItem]","type":"property"},{"path":"\/documentation\/goalsapp\/iconpickerview\/presentationmode","title":"var presentationMode: Binding<PresentationMode>","type":"property"},{"path":"\/documentation\/goalsapp\/iconpickerview\/selection","title":"var selection: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/accessibility(activationpoint:)-2a6jb","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/accessibility(activationpoint:)-8jqt8","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityaction(named:_:)-2gar5","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityaction(named:_:)-3rpq8","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityaction(named:_:)-9p3tl","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityactivationpoint(_:)-1y1f9","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityactivationpoint(_:)-45ym4","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilitycustomcontent(_:_:importance:)-1vghu","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilitycustomcontent(_:_:importance:)-261h4","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilitycustomcontent(_:_:importance:)-41t1y","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilitycustomcontent(_:_:importance:)-4o875","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilitycustomcontent(_:_:importance:)-4r0rg","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilitycustomcontent(_:_:importance:)-59hhx","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilitycustomcontent(_:_:importance:)-6fkip","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilitycustomcontent(_:_:importance:)-71eqf","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityhint(_:)-1aewr","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityhint(_:)-6t22f","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityhint(_:)-8wls1","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityinputlabels(_:)-3aein","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityinputlabels(_:)-4wigu","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityinputlabels(_:)-8deqx","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilitylabel(_:)-75t60","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilitylabel(_:)-8jyku","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilitylabel(_:)-wkjo","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityrotor(_:entries:)-1khpb","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityrotor(_:entries:)-6d7cc","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityrotor(_:entries:)-6l2ft","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityrotor(_:entries:)-w0a8","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-12y07","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-2yljt","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-5494i","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9oyz4","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityrotor(_:entries:entrylabel:)-4cvnz","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityrotor(_:entries:entrylabel:)-5zipg","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityrotor(_:entries:entrylabel:)-626xp","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityrotor(_:entries:entrylabel:)-9xqit","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityrotor(_:textranges:)-4g91b","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityrotor(_:textranges:)-69bh2","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityrotor(_:textranges:)-8h4b2","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityrotor(_:textranges:)-u4h7","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityvalue(_:)-3f5kf","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityvalue(_:)-40yp7","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityvalue(_:)-9eoon","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/alert(_:ispresented:actions:)-12xag","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/alert(_:ispresented:actions:)-7vw94","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/alert(_:ispresented:actions:)-96pt7","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/alert(_:ispresented:actions:message:)-1fjnw","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/alert(_:ispresented:actions:message:)-4rh7u","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/alert(_:ispresented:actions:message:)-8mdnx","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/alert(_:ispresented:presenting:actions:)-2bae2","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/alert(_:ispresented:presenting:actions:)-5m6d1","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/alert(_:ispresented:presenting:actions:)-5m90c","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/alert(_:ispresented:presenting:actions:message:)-32zqs","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/alert(_:ispresented:presenting:actions:message:)-3t5e2","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/alert(_:ispresented:presenting:actions:message:)-7bo6h","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/alignmentguide(_:computevalue:)-2qdwf","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/alignmentguide(_:computevalue:)-6mc9n","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/aspectratio(_:contentmode:)-46jm4","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/aspectratio(_:contentmode:)-9ee83","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/background(_:in:fillstyle:)-2gwm1","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/background(_:in:fillstyle:)-5mr3c","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/background(in:fillstyle:)-5gjba","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/background(in:fillstyle:)-8ltyh","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/badge(_:)-10e0","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/badge(_:)-3p9ht","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/badge(_:)-4l7wi","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/badge(_:)-9bi40","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/buttonstyle(_:)-5gir4","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/buttonstyle(_:)-yc34","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartsymbolscale(_:)-8inzb","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartsymbolscale(_:)-ucti","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartsymbolscale(domain:range:)-4wdgm","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartsymbolscale(domain:range:)-852gk","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1bm21","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-42gni","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4oyf1","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-13uca","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8qy46","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9aaql","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-24qfo","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4dgy5","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-87s5s","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2bjql","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4brfw","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-syvb","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/contentmargins(_:_:for:)-48dyi","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/contentmargins(_:_:for:)-55mnv","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/dialogsuppressiontoggle(_:issuppressed:)-2w4ui","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/dialogsuppressiontoggle(_:issuppressed:)-3z6ys","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/dialogsuppressiontoggle(_:issuppressed:)-4tvd9","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/filedialogconfirmationlabel(_:)-2gcrt","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/filedialogconfirmationlabel(_:)-978t6","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/filedialogconfirmationlabel(_:)-porm","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/filedialogmessage(_:)-51yef","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/filedialogmessage(_:)-7qhuk","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/filedialogmessage(_:)-zfz1","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4mevm","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-97ovo","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-1tm69","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-35myd","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-43oep","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-549v2","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-241ca","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-57228","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fileexporterfilenamelabel(_:)-2rn0f","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fileexporterfilenamelabel(_:)-60x11","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fileexporterfilenamelabel(_:)-x50u","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/focusedobject(_:)-2a56g","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/focusedobject(_:)-3a1tr","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/focusedsceneobject(_:)-1q39","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/focusedsceneobject(_:)-9hqa2","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/focusedscenevalue(_:_:)-3bww7","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/focusedscenevalue(_:_:)-9cxqn","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/focusedvalue(_:_:)-9392","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/focusedvalue(_:_:)-9o9s0","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/help(_:)-1rcje","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/help(_:)-6bjri","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/help(_:)-71ubj","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/keyboardshortcut(_:)-2sstu","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/keyboardshortcut(_:)-5v3fe","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/linelimit(_:)-3ku97","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/linelimit(_:)-8i01r","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/linelimit(_:)-9nqvm","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/linelimit(_:)-9ylst","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/listitemtint(_:)-2hrq1","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/listitemtint(_:)-81eko","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/listsectionspacing(_:)-5osgd","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/listsectionspacing(_:)-6dxa4","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/navigationbartitle(_:)-17tbl","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/navigationbartitle(_:)-429n","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/navigationbartitle(_:)-96t15","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/navigationbartitle(_:displaymode:)-1ko3a","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/navigationbartitle(_:displaymode:)-5wwnj","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/navigationbartitle(_:displaymode:)-6bfyl","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/navigationdocument(_:preview:)-30ix9","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/navigationdocument(_:preview:)-3dcfy","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/navigationdocument(_:preview:)-68ait","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/navigationdocument(_:preview:)-701v9","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/navigationtitle(_:)-1nym6","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/navigationtitle(_:)-30evh","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/navigationtitle(_:)-38soh","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/navigationtitle(_:)-4abc1","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/navigationtitle(_:)-5byxu","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/onchange(of:initial:_:)-3aqvo","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/onchange(of:initial:_:)-97y6t","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/ondrop(of:delegate:)-7jb3r","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/ondrop(of:delegate:)-q9y","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/ondrop(of:istargeted:perform:)-53gg2","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/ondrop(of:istargeted:perform:)-7r9um","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/ondrop(of:istargeted:perform:)-98ipp","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/ondrop(of:istargeted:perform:)-9tb7v","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/padding(_:)-16q0y","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/padding(_:)-6xq0r","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/renameaction(_:)-3brrp","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/renameaction(_:)-6un6h","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/safeareainset(edge:alignment:spacing:content:)-2s8a9","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/safeareainset(edge:alignment:spacing:content:)-6gagx","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/safeareapadding(_:)-17lkw","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/safeareapadding(_:)-2uo7n","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/scaleeffect(_:anchor:)-5gbgh","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/scaleeffect(_:anchor:)-8zrq1","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4a16o","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-8aof3","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-umch","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:editabletokens:placement:prompt:token:)-4si1y","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:editabletokens:placement:prompt:token:)-99oe6","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:editabletokens:placement:prompt:token:)-b764","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:ispresented:placement:prompt:)-49072","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:ispresented:placement:prompt:)-6yvts","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:ispresented:placement:prompt:)-9ois0","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:placement:prompt:)-1k2xb","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:placement:prompt:)-90ud5","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:placement:prompt:)-9vsx","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:placement:prompt:suggestions:)-4cvq5","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:placement:prompt:suggestions:)-7caw9","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:placement:prompt:suggestions:)-9ez3c","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-39906","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-83p5m","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-y8jo","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:tokens:placement:prompt:token:)-3q54v","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:tokens:placement:prompt:token:)-8glol","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:tokens:placement:prompt:token:)-qed1","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-2cr7s","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3ses7","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-8ajrp","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6rop4","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-78f5f","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9e28j","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/iconpickerview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/toolbar(content:)-713ni","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/toolbar(content:)-8l9jn","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/typeselectequivalent(_:)-107rm","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/typeselectequivalent(_:)-2xgla","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/typeselectequivalent(_:)-5p5h7","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/typesettinglanguage(_:isenabled:)-377a3","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/typesettinglanguage(_:isenabled:)-8st94","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/iconpickerview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/iconpickerview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/iconpickerview","title":"IconPickerView","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/init(startangle:endangle:clockwise:)","title":"init(startAngle: Angle, endAngle: Angle, clockwise: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/clockwise","title":"var clockwise: Bool","type":"property"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/endangle","title":"var endAngle: Angle","type":"property"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/startangle","title":"var startAngle: Angle","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/path(in:)","title":"func path(in: CGRect) -> Path","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/animatabledata","title":"var animatableData: EmptyAnimatableData","type":"property"}],"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/animatable-implementations","title":"Animatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/layoutdirectionbehavior","title":"var layoutDirectionBehavior: LayoutDirectionBehavior","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fill(_:style:)-12ncw","title":"func fill<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fill(_:style:)-4wxa3","title":"func fill<S>(S, style: FillStyle) -> _ShapeView<Self, S>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fill(style:)","title":"func fill(style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/intersection(_:eofill:)","title":"func intersection<T>(T, eoFill: Bool) -> some Shape","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/lineintersection(_:eofill:)","title":"func lineIntersection<T>(T, eoFill: Bool) -> some Shape","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/linesubtraction(_:eofill:)","title":"func lineSubtraction<T>(T, eoFill: Bool) -> some Shape","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/offset(_:)-12esn","title":"func offset(CGSize) -> OffsetShape<Self>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/offset(_:)-4qnnm","title":"func offset(CGPoint) -> OffsetShape<Self>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> OffsetShape<Self>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/rotation(_:anchor:)","title":"func rotation(Angle, anchor: UnitPoint) -> RotatedShape<Self>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scale(_:anchor:)","title":"func scale(CGFloat, anchor: UnitPoint) -> ScaledShape<Self>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scale(x:y:anchor:)","title":"func scale(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> ScaledShape<Self>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/size(_:)","title":"func size(CGSize) -> some Shape","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/size(width:height:)","title":"func size(width: CGFloat, height: CGFloat) -> some Shape","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/sizethatfits(_:)","title":"func sizeThatFits(ProposedViewSize) -> CGSize","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/stroke(_:linewidth:)","title":"func stroke<S>(S, lineWidth: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/stroke(_:linewidth:antialiased:)","title":"func stroke<S>(S, lineWidth: CGFloat, antialiased: Bool) -> StrokeShapeView<Self, S, EmptyView>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/stroke(_:style:)","title":"func stroke<S>(S, style: StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/stroke(_:style:antialiased:)","title":"func stroke<S>(S, style: StrokeStyle, antialiased: Bool) -> StrokeShapeView<Self, S, EmptyView>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/stroke(linewidth:)","title":"func stroke(lineWidth: CGFloat) -> some Shape","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/stroke(style:)","title":"func stroke(style: StrokeStyle) -> some Shape","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/subtracting(_:eofill:)","title":"func subtracting<T>(T, eoFill: Bool) -> some Shape","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/symmetricdifference(_:eofill:)","title":"func symmetricDifference<T>(T, eoFill: Bool) -> some Shape","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/transform(_:)","title":"func transform(CGAffineTransform) -> TransformedShape<Self>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/trim(from:to:)","title":"func trim(from: CGFloat, to: CGFloat) -> some Shape","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/union(_:eofill:)","title":"func union<T>(T, eoFill: Bool) -> some Shape","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/role","title":"static var role: ShapeRole","type":"property"}],"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/shape-implementations","title":"Shape Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/body","title":"var body: _ShapeView<Self, ForegroundStyle>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibility(activationpoint:)-43if","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibility(activationpoint:)-8a1gb","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityaction(named:_:)-42rtl","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityaction(named:_:)-76mo5","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityaction(named:_:)-8c2d","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityactivationpoint(_:)-3yjw5","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityactivationpoint(_:)-43ejz","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilitycustomcontent(_:_:importance:)-1iwhn","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilitycustomcontent(_:_:importance:)-1wpgr","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilitycustomcontent(_:_:importance:)-4hfn8","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilitycustomcontent(_:_:importance:)-6q95a","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilitycustomcontent(_:_:importance:)-7sbls","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilitycustomcontent(_:_:importance:)-937ab","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilitycustomcontent(_:_:importance:)-94xhh","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilitycustomcontent(_:_:importance:)-9m6f0","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityhint(_:)-45cgm","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityhint(_:)-5b31f","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityhint(_:)-8kc1d","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityinputlabels(_:)-4bxny","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityinputlabels(_:)-5zw16","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityinputlabels(_:)-9azt0","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilitylabel(_:)-3emj6","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilitylabel(_:)-612ea","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilitylabel(_:)-7obhd","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityrotor(_:entries:)-3py91","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityrotor(_:entries:)-597gx","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityrotor(_:entries:)-5nuec","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityrotor(_:entries:)-72uz0","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityrotor(_:entries:entryid:entrylabel:)-4ihmy","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityrotor(_:entries:entryid:entrylabel:)-7cbnj","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityrotor(_:entries:entryid:entrylabel:)-97rxs","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityrotor(_:entries:entryid:entrylabel:)-on6k","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityrotor(_:entries:entrylabel:)-1v4cx","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityrotor(_:entries:entrylabel:)-4x3b5","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityrotor(_:entries:entrylabel:)-7posx","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityrotor(_:entries:entrylabel:)-9z772","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityrotor(_:textranges:)-192wz","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityrotor(_:textranges:)-2why2","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityrotor(_:textranges:)-3qlip","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityrotor(_:textranges:)-8veu9","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityvalue(_:)-221pf","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityvalue(_:)-57ata","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityvalue(_:)-7jym2","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/alert(_:ispresented:actions:)-12ibc","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/alert(_:ispresented:actions:)-2mm54","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/alert(_:ispresented:actions:)-7a4k2","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/alert(_:ispresented:actions:message:)-7bqgp","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/alert(_:ispresented:actions:message:)-7n01n","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/alert(_:ispresented:actions:message:)-9t3vm","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/alert(_:ispresented:presenting:actions:)-37zdk","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/alert(_:ispresented:presenting:actions:)-9cqt7","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/alert(_:ispresented:presenting:actions:)-whha","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/alert(_:ispresented:presenting:actions:message:)-1qo7d","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/alert(_:ispresented:presenting:actions:message:)-4j8ei","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/alert(_:ispresented:presenting:actions:message:)-4qt19","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/alignmentguide(_:computevalue:)-6532i","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/alignmentguide(_:computevalue:)-7agqn","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/aspectratio(_:contentmode:)-1icye","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/aspectratio(_:contentmode:)-4nujx","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/background(_:in:fillstyle:)-5mfda","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/background(_:in:fillstyle:)-713ot","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/background(in:fillstyle:)-4t9yo","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/background(in:fillstyle:)-5nsdi","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/badge(_:)-3gg1f","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/badge(_:)-3klmq","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/badge(_:)-6n4wx","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/badge(_:)-7hy38","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/buttonstyle(_:)-6oick","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/buttonstyle(_:)-9h3kk","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartsymbolscale(_:)-41w7v","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartsymbolscale(_:)-sx78","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartsymbolscale(domain:range:)-4wxs2","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartsymbolscale(domain:range:)-80pot","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5y3yu","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6iuix","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/confirmationdialog(_:ispresented:titlevisibility:actions:)-89z7a","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1imu2","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-254a0","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2jrz","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2d54w","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-388ta","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9ez7x","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-4qjh9","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-792fo","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-920k8","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/contentmargins(_:_:for:)-1fhz8","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/contentmargins(_:_:for:)-2n894","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/dialogsuppressiontoggle(_:issuppressed:)-5ari2","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/dialogsuppressiontoggle(_:issuppressed:)-762d5","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/dialogsuppressiontoggle(_:issuppressed:)-8puh0","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/filedialogconfirmationlabel(_:)-37pnz","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/filedialogconfirmationlabel(_:)-461ix","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/filedialogconfirmationlabel(_:)-7tat4","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/filedialogmessage(_:)-45y4m","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/filedialogmessage(_:)-6kl6i","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/filedialogmessage(_:)-7ylt1","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4qmmh","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-9931v","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-1sz6v","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-5t7v7","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1atxz","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fileexporter(ispresented:documents:contenttype:oncompletion:)-2khfd","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-2o632","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-3mbc0","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fileexporterfilenamelabel(_:)-14pw2","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fileexporterfilenamelabel(_:)-6xzw4","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fileexporterfilenamelabel(_:)-7nkxg","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/focusedobject(_:)-2c7db","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/focusedobject(_:)-9f6mk","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/focusedsceneobject(_:)-544ys","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/focusedsceneobject(_:)-5v9jb","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/focusedscenevalue(_:_:)-2dkd8","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/focusedscenevalue(_:_:)-86ik1","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/focusedvalue(_:_:)-368td","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/focusedvalue(_:_:)-3gyzp","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/help(_:)-1h049","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/help(_:)-2o8im","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/help(_:)-8cjvw","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/keyboardshortcut(_:)-20ykx","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/keyboardshortcut(_:)-3ssg5","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/linelimit(_:)-2nkkr","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/linelimit(_:)-3auov","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/linelimit(_:)-3dpov","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/linelimit(_:)-56io2","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/listitemtint(_:)-3befz","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/listitemtint(_:)-740gm","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/listsectionspacing(_:)-62q5a","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/listsectionspacing(_:)-95tr2","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationbartitle(_:)-31jo3","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationbartitle(_:)-49c0n","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationbartitle(_:)-53ni9","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationbartitle(_:displaymode:)-3gyzp","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationbartitle(_:displaymode:)-6o383","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationbartitle(_:displaymode:)-85kx","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationdocument(_:preview:)-33b9z","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationdocument(_:preview:)-5zn9x","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationdocument(_:preview:)-98eqn","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationdocument(_:preview:)-9xrs0","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationtitle(_:)-1cu9c","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationtitle(_:)-3c2mj","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationtitle(_:)-5y2cs","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationtitle(_:)-78vku","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationtitle(_:)-9cdo0","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/offset(_:)-1envv","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/onchange(of:initial:_:)-3pyoq","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/onchange(of:initial:_:)-9v3xd","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/ondrop(of:delegate:)-4caj6","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/ondrop(of:delegate:)-62zh2","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/ondrop(of:istargeted:perform:)-1kttd","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/ondrop(of:istargeted:perform:)-4enqq","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/ondrop(of:istargeted:perform:)-o8nt","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/ondrop(of:istargeted:perform:)-u9w4","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/padding(_:)-55h25","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/padding(_:)-73vj7","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/renameaction(_:)-7ntim","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/renameaction(_:)-sqtb","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/safeareainset(edge:alignment:spacing:content:)-67fb1","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/safeareainset(edge:alignment:spacing:content:)-yiuo","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/safeareapadding(_:)-8tiej","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/safeareapadding(_:)-9rluo","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scaleeffect(_:anchor:)-4klmj","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scaleeffect(_:anchor:)-5x94n","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4le08","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6zpxw","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7093a","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:editabletokens:placement:prompt:token:)-82fgv","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:editabletokens:placement:prompt:token:)-85g2y","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:editabletokens:placement:prompt:token:)-88uha","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:ispresented:placement:prompt:)-5r2wz","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:ispresented:placement:prompt:)-6ez7z","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:ispresented:placement:prompt:)-7kart","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:placement:prompt:)-3mog0","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:placement:prompt:)-6mu6c","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:placement:prompt:)-9pkb1","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:placement:prompt:suggestions:)-6w49g","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:placement:prompt:suggestions:)-8yci2","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:placement:prompt:suggestions:)-9ra54","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:tokens:ispresented:placement:prompt:token:)-1189i","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:tokens:ispresented:placement:prompt:token:)-6u71g","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:tokens:ispresented:placement:prompt:token:)-82fii","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:tokens:placement:prompt:token:)-2vs2m","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:tokens:placement:prompt:token:)-4200","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:tokens:placement:prompt:token:)-xs4c","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-2jyjz","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-2nmqv","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3aec8","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-309dw","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-46l1a","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-53k0i","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/toolbar(content:)-6gjai","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/toolbar(content:)-8xrt3","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/typeselectequivalent(_:)-3r4ki","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/typeselectequivalent(_:)-4nslt","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/typeselectequivalent(_:)-97bfd","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/typesettinglanguage(_:isenabled:)-1t8h2","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/typesettinglanguage(_:isenabled:)-6askx","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/arc","title":"MonthlyHabitCalendarView.Arc","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/init(selectedhabit:)","title":"init(selectedHabit: Habit)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/columns","title":"let columns: [GridItem]","type":"property"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/daysofweek","title":"let daysOfWeek: [String]","type":"property"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/selectedhabit","title":"var selectedHabit: Habit","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibility(activationpoint:)-4116p","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibility(activationpoint:)-4zeqa","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityaction(named:_:)-2cgrp","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityaction(named:_:)-45tgc","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityaction(named:_:)-4wnv","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityactivationpoint(_:)-69k76","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityactivationpoint(_:)-6e90","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-1o8gd","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-28bd7","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-5upid","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-8w8j1","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-9fa3z","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-9i235","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-tgfv","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-umz1","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityhint(_:)-2wgsn","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityhint(_:)-5w6az","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityhint(_:)-l4sw","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityinputlabels(_:)-1jcyf","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityinputlabels(_:)-1jlqc","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityinputlabels(_:)-lvng","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilitylabel(_:)-11bh6","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilitylabel(_:)-6jrqf","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilitylabel(_:)-9h66q","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityrotor(_:entries:)-1vv6u","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityrotor(_:entries:)-37o53","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityrotor(_:entries:)-6nwyn","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityrotor(_:entries:)-7r4ij","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityrotor(_:entries:entryid:entrylabel:)-1bqwc","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityrotor(_:entries:entryid:entrylabel:)-1pdqx","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7v0u7","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityrotor(_:entries:entryid:entrylabel:)-fp2p","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityrotor(_:entries:entrylabel:)-7q4r7","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityrotor(_:entries:entrylabel:)-8zezq","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityrotor(_:entries:entrylabel:)-9glvt","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityrotor(_:entries:entrylabel:)-v228","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityrotor(_:textranges:)-42b2o","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityrotor(_:textranges:)-4o5vs","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityrotor(_:textranges:)-6p35z","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityrotor(_:textranges:)-83zc1","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityvalue(_:)-4qup6","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityvalue(_:)-9op1","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityvalue(_:)-cmfv","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/alert(_:ispresented:actions:)-2myfa","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/alert(_:ispresented:actions:)-76joq","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/alert(_:ispresented:actions:)-9ziw7","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/alert(_:ispresented:actions:message:)-1gjk6","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/alert(_:ispresented:actions:message:)-4m5hl","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/alert(_:ispresented:actions:message:)-7r1w4","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/alert(_:ispresented:presenting:actions:)-1imc5","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/alert(_:ispresented:presenting:actions:)-5he3n","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/alert(_:ispresented:presenting:actions:)-6y0no","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/alert(_:ispresented:presenting:actions:message:)-1lvjl","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/alert(_:ispresented:presenting:actions:message:)-1pwiw","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/alert(_:ispresented:presenting:actions:message:)-857jd","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/alignmentguide(_:computevalue:)-4n40s","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/alignmentguide(_:computevalue:)-bbiv","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/aspectratio(_:contentmode:)-3wkhz","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/aspectratio(_:contentmode:)-98da0","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/background(_:in:fillstyle:)-7ka","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/background(_:in:fillstyle:)-7o0f0","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/background(in:fillstyle:)-2zvtq","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/background(in:fillstyle:)-4wlss","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/badge(_:)-2apzt","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/badge(_:)-3aqye","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/badge(_:)-3ch3v","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/badge(_:)-8qfff","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/buttonstyle(_:)-1uv4p","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/buttonstyle(_:)-9rsa4","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartsymbolscale(_:)-1bwpz","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartsymbolscale(_:)-6dsuy","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartsymbolscale(domain:range:)-7csat","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartsymbolscale(domain:range:)-8mjwk","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-72beo","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7om8j","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-dgfj","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-26s2l","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2za1i","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6gur8","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-18cpj","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7kvma","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8939k","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-57pui","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-93bye","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-zxz3","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/contentmargins(_:_:for:)-2ds1j","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/contentmargins(_:_:for:)-3v2bz","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/dialogsuppressiontoggle(_:issuppressed:)-405rh","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/dialogsuppressiontoggle(_:issuppressed:)-4iusp","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/dialogsuppressiontoggle(_:issuppressed:)-9z8mq","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/filedialogconfirmationlabel(_:)-24ce6","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/filedialogconfirmationlabel(_:)-3hgd4","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/filedialogconfirmationlabel(_:)-3x5n0","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/filedialogmessage(_:)-1rcci","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/filedialogmessage(_:)-5ulej","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/filedialogmessage(_:)-77quq","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2zrsg","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-4tjq1","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-8oes","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-94ae","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-73x4o","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-98t2n","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-568mx","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-8ghc4","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fileexporterfilenamelabel(_:)-2zspg","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fileexporterfilenamelabel(_:)-3czd3","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fileexporterfilenamelabel(_:)-9cqjj","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/focusedobject(_:)-3j69u","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/focusedobject(_:)-74ft5","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/focusedsceneobject(_:)-1ohik","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/focusedsceneobject(_:)-2mw4s","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/focusedscenevalue(_:_:)-2a1jz","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/focusedscenevalue(_:_:)-4sd8f","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/focusedvalue(_:_:)-1btx2","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/focusedvalue(_:_:)-4tdjk","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/help(_:)-10rf","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/help(_:)-41kxt","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/help(_:)-5zi8","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/keyboardshortcut(_:)-3ofc0","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/keyboardshortcut(_:)-9jpr","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/linelimit(_:)-2ao0x","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/linelimit(_:)-4fwab","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/linelimit(_:)-4o17s","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/linelimit(_:)-7oqqc","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/listitemtint(_:)-8g93a","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/listitemtint(_:)-8rrm","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/listsectionspacing(_:)-2vqgk","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/listsectionspacing(_:)-6dgv1","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationbartitle(_:)-13rwk","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationbartitle(_:)-4pyk1","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationbartitle(_:)-9hcp9","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationbartitle(_:displaymode:)-4ptfr","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationbartitle(_:displaymode:)-5mehy","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationbartitle(_:displaymode:)-fy42","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationdocument(_:preview:)-2bups","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationdocument(_:preview:)-89n2j","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationdocument(_:preview:)-8k32o","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationdocument(_:preview:)-92jjq","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationtitle(_:)-1bm70","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationtitle(_:)-1ky3i","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationtitle(_:)-1v7uq","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationtitle(_:)-4ksxl","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationtitle(_:)-6mnoc","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/onchange(of:initial:_:)-59bzh","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/onchange(of:initial:_:)-8b3tv","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/ondrop(of:delegate:)-2j0j","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/ondrop(of:delegate:)-77n6a","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/ondrop(of:istargeted:perform:)-10nw7","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/ondrop(of:istargeted:perform:)-4dreg","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/ondrop(of:istargeted:perform:)-4grhn","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/ondrop(of:istargeted:perform:)-5hdg","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/padding(_:)-4qmrd","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/padding(_:)-9jw0a","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/renameaction(_:)-2lf8s","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/renameaction(_:)-6yufj","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/safeareainset(edge:alignment:spacing:content:)-54w1i","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/safeareainset(edge:alignment:spacing:content:)-9ck4b","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/safeareapadding(_:)-4fydy","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/safeareapadding(_:)-825kj","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/scaleeffect(_:anchor:)-5hpus","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/scaleeffect(_:anchor:)-8vfk8","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-15w36","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-617he","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-9cdnm","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:editabletokens:placement:prompt:token:)-5mxei","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:editabletokens:placement:prompt:token:)-92y5l","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:editabletokens:placement:prompt:token:)-9yeuk","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:ispresented:placement:prompt:)-5s2kh","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:ispresented:placement:prompt:)-6g41r","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:ispresented:placement:prompt:)-c9a0","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:placement:prompt:)-204o1","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:placement:prompt:)-2i8nd","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:placement:prompt:)-86qte","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:placement:prompt:suggestions:)-19nsg","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:placement:prompt:suggestions:)-3267w","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:placement:prompt:suggestions:)-6ebmt","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:tokens:ispresented:placement:prompt:token:)-29sgh","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:tokens:ispresented:placement:prompt:token:)-5a2ak","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:tokens:ispresented:placement:prompt:token:)-sqid","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:tokens:placement:prompt:token:)-5rya5","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:tokens:placement:prompt:token:)-5wtny","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:tokens:placement:prompt:token:)-5wz0s","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-2397g","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4ft26","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4r8gi","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1ymbx","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4407s","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-585u0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/toolbar(content:)-1yvnd","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/toolbar(content:)-5vq9a","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/typeselectequivalent(_:)-7goj8","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/typeselectequivalent(_:)-7yfnc","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/typeselectequivalent(_:)-9645i","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/typesettinglanguage(_:isenabled:)-4kn4v","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/typesettinglanguage(_:isenabled:)-7r91y","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/monthlyhabitcalendarview","title":"MonthlyHabitCalendarView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/newhabitview\/init(habits:ispresentingnewhabitview:)","title":"init(habits: Binding<[Habit]>, isPresentingNewHabitView: Binding<Bool>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/newhabitview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/goalsapp\/newhabitview\/habits","title":"var habits: [Habit]","type":"property"},{"path":"\/documentation\/goalsapp\/newhabitview\/ispresentingnewhabitview","title":"var isPresentingNewHabitView: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/accessibility(activationpoint:)-12z1w","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/accessibility(activationpoint:)-4991m","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityaction(named:_:)-3wei4","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityaction(named:_:)-3xm6t","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityaction(named:_:)-8jvys","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityactivationpoint(_:)-5ap05","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityactivationpoint(_:)-9an6f","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilitycustomcontent(_:_:importance:)-10zwk","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilitycustomcontent(_:_:importance:)-2d0ak","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilitycustomcontent(_:_:importance:)-343ac","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilitycustomcontent(_:_:importance:)-3i6xv","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilitycustomcontent(_:_:importance:)-5qi32","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilitycustomcontent(_:_:importance:)-6j1zn","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilitycustomcontent(_:_:importance:)-78pg8","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilitycustomcontent(_:_:importance:)-9nbt2","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityhint(_:)-1mi0q","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityhint(_:)-bpqi","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityhint(_:)-sbp3","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityinputlabels(_:)-4zz8b","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityinputlabels(_:)-960ki","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityinputlabels(_:)-wvrf","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilitylabel(_:)-1gt1j","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilitylabel(_:)-2cqaz","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilitylabel(_:)-8qh9","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityrotor(_:entries:)-3dtjp","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityrotor(_:entries:)-6psoh","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityrotor(_:entries:)-7zuoi","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityrotor(_:entries:)-9gb08","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityrotor(_:entries:entryid:entrylabel:)-2kxvf","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3ddji","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7rx8x","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityrotor(_:entries:entryid:entrylabel:)-99r2m","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityrotor(_:entries:entrylabel:)-27rot","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityrotor(_:entries:entrylabel:)-3p6uy","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityrotor(_:entries:entrylabel:)-a5f0","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityrotor(_:entries:entrylabel:)-paq9","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityrotor(_:textranges:)-2iejf","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityrotor(_:textranges:)-3grcc","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityrotor(_:textranges:)-3xq7y","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityrotor(_:textranges:)-6dm11","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityvalue(_:)-48wzb","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityvalue(_:)-4x4dm","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityvalue(_:)-64jd9","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/alert(_:ispresented:actions:)-5ee9d","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/alert(_:ispresented:actions:)-5u494","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/alert(_:ispresented:actions:)-8xwef","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/alert(_:ispresented:actions:message:)-405dq","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/alert(_:ispresented:actions:message:)-68j4s","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/alert(_:ispresented:actions:message:)-6anqb","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/alert(_:ispresented:presenting:actions:)-1j6fz","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/alert(_:ispresented:presenting:actions:)-7xnvk","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/alert(_:ispresented:presenting:actions:)-9r52m","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/alert(_:ispresented:presenting:actions:message:)-106i8","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/alert(_:ispresented:presenting:actions:message:)-7chdy","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/alert(_:ispresented:presenting:actions:message:)-ruwy","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/alignmentguide(_:computevalue:)-22068","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/alignmentguide(_:computevalue:)-9v0ml","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/aspectratio(_:contentmode:)-5k29u","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/aspectratio(_:contentmode:)-9ag1h","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/background(_:in:fillstyle:)-3bccr","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/background(_:in:fillstyle:)-7m7w4","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/background(in:fillstyle:)-42ckx","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/background(in:fillstyle:)-9xdnv","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/badge(_:)-3c8w5","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/badge(_:)-5xprp","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/badge(_:)-7hll6","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/badge(_:)-7w8y6","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/buttonstyle(_:)-1q0rb","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/buttonstyle(_:)-36ong","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartsymbolscale(_:)-5r6vo","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartsymbolscale(_:)-75eox","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartsymbolscale(domain:range:)-69i99","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartsymbolscale(domain:range:)-6qnh4","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4b8wp","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5beqt","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7fzej","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2tbw0","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4lu6h","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8t8hq","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3amf7","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7s9mc","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-ggue","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-25ovv","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6oyw","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7ytsv","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/contentmargins(_:_:for:)-650f2","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/contentmargins(_:_:for:)-85etj","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/dialogsuppressiontoggle(_:issuppressed:)-547qn","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/dialogsuppressiontoggle(_:issuppressed:)-61bl7","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/dialogsuppressiontoggle(_:issuppressed:)-7qze5","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/filedialogconfirmationlabel(_:)-2zkwm","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/filedialogconfirmationlabel(_:)-3rtxq","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/filedialogconfirmationlabel(_:)-74oc1","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/filedialogmessage(_:)-13mf8","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/filedialogmessage(_:)-6oyts","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/filedialogmessage(_:)-6ylp0","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3wyf2","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5qiar","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-1uvy7","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6cje3","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-2dztd","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-skpd","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-2cpr","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-9dvr2","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fileexporterfilenamelabel(_:)-40w08","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fileexporterfilenamelabel(_:)-8lvqk","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fileexporterfilenamelabel(_:)-909m8","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/focusedobject(_:)-6ul6f","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/focusedobject(_:)-9u4k","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/focusedsceneobject(_:)-6ihbs","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/focusedsceneobject(_:)-8mbd2","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/focusedscenevalue(_:_:)-2o3w6","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/focusedscenevalue(_:_:)-3ppnx","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/focusedvalue(_:_:)-2rv6n","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/focusedvalue(_:_:)-85f4w","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/help(_:)-30zj6","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/help(_:)-3cvx1","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/help(_:)-9p4ka","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/keyboardshortcut(_:)-5tqw8","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/keyboardshortcut(_:)-8cqxz","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/linelimit(_:)-1y9w6","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/linelimit(_:)-53p95","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/linelimit(_:)-57r3v","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/linelimit(_:)-7s8pp","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/listitemtint(_:)-4llyh","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/listitemtint(_:)-63xks","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/listsectionspacing(_:)-5i040","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/listsectionspacing(_:)-8jdb4","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/navigationbartitle(_:)-2q7lq","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/navigationbartitle(_:)-90w4h","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/navigationbartitle(_:)-9tqv6","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/navigationbartitle(_:displaymode:)-8z52o","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/navigationbartitle(_:displaymode:)-9h8wz","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/navigationbartitle(_:displaymode:)-9sji5","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/navigationdocument(_:preview:)-1h9iu","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/navigationdocument(_:preview:)-623ff","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/navigationdocument(_:preview:)-7t3sq","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/navigationdocument(_:preview:)-8qor8","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/navigationtitle(_:)-35q55","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/navigationtitle(_:)-48by8","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/navigationtitle(_:)-7gw6y","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/navigationtitle(_:)-8nlu1","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/navigationtitle(_:)-bwb4","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/onchange(of:initial:_:)-428fb","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/onchange(of:initial:_:)-7vpd4","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/ondrop(of:delegate:)-1awlx","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/ondrop(of:delegate:)-28nps","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/ondrop(of:istargeted:perform:)-1lvho","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/ondrop(of:istargeted:perform:)-3gsgz","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/ondrop(of:istargeted:perform:)-3zr3v","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/ondrop(of:istargeted:perform:)-76jkp","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/padding(_:)-2e66s","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/padding(_:)-5mwsd","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/renameaction(_:)-2pt9z","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/renameaction(_:)-8g56f","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/safeareainset(edge:alignment:spacing:content:)-17lq7","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/safeareainset(edge:alignment:spacing:content:)-39iba","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/safeareapadding(_:)-214i2","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/safeareapadding(_:)-9tuaz","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/scaleeffect(_:anchor:)-7udwt","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/scaleeffect(_:anchor:)-81au7","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-2t758","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-97wiu","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-9wmdv","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:editabletokens:placement:prompt:token:)-16nig","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:editabletokens:placement:prompt:token:)-20bym","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:editabletokens:placement:prompt:token:)-2ytjy","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:ispresented:placement:prompt:)-4gq8u","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:ispresented:placement:prompt:)-5admo","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:ispresented:placement:prompt:)-8uf46","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:placement:prompt:)-2h0cp","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:placement:prompt:)-7ucsy","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:placement:prompt:)-94av3","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:placement:prompt:suggestions:)-1s30s","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:placement:prompt:suggestions:)-7aihq","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:placement:prompt:suggestions:)-7l62e","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:tokens:ispresented:placement:prompt:token:)-7euw4","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:tokens:ispresented:placement:prompt:token:)-8mwef","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:tokens:ispresented:placement:prompt:token:)-9j0fs","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:tokens:placement:prompt:token:)-75n3u","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:tokens:placement:prompt:token:)-82f12","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:tokens:placement:prompt:token:)-9qjfq","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-48af5","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-6qpp0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-6qq9h","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2hkz7","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-609ta","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6ged","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/newhabitview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/toolbar(content:)-2vijl","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/toolbar(content:)-6qthl","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/typeselectequivalent(_:)-3u6uk","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/typeselectequivalent(_:)-3z8ne","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/typeselectequivalent(_:)-4lx1o","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/typesettinglanguage(_:isenabled:)-2jf2v","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/typesettinglanguage(_:isenabled:)-4yd69","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/newhabitview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/newhabitview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/newhabitview","title":"NewHabitView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/newhabitview_previews\/init()","title":"init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/newhabitview_previews\/previews","title":"static var previews: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/newhabitview_previews\/platform","title":"static var platform: PreviewPlatform?","type":"property"}],"path":"\/documentation\/goalsapp\/newhabitview_previews\/previewprovider-implementations","title":"PreviewProvider Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/newhabitview_previews","title":"NewHabitView_Previews","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/notificationmanager\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/notificationmanager\/cancelallnotifications()","title":"func cancelAllNotifications()","type":"method"},{"path":"\/documentation\/goalsapp\/notificationmanager\/cancelhabitnotification(for:)","title":"func cancelHabitNotification(for: Habit)","type":"method"},{"path":"\/documentation\/goalsapp\/notificationmanager\/requestpermission()","title":"func requestPermission()","type":"method"},{"path":"\/documentation\/goalsapp\/notificationmanager\/schedulenotification(for:)","title":"func scheduleNotification(for: Habit)","type":"method"},{"path":"\/documentation\/goalsapp\/notificationmanager\/sendnotification(title:body:time:)","title":"func sendNotification(title: String, body: String, time: Date)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/notificationmanager\/instance","title":"static let instance: NotificationManager","type":"property"}],"path":"\/documentation\/goalsapp\/notificationmanager","title":"NotificationManager","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibility(activationpoint:)-9lzbz","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibility(activationpoint:)-xyb8","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityaction(named:_:)-217dj","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityaction(named:_:)-4qc35","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityaction(named:_:)-yw6q","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityactivationpoint(_:)-1ommw","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityactivationpoint(_:)-vxnf","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilitycustomcontent(_:_:importance:)-4yhvr","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilitycustomcontent(_:_:importance:)-583as","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilitycustomcontent(_:_:importance:)-68fod","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilitycustomcontent(_:_:importance:)-6gkrr","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilitycustomcontent(_:_:importance:)-6rshr","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilitycustomcontent(_:_:importance:)-712r2","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilitycustomcontent(_:_:importance:)-78bk","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilitycustomcontent(_:_:importance:)-nhnw","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityhint(_:)-2n1bi","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityhint(_:)-63rof","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityhint(_:)-846db","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityinputlabels(_:)-4haeu","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityinputlabels(_:)-6npbh","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityinputlabels(_:)-zya8","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilitylabel(_:)-67akm","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilitylabel(_:)-6n0l","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilitylabel(_:)-8ztl9","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityrotor(_:entries:)-3xvsf","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityrotor(_:entries:)-4t8sg","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityrotor(_:entries:)-5ec5a","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityrotor(_:entries:)-6bdw6","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3yzi9","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityrotor(_:entries:entryid:entrylabel:)-5iptj","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8l4jn","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9u3v","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityrotor(_:entries:entrylabel:)-1c9ic","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityrotor(_:entries:entrylabel:)-1dkbu","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityrotor(_:entries:entrylabel:)-3zjtn","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityrotor(_:entries:entrylabel:)-8630u","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityrotor(_:textranges:)-1503j","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityrotor(_:textranges:)-38w6a","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityrotor(_:textranges:)-3r9rg","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityrotor(_:textranges:)-9ygtt","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityvalue(_:)-3frhk","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityvalue(_:)-5nibz","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityvalue(_:)-64dfe","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/alert(_:ispresented:actions:)-2a4n7","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/alert(_:ispresented:actions:)-5pk9f","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/alert(_:ispresented:actions:)-6stax","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/alert(_:ispresented:actions:message:)-4dixe","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/alert(_:ispresented:actions:message:)-6ev2p","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/alert(_:ispresented:actions:message:)-86wg2","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/alert(_:ispresented:presenting:actions:)-1qfiz","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/alert(_:ispresented:presenting:actions:)-230jv","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/alert(_:ispresented:presenting:actions:)-4itiv","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/alert(_:ispresented:presenting:actions:message:)-4tg9j","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/alert(_:ispresented:presenting:actions:message:)-7xpkw","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/alert(_:ispresented:presenting:actions:message:)-9odwf","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/alignmentguide(_:computevalue:)-79bmj","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/alignmentguide(_:computevalue:)-8pfp9","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/aspectratio(_:contentmode:)-346sv","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/aspectratio(_:contentmode:)-3he95","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/background(_:in:fillstyle:)-5227o","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/background(_:in:fillstyle:)-7ip8r","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/background(in:fillstyle:)-44x19","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/background(in:fillstyle:)-7r98w","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/badge(_:)-1oqge","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/badge(_:)-24iu","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/badge(_:)-2kku7","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/badge(_:)-9e2jg","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/buttonstyle(_:)-2kve7","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/buttonstyle(_:)-8niro","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartsymbolscale(_:)-759b6","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartsymbolscale(_:)-8612o","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartsymbolscale(domain:range:)-2a15d","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartsymbolscale(domain:range:)-8smop","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1nh5v","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-35szj","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4jvv2","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3ilj3","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6ij29","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8zz1v","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2oqda","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2zpdw","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9lwrr","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5b75t","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5gzk1","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-l3oq","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/contentmargins(_:_:for:)-270n7","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/contentmargins(_:_:for:)-6kd32","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/dialogsuppressiontoggle(_:issuppressed:)-2a66m","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/dialogsuppressiontoggle(_:issuppressed:)-5u0s8","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/dialogsuppressiontoggle(_:issuppressed:)-7goe2","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/filedialogconfirmationlabel(_:)-304ci","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/filedialogconfirmationlabel(_:)-4s3mb","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/filedialogconfirmationlabel(_:)-5tzvq","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/filedialogmessage(_:)-2v23i","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/filedialogmessage(_:)-75d1l","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/filedialogmessage(_:)-ecvc","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-178a2","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-28p6b","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-5pn8v","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-9upge","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-55ykj","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-9a1ni","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-43up6","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-4mt3","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fileexporterfilenamelabel(_:)-2ybki","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fileexporterfilenamelabel(_:)-4y9tk","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fileexporterfilenamelabel(_:)-8ywvo","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/focusedobject(_:)-26nlx","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/focusedobject(_:)-5c14t","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/focusedsceneobject(_:)-4k95i","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/focusedsceneobject(_:)-62aln","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/focusedscenevalue(_:_:)-152n9","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/focusedscenevalue(_:_:)-v2b9","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/focusedvalue(_:_:)-80n55","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/focusedvalue(_:_:)-8lqbf","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/help(_:)-5khha","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/help(_:)-6x1tr","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/help(_:)-8mqh3","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/keyboardshortcut(_:)-5dg7y","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/keyboardshortcut(_:)-9crx9","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/linelimit(_:)-4a0ls","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/linelimit(_:)-5wyzw","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/linelimit(_:)-7k9i7","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/linelimit(_:)-s2jj","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/listitemtint(_:)-1af9t","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/listitemtint(_:)-2pvrm","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/listsectionspacing(_:)-3jomm","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/listsectionspacing(_:)-7h5xk","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationbartitle(_:)-5tmpf","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationbartitle(_:)-ce5x","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationbartitle(_:)-xvqb","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationbartitle(_:displaymode:)-6csxe","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationbartitle(_:displaymode:)-8wx9d","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationbartitle(_:displaymode:)-9z8ov","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationdocument(_:preview:)-1z7pd","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationdocument(_:preview:)-60y34","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationdocument(_:preview:)-73it3","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationdocument(_:preview:)-93v7i","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationtitle(_:)-163du","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationtitle(_:)-1eutq","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationtitle(_:)-4gzwh","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationtitle(_:)-8w2fk","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationtitle(_:)-us5j","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/onchange(of:initial:_:)-12nr7","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/onchange(of:initial:_:)-3gx3s","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/ondrop(of:delegate:)-71fpe","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/ondrop(of:delegate:)-800mz","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/ondrop(of:istargeted:perform:)-37kcv","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/ondrop(of:istargeted:perform:)-5ktf","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/ondrop(of:istargeted:perform:)-7h55t","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/ondrop(of:istargeted:perform:)-z8pm","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/padding(_:)-53rg8","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/padding(_:)-8swzv","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/renameaction(_:)-3gtjv","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/renameaction(_:)-7edya","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/safeareainset(edge:alignment:spacing:content:)-6k6is","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/safeareainset(edge:alignment:spacing:content:)-9niwg","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/safeareapadding(_:)-47f56","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/safeareapadding(_:)-9r9ix","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/scaleeffect(_:anchor:)-2fdhb","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/scaleeffect(_:anchor:)-4p8b8","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-28sbx","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-7kwxa","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-9xl2y","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:editabletokens:placement:prompt:token:)-255co","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:editabletokens:placement:prompt:token:)-3l47q","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:editabletokens:placement:prompt:token:)-70e03","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:ispresented:placement:prompt:)-2e5vh","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:ispresented:placement:prompt:)-38wr8","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:ispresented:placement:prompt:)-tcst","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:placement:prompt:)-1ntnv","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:placement:prompt:)-69rzr","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:placement:prompt:)-8fq58","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:placement:prompt:suggestions:)-2zlm0","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:placement:prompt:suggestions:)-68qn1","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:placement:prompt:suggestions:)-8ow7h","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:tokens:ispresented:placement:prompt:token:)-4khyr","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:tokens:ispresented:placement:prompt:token:)-62hxr","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:tokens:ispresented:placement:prompt:token:)-7olv5","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:tokens:placement:prompt:token:)-114qc","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:tokens:placement:prompt:token:)-4fyna","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:tokens:placement:prompt:token:)-9ifj7","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-2vwfj","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3cxl9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-m94j","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6ivs1","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-97hmb","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-ak60","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/progresspiechartview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/toolbar(content:)-1nhek","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/toolbar(content:)-91obd","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/typeselectequivalent(_:)-1py9v","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/typeselectequivalent(_:)-917pu","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/typeselectequivalent(_:)-9w6ql","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/typesettinglanguage(_:isenabled:)-437r0","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/typesettinglanguage(_:isenabled:)-7y0ik","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/progresspiechartview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/progresspiechartview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/progresspiechartview","title":"ProgressPieChartView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/statsview\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/statsview\/body","title":"var body: some View","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/accessibility(activationpoint:)-6svlp","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/accessibility(activationpoint:)-71hp8","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityaction(named:_:)-150pl","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityaction(named:_:)-4k20w","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityaction(named:_:)-asx9","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityactivationpoint(_:)-312fe","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityactivationpoint(_:)-97emu","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilitycustomcontent(_:_:importance:)-22gw1","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilitycustomcontent(_:_:importance:)-277pf","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilitycustomcontent(_:_:importance:)-2zvxh","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilitycustomcontent(_:_:importance:)-3m3tj","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilitycustomcontent(_:_:importance:)-3v4s","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilitycustomcontent(_:_:importance:)-4k9zy","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilitycustomcontent(_:_:importance:)-6p99m","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilitycustomcontent(_:_:importance:)-ol4p","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityhint(_:)-3tk9f","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityhint(_:)-4056y","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityhint(_:)-4r4mp","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityinputlabels(_:)-2rqqi","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityinputlabels(_:)-3yqsq","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityinputlabels(_:)-6bbbm","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilitylabel(_:)-3muh","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilitylabel(_:)-3sef7","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilitylabel(_:)-6mqsw","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityrotor(_:entries:)-3u0gz","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityrotor(_:entries:)-5fv7r","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityrotor(_:entries:)-76zno","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityrotor(_:entries:)-7j30q","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityrotor(_:entries:entryid:entrylabel:)-1nkqk","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3qs3r","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityrotor(_:entries:entryid:entrylabel:)-6komt","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityrotor(_:entries:entryid:entrylabel:)-n1j6","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityrotor(_:entries:entrylabel:)-1hx3y","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityrotor(_:entries:entrylabel:)-2n0i6","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityrotor(_:entries:entrylabel:)-3sd3g","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityrotor(_:entries:entrylabel:)-8t3q","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityrotor(_:textranges:)-1ulcu","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityrotor(_:textranges:)-3xgxy","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityrotor(_:textranges:)-41zrq","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityrotor(_:textranges:)-6lmze","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityvalue(_:)-5pik5","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityvalue(_:)-8t1gv","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityvalue(_:)-9s2ic","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/alert(_:ispresented:actions:)-2l6os","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/alert(_:ispresented:actions:)-7qu6n","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/alert(_:ispresented:actions:)-832ee","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/alert(_:ispresented:actions:message:)-3ruwe","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/alert(_:ispresented:actions:message:)-686lr","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/alert(_:ispresented:actions:message:)-6p8hx","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/alert(_:ispresented:presenting:actions:)-42k5e","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/alert(_:ispresented:presenting:actions:)-7e95g","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/alert(_:ispresented:presenting:actions:)-d7on","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/alert(_:ispresented:presenting:actions:message:)-37z6h","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/alert(_:ispresented:presenting:actions:message:)-51x9a","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/alert(_:ispresented:presenting:actions:message:)-5ulfq","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/alignmentguide(_:computevalue:)-1924f","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/alignmentguide(_:computevalue:)-9i2az","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/aspectratio(_:contentmode:)-8ecau","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/aspectratio(_:contentmode:)-8scwo","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/background(_:in:fillstyle:)-44eep","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/background(_:in:fillstyle:)-7yepf","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/background(in:fillstyle:)-3kops","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/background(in:fillstyle:)-3qy51","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/badge(_:)-5ucdr","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/badge(_:)-5w19n","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/badge(_:)-9bern","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/badge(_:)-ijm2","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/buttonstyle(_:)-4p464","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/buttonstyle(_:)-838kz","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartsymbolscale(_:)-9tjb","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartsymbolscale(_:)-qwm4","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartsymbolscale(domain:range:)-874oq","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartsymbolscale(domain:range:)-9uo3i","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1n5jx","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3d0n2","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-9ammf","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2au7","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2zw5i","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5wyc1","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-72obd","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-73ubm","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-7drpz","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-12zvi","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-5gw9x","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6nc9s","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/contentmargins(_:_:for:)-2z6yy","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/contentmargins(_:_:for:)-3pyny","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/dialogsuppressiontoggle(_:issuppressed:)-1of3v","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/dialogsuppressiontoggle(_:issuppressed:)-4ncni","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/dialogsuppressiontoggle(_:issuppressed:)-5oxp1","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/filedialogconfirmationlabel(_:)-39nfb","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/filedialogconfirmationlabel(_:)-3rg4f","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/filedialogconfirmationlabel(_:)-8nvx5","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/filedialogmessage(_:)-2wwdl","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/filedialogmessage(_:)-43k2h","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/filedialogmessage(_:)-9lber","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-6f0bd","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8nfr3","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-2rhxe","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-537d6","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-330gp","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-833wb","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-2d46y","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-dmwr","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fileexporterfilenamelabel(_:)-37evq","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fileexporterfilenamelabel(_:)-4xnxu","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fileexporterfilenamelabel(_:)-9wj4l","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/focusedobject(_:)-728j7","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/focusedobject(_:)-8otrw","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/focusedsceneobject(_:)-38k1k","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/focusedsceneobject(_:)-3dlq0","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/focusedscenevalue(_:_:)-46w4g","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/focusedscenevalue(_:_:)-9p9iv","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/focusedvalue(_:_:)-430qx","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/focusedvalue(_:_:)-4rqwt","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/help(_:)-2d11b","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/help(_:)-3s0ir","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/help(_:)-49lsg","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/keyboardshortcut(_:)-2ju82","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/keyboardshortcut(_:)-8ptye","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/linelimit(_:)-20qpm","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/linelimit(_:)-3lxva","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/linelimit(_:)-5cpte","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/linelimit(_:)-8vfwc","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/listitemtint(_:)-808b9","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/listitemtint(_:)-sd67","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/listsectionspacing(_:)-8gzm0","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/listsectionspacing(_:)-9ruv0","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/navigationbartitle(_:)-4v61d","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/navigationbartitle(_:)-5jpxk","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/navigationbartitle(_:)-qfsk","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/navigationbartitle(_:displaymode:)-2pcsq","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/navigationbartitle(_:displaymode:)-8tojl","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/navigationbartitle(_:displaymode:)-be66","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/navigationdocument(_:preview:)-30t0f","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/navigationdocument(_:preview:)-3elbk","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/navigationdocument(_:preview:)-6k0oi","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/navigationdocument(_:preview:)-mz8r","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/navigationtitle(_:)-21f8p","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/navigationtitle(_:)-6bxmq","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/navigationtitle(_:)-7h2vq","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/navigationtitle(_:)-lar","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/navigationtitle(_:)-yfvb","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/onchange(of:initial:_:)-1fdtq","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/onchange(of:initial:_:)-9nrpr","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/ondrop(of:delegate:)-3mhfh","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/ondrop(of:delegate:)-99eml","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/ondrop(of:istargeted:perform:)-32okd","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/ondrop(of:istargeted:perform:)-33rzz","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/ondrop(of:istargeted:perform:)-3jojb","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/ondrop(of:istargeted:perform:)-9gnn8","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/padding(_:)-9n3l3","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/padding(_:)-9xx0o","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/renameaction(_:)-48xi5","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/renameaction(_:)-7raem","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/safeareainset(edge:alignment:spacing:content:)-8mfnf","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/safeareainset(edge:alignment:spacing:content:)-ibk3","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/safeareapadding(_:)-49d4y","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/safeareapadding(_:)-9y1xd","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/scaleeffect(_:anchor:)-7e3ze","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/scaleeffect(_:anchor:)-967jc","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4z652","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-9ylzx","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-vsoa","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:editabletokens:placement:prompt:token:)-2cmgc","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:editabletokens:placement:prompt:token:)-85y0n","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:editabletokens:placement:prompt:token:)-s4g9","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:ispresented:placement:prompt:)-2vuir","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:ispresented:placement:prompt:)-3jtbi","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:ispresented:placement:prompt:)-89vou","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:placement:prompt:)-4kwji","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:placement:prompt:)-5ojc6","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:placement:prompt:)-6sj8q","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/searchable(text:placement:prompt:suggestions:)-2l86l","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/searchable(text:placement:prompt:suggestions:)-7czjw","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/searchable(text:placement:prompt:suggestions:)-9mzpp","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:tokens:ispresented:placement:prompt:token:)-41bcu","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:tokens:ispresented:placement:prompt:token:)-9e876","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:tokens:ispresented:placement:prompt:token:)-9g4oo","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:tokens:placement:prompt:token:)-4b09n","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:tokens:placement:prompt:token:)-5f90c","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:tokens:placement:prompt:token:)-6d0el","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-2foc1","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-5e8ej","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-844ef","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2w8t8","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-43oga","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-n92f","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/statsview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/toolbar(content:)-1mjsy","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/toolbar(content:)-1nf4y","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/typeselectequivalent(_:)-31w82","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/typeselectequivalent(_:)-5oqmn","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/typeselectequivalent(_:)-9fcl","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/typesettinglanguage(_:isenabled:)-70ysz","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/typesettinglanguage(_:isenabled:)-97x8q","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/statsview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/statsview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/statsview","title":"StatsView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/themepickerview\/init(selection:presentationmode:)","title":"init(selection: Binding<HabitTheme>, presentationMode: Environment<Binding<PresentationMode>>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/themepickerview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/goalsapp\/themepickerview\/presentationmode","title":"var presentationMode: Binding<PresentationMode>","type":"property"},{"path":"\/documentation\/goalsapp\/themepickerview\/selection","title":"var selection: HabitTheme","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/accessibility(activationpoint:)-1l14l","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/accessibility(activationpoint:)-40y88","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityaction(named:_:)-4c3u5","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityaction(named:_:)-4q29o","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityaction(named:_:)-8rxke","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityactivationpoint(_:)-3alxu","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityactivationpoint(_:)-vkxn","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilitycustomcontent(_:_:importance:)-3q99d","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilitycustomcontent(_:_:importance:)-3vj2p","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilitycustomcontent(_:_:importance:)-4ax67","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilitycustomcontent(_:_:importance:)-7cr19","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilitycustomcontent(_:_:importance:)-80i8r","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilitycustomcontent(_:_:importance:)-99d3z","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilitycustomcontent(_:_:importance:)-9abxq","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilitycustomcontent(_:_:importance:)-9sdvb","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityhint(_:)-249an","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityhint(_:)-5kjps","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityhint(_:)-6xl61","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityinputlabels(_:)-38vtv","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityinputlabels(_:)-85uvd","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityinputlabels(_:)-h780","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilitylabel(_:)-1ievk","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilitylabel(_:)-3szea","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilitylabel(_:)-6ec68","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityrotor(_:entries:)-2ji27","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityrotor(_:entries:)-5jxlk","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityrotor(_:entries:)-7qd5t","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityrotor(_:entries:)-97hac","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-1qod1","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-6mn7k","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-6vs0","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-72prc","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityrotor(_:entries:entrylabel:)-1rzdf","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityrotor(_:entries:entrylabel:)-1z055","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityrotor(_:entries:entrylabel:)-266w9","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityrotor(_:entries:entrylabel:)-51ixu","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityrotor(_:textranges:)-2668n","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityrotor(_:textranges:)-4fv29","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityrotor(_:textranges:)-69ik","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityrotor(_:textranges:)-8l2b2","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityvalue(_:)-65zko","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityvalue(_:)-6l5kx","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityvalue(_:)-emkk","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/alert(_:ispresented:actions:)-1p9bl","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/alert(_:ispresented:actions:)-2m9l8","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/alert(_:ispresented:actions:)-8wel8","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/alert(_:ispresented:actions:message:)-2qxzx","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/alert(_:ispresented:actions:message:)-4t15q","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/alert(_:ispresented:actions:message:)-ks0m","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/alert(_:ispresented:presenting:actions:)-3eojh","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/alert(_:ispresented:presenting:actions:)-4823d","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/alert(_:ispresented:presenting:actions:)-94wa5","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/alert(_:ispresented:presenting:actions:message:)-82nd2","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/alert(_:ispresented:presenting:actions:message:)-92p7r","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/alert(_:ispresented:presenting:actions:message:)-9kcml","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/alignmentguide(_:computevalue:)-3ra3u","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/alignmentguide(_:computevalue:)-6twi6","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/aspectratio(_:contentmode:)-5qwd5","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/aspectratio(_:contentmode:)-8w714","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/background(_:in:fillstyle:)-64a1s","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/background(_:in:fillstyle:)-9uxcz","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/background(in:fillstyle:)-24pwy","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/background(in:fillstyle:)-573m0","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/badge(_:)-1ffbt","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/badge(_:)-2jis9","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/badge(_:)-2l6j6","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/badge(_:)-5ka59","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/buttonstyle(_:)-3u9ml","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/buttonstyle(_:)-8sbmg","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartsymbolscale(_:)-1341h","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartsymbolscale(_:)-3ng4u","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartsymbolscale(domain:range:)-19is6","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartsymbolscale(domain:range:)-5u096","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3su79","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4411c","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-7fmw2","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3rxln","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5l90s","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-63v7x","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2ywiy","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3nin2","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-8p3yf","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-12k20","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1ezpw","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2tj1f","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/contentmargins(_:_:for:)-4m89l","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/contentmargins(_:_:for:)-72vs9","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/dialogsuppressiontoggle(_:issuppressed:)-2hdgg","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/dialogsuppressiontoggle(_:issuppressed:)-5f4v2","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/dialogsuppressiontoggle(_:issuppressed:)-8t0ry","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/filedialogconfirmationlabel(_:)-291os","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/filedialogconfirmationlabel(_:)-32h5c","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/filedialogconfirmationlabel(_:)-4ysdh","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/filedialogmessage(_:)-5zyih","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/filedialogmessage(_:)-66jff","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/filedialogmessage(_:)-936c9","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-2p17w","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5zlnc","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6f9zc","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-96f7r","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-26fh3","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-5fir7","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-479v0","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-7bggt","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fileexporterfilenamelabel(_:)-1qoo6","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fileexporterfilenamelabel(_:)-3b92m","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fileexporterfilenamelabel(_:)-3v5r0","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/focusedobject(_:)-3157c","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/focusedobject(_:)-9va9e","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/focusedsceneobject(_:)-67kjy","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/focusedsceneobject(_:)-99uom","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/focusedscenevalue(_:_:)-3b6jr","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/focusedscenevalue(_:_:)-6rsc9","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/focusedvalue(_:_:)-41v8s","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/focusedvalue(_:_:)-4hnpe","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/help(_:)-6zi5t","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/help(_:)-9jqg0","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/help(_:)-uqwz","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/keyboardshortcut(_:)-418s9","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/keyboardshortcut(_:)-8wybt","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/linelimit(_:)-2863i","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/linelimit(_:)-2vd4d","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/linelimit(_:)-et11","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/linelimit(_:)-ojsh","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/listitemtint(_:)-3pmxt","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/listitemtint(_:)-5f59s","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/listsectionspacing(_:)-65a5s","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/listsectionspacing(_:)-7z4s9","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/navigationbartitle(_:)-2dfb5","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/navigationbartitle(_:)-6wbgk","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/navigationbartitle(_:)-74iep","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/navigationbartitle(_:displaymode:)-3fttc","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/navigationbartitle(_:displaymode:)-5z79g","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/navigationbartitle(_:displaymode:)-8i2s5","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/navigationdocument(_:preview:)-3ez1a","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/navigationdocument(_:preview:)-97zgi","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/navigationdocument(_:preview:)-9aji4","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/navigationdocument(_:preview:)-9gbvm","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/navigationtitle(_:)-686b0","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/navigationtitle(_:)-7e1wt","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/navigationtitle(_:)-f05y","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/navigationtitle(_:)-f2n4","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/navigationtitle(_:)-xsi6","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/onchange(of:initial:_:)-3yo9j","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/onchange(of:initial:_:)-epos","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/ondrop(of:delegate:)-1wzac","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/ondrop(of:delegate:)-3w62","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/ondrop(of:istargeted:perform:)-2xnrs","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/ondrop(of:istargeted:perform:)-47wv1","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/ondrop(of:istargeted:perform:)-5bvi9","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/ondrop(of:istargeted:perform:)-8w4ih","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/padding(_:)-476zq","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/padding(_:)-7w8z9","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/renameaction(_:)-4xr42","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/renameaction(_:)-53wxx","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/safeareainset(edge:alignment:spacing:content:)-11hdb","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/safeareainset(edge:alignment:spacing:content:)-47pyf","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/safeareapadding(_:)-4vh1a","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/safeareapadding(_:)-98zew","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/scaleeffect(_:anchor:)-32c8x","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/scaleeffect(_:anchor:)-5bfao","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1857e","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1axd","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-445ol","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:editabletokens:placement:prompt:token:)-60ww","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:editabletokens:placement:prompt:token:)-6jdc4","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:editabletokens:placement:prompt:token:)-iivs","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:ispresented:placement:prompt:)-2zpo4","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:ispresented:placement:prompt:)-8kn15","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:ispresented:placement:prompt:)-8z3kp","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:placement:prompt:)-4bokg","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:placement:prompt:)-5b281","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:placement:prompt:)-9gweb","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:placement:prompt:suggestions:)-4lvh1","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:placement:prompt:suggestions:)-69paf","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:placement:prompt:suggestions:)-6vjj0","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6bu2l","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-933ae","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-xrmu","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:tokens:placement:prompt:token:)-3xkxi","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:tokens:placement:prompt:token:)-7b68z","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:tokens:placement:prompt:token:)-7ldxn","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-1cvcv","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-2c8q6","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-5ab8k","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-29rcp","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-33xj0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-76qlm","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/themepickerview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/toolbar(content:)-3devr","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/toolbar(content:)-3m38l","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/typeselectequivalent(_:)-1n51s","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/typeselectequivalent(_:)-2j0q0","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/typeselectequivalent(_:)-56fhd","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/typesettinglanguage(_:isenabled:)-200g4","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/typesettinglanguage(_:isenabled:)-7r18a","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/themepickerview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/themepickerview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/themepickerview","title":"ThemePickerView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/init(selectedhabit:)","title":"init(selectedHabit: Habit)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/columns","title":"let columns: [GridItem]","type":"property"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/daysofweek","title":"let daysOfWeek: [String]","type":"property"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/selectedhabit","title":"var selectedHabit: Habit","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibility(activationpoint:)-2kzlp","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibility(activationpoint:)-8x4h0","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityaction(named:_:)-11im1","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityaction(named:_:)-4rd3x","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityaction(named:_:)-8rx1z","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityactivationpoint(_:)-13oia","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityactivationpoint(_:)-7lgsx","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-2kis8","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-3xavo","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-5mwgu","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-6n7p6","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-6x715","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-8s1as","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-9b4cu","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-9sz0g","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityhint(_:)-6jq5q","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityhint(_:)-7u907","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityhint(_:)-faft","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityinputlabels(_:)-2qhp1","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityinputlabels(_:)-53qq2","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityinputlabels(_:)-8402n","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilitylabel(_:)-4v5ms","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilitylabel(_:)-5dzs","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilitylabel(_:)-cuzs","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityrotor(_:entries:)-4psoi","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityrotor(_:entries:)-4wjl9","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityrotor(_:entries:)-5wsz3","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityrotor(_:entries:)-79cc8","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityrotor(_:entries:entryid:entrylabel:)-2kzal","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityrotor(_:entries:entryid:entrylabel:)-5odhs","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9zn9","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityrotor(_:entries:entryid:entrylabel:)-rta0","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityrotor(_:entries:entrylabel:)-1rbd8","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityrotor(_:entries:entrylabel:)-5tzet","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityrotor(_:entries:entrylabel:)-7v345","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityrotor(_:entries:entrylabel:)-7yx2k","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityrotor(_:textranges:)-4fmzx","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityrotor(_:textranges:)-4phj9","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityrotor(_:textranges:)-727ep","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityrotor(_:textranges:)-96zgc","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityvalue(_:)-1190","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityvalue(_:)-3hhfb","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityvalue(_:)-4wn3d","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/alert(_:ispresented:actions:)-3uh7u","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/alert(_:ispresented:actions:)-730rn","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/alert(_:ispresented:actions:)-97p69","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/alert(_:ispresented:actions:message:)-8ctwb","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/alert(_:ispresented:actions:message:)-8mu9z","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/alert(_:ispresented:actions:message:)-8zzp5","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/alert(_:ispresented:presenting:actions:)-2hwq","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/alert(_:ispresented:presenting:actions:)-5gyq8","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/alert(_:ispresented:presenting:actions:)-9e8cn","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/alert(_:ispresented:presenting:actions:message:)-5rq85","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/alert(_:ispresented:presenting:actions:message:)-9xnzk","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/alert(_:ispresented:presenting:actions:message:)-g38h","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/alignmentguide(_:computevalue:)-1kb1i","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/alignmentguide(_:computevalue:)-2f0a8","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/aspectratio(_:contentmode:)-6214p","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/aspectratio(_:contentmode:)-9x3rs","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/background(_:in:fillstyle:)-34v97","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/background(_:in:fillstyle:)-7vgy1","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/background(in:fillstyle:)-4408d","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/background(in:fillstyle:)-7i2jb","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/badge(_:)-1amyk","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/badge(_:)-2t5y4","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/badge(_:)-3n7jf","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/badge(_:)-mb9v","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/buttonstyle(_:)-6j2q","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/buttonstyle(_:)-72omh","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartsymbolscale(_:)-5ufdu","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartsymbolscale(_:)-947ss","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartsymbolscale(domain:range:)-1zu8v","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartsymbolscale(domain:range:)-371jr","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5lnq6","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8dmuf","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8yhka","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6cl3b","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6ug0g","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9jub1","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-52l1w","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6q4pc","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-79n3s","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-47gi2","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7hbr2","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-vbp9","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/contentmargins(_:_:for:)-21yv7","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/contentmargins(_:_:for:)-8oki3","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/dialogsuppressiontoggle(_:issuppressed:)-2q2g7","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/dialogsuppressiontoggle(_:issuppressed:)-2y20h","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/dialogsuppressiontoggle(_:issuppressed:)-4hofb","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/filedialogconfirmationlabel(_:)-2ql5q","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/filedialogconfirmationlabel(_:)-5gaq7","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/filedialogconfirmationlabel(_:)-72zci","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/filedialogmessage(_:)-526m9","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/filedialogmessage(_:)-612c2","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/filedialogmessage(_:)-7n6qb","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7xh7c","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-80s4p","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-7xvtt","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-iwvv","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-5nj73","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-9bldr","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-455cq","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-zys7","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fileexporterfilenamelabel(_:)-38330","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fileexporterfilenamelabel(_:)-608xv","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fileexporterfilenamelabel(_:)-68owd","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/focusedobject(_:)-6getl","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/focusedobject(_:)-fpq8","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/focusedsceneobject(_:)-6geef","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/focusedsceneobject(_:)-8x8vg","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/focusedscenevalue(_:_:)-4ow0m","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/focusedscenevalue(_:_:)-d8x4","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/focusedvalue(_:_:)-1ygdy","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/focusedvalue(_:_:)-488e6","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/help(_:)-219ow","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/help(_:)-48yhg","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/help(_:)-5kay8","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/keyboardshortcut(_:)-2nds6","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/keyboardshortcut(_:)-2qeqo","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/linelimit(_:)-829b4","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/linelimit(_:)-8997q","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/linelimit(_:)-910pf","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/linelimit(_:)-9l86y","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/listitemtint(_:)-45hex","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/listitemtint(_:)-7e1ci","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/listsectionspacing(_:)-2gs58","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/listsectionspacing(_:)-92ef4","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationbartitle(_:)-1b3ye","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationbartitle(_:)-1ptnh","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationbartitle(_:)-94pif","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationbartitle(_:displaymode:)-1820r","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationbartitle(_:displaymode:)-3yenw","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationbartitle(_:displaymode:)-68hho","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationdocument(_:preview:)-1551g","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationdocument(_:preview:)-4416f","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationdocument(_:preview:)-73yw4","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationdocument(_:preview:)-8grim","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationtitle(_:)-1iat7","title":"func navigationTitle(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationtitle(_:)-34a5q","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationtitle(_:)-3618d","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationtitle(_:)-6uow7","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationtitle(_:)-9mz5x","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/onchange(of:initial:_:)-3vfjr","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/onchange(of:initial:_:)-66v37","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/ondrop(of:delegate:)-2kax1","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/ondrop(of:delegate:)-88xr7","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/ondrop(of:istargeted:perform:)-226ee","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/ondrop(of:istargeted:perform:)-340vf","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/ondrop(of:istargeted:perform:)-79mf","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/ondrop(of:istargeted:perform:)-92pnm","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/padding(_:)-1jfac","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/padding(_:)-6l453","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/renameaction(_:)-1c35y","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/renameaction(_:)-1wvwy","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/safeareainset(edge:alignment:spacing:content:)-4mfxd","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/safeareainset(edge:alignment:spacing:content:)-pd22","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/safeareapadding(_:)-619g5","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/safeareapadding(_:)-w6gn","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/scaleeffect(_:anchor:)-46q2r","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/scaleeffect(_:anchor:)-5kq1q","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3gc8z","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3m6r9","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-98hor","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:editabletokens:placement:prompt:token:)-4h6e0","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:editabletokens:placement:prompt:token:)-5bxei","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:editabletokens:placement:prompt:token:)-6ky46","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:ispresented:placement:prompt:)-2qaax","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:ispresented:placement:prompt:)-5zspv","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:ispresented:placement:prompt:)-7fcoc","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:placement:prompt:)-7unaq","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:placement:prompt:)-8i1u6","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:placement:prompt:)-9hm0r","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:placement:prompt:suggestions:)-48eu9","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:placement:prompt:suggestions:)-50ef8","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:placement:prompt:suggestions:)-5rmh5","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:tokens:ispresented:placement:prompt:token:)-3w8vr","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:tokens:ispresented:placement:prompt:token:)-58sb9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:tokens:ispresented:placement:prompt:token:)-7lso9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:tokens:placement:prompt:token:)-5k5li","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:tokens:placement:prompt:token:)-5znq1","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:tokens:placement:prompt:token:)-l67t","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-1slqg","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3j28j","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-ki9j","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3azxn","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-74hce","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-86gkl","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/toolbar(content:)-60o3d","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/toolbar(content:)-9wt3x","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/typeselectequivalent(_:)-11haz","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/typeselectequivalent(_:)-3x12i","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/typeselectequivalent(_:)-52xen","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/typesettinglanguage(_:isenabled:)-9jcrn","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/typesettinglanguage(_:isenabled:)-t3tj","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/weeklyhabitcalendarview","title":"WeeklyHabitCalendarView","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/init(selectedhabit:)","title":"init(selectedHabit: Habit)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/body","title":"var body: some View","type":"property"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/monthsofyear","title":"let monthsOfYear: [String]","type":"property"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/rows","title":"let rows: [GridItem]","type":"property"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/selectedhabit","title":"var selectedHabit: Habit","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accentcolor(_:)","title":"func accentColor(Color?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibility(activationpoint:)-4t69a","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibility(activationpoint:)-8h58","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibility(addtraits:)","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibility(hidden:)","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibility(hint:)","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibility(identifier:)","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibility(inputlabels:)","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibility(label:)","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibility(removetraits:)","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibility(selectionidentifier:)","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibility(sortpriority:)","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibility(value:)","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityaction(named:_:)-3aau4","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityaction(named:_:)-43mr3","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityaction(named:_:)-4nal4","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityactivationpoint(_:)-32kwo","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityactivationpoint(_:)-66c9p","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-3nc4d","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-44ww2","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-5howu","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-69vwn","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-73qum","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-9fkal","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-9rgww","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilitycustomcontent(_:_:importance:)-9u4yq","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityhint(_:)-1gfn5","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityhint(_:)-6yu9m","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityhint(_:)-7le6j","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityinputlabels(_:)-3ddkj","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityinputlabels(_:)-5b738","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityinputlabels(_:)-5lyal","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilitylabel(_:)-2dc9q","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilitylabel(_:)-7mxsp","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilitylabel(_:)-nsp5","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityrotor(_:entries:)-1s1xz","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityrotor(_:entries:)-4v9dz","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityrotor(_:entries:)-52lop","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityrotor(_:entries:)-71fiq","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityrotor(_:entries:entryid:entrylabel:)-16x3c","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityrotor(_:entries:entryid:entrylabel:)-5asiu","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityrotor(_:entries:entryid:entrylabel:)-66r9o","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9muwn","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityrotor(_:entries:entrylabel:)-1q1d0","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityrotor(_:entries:entrylabel:)-7jj7r","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityrotor(_:entries:entrylabel:)-9vk8l","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityrotor(_:entries:entrylabel:)-d548","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityrotor(_:textranges:)-1qvnz","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityrotor(_:textranges:)-2drz5","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityrotor(_:textranges:)-7v19e","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityrotor(_:textranges:)-ljex","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityvalue(_:)-7uybp","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityvalue(_:)-7xkpr","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityvalue(_:)-g56k","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/actionsheet(ispresented:content:)","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/actionsheet(item:content:)","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/alert(_:ispresented:actions:)-1nzz4","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/alert(_:ispresented:actions:)-2ekwf","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/alert(_:ispresented:actions:)-5cxuu","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/alert(_:ispresented:actions:message:)-16coa","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/alert(_:ispresented:actions:message:)-2vvhg","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/alert(_:ispresented:actions:message:)-5egvd","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/alert(_:ispresented:presenting:actions:)-32ujx","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/alert(_:ispresented:presenting:actions:)-5y4qh","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/alert(_:ispresented:presenting:actions:)-9e3g4","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/alert(_:ispresented:presenting:actions:message:)-1kdhk","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/alert(_:ispresented:presenting:actions:message:)-2z6yr","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/alert(_:ispresented:presenting:actions:message:)-7bup4","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/alert(ispresented:content:)","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/alert(item:content:)","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/alignmentguide(_:computevalue:)-6p539","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/alignmentguide(_:computevalue:)-8anjv","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/animation(_:)","title":"func animation(Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/aspectratio(_:contentmode:)-30d3p","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/aspectratio(_:contentmode:)-5ajxr","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/autocapitalization(_:)","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/background(_:alignment:)","title":"func background<Background>(Background, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/background(_:in:fillstyle:)-4lm4t","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/background(_:in:fillstyle:)-v2e8","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/background(in:fillstyle:)-4ho26","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/background(in:fillstyle:)-4jpb1","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/badge(_:)-2tlvw","title":"func badge(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/badge(_:)-365u5","title":"func badge<S>(S?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/badge(_:)-6eqgq","title":"func badge(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/badge(_:)-947x8","title":"func badge(LocalizedStringKey?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/bold(_:)","title":"func bold(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/brightness(_:)","title":"func brightness(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/buttonstyle(_:)-5yygr","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/buttonstyle(_:)-7a6j4","title":"func buttonStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartsymbolscale(_:)-5t56m","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartsymbolscale(_:)-6xgy5","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartsymbolscale(domain:range:)-3dkkc","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartsymbolscale(domain:range:)-3rbe9","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartsymbolscale(range:)","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartxaxislabel(_:position:alignment:spacing:)","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartyaxislabel(_:position:alignment:spacing:)","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/colorinvert()","title":"func colorInvert() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/colorscheme(_:)","title":"func colorScheme(ColorScheme) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/compositinggroup()","title":"func compositingGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/confetticannon(counter:num:confettis:colors:confettisize:rainheight:fadesout:opacity:openingangle:closingangle:radius:repetitions:repetitioninterval:)","title":"func confettiCannon(counter: Binding<Int>, num: Int, confettis: [ConfettiType], colors: [Color], confettiSize: CGFloat, rainHeight: CGFloat, fadesOut: Bool, opacity: Double, openingAngle: Angle, closingAngle: Angle, radius: CGFloat, repetitions: Int, repetitionInterval: Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-33i8d","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8vi4x","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-r2hp","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3awyv","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-ljy6","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-xih4","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-251pe","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-47z0j","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4qrtb","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1hg5d","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2dsb7","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-72et3","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/containershape(_:)","title":"func containerShape<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/contentmargins(_:_:for:)-81uiw","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/contentmargins(_:_:for:)-8lgn0","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/contextmenu(_:)","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/contextmenu(menuitems:)","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/contrast(_:)","title":"func contrast(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/coordinatespace(name:)","title":"func coordinateSpace<T>(name: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/cornerradius(_:antialiased:)","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/defaulthovereffect(_:)","title":"func defaultHoverEffect(HoverEffect?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/dialogsuppressiontoggle(_:issuppressed:)-2xk5m","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/dialogsuppressiontoggle(_:issuppressed:)-6052x","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/dialogsuppressiontoggle(_:issuppressed:)-g190","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/disableautocorrection(_:)","title":"func disableAutocorrection(Bool?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/disabled(_:)","title":"func disabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/draggable(_:)","title":"func draggable<T>(() -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/draggable(_:preview:)","title":"func draggable<V, T>(() -> T, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/dropdestination(for:action:istargeted:)","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/edgesignoringsafearea(_:)","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/environment(_:)","title":"func environment<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/filedialogconfirmationlabel(_:)-1mww3","title":"func fileDialogConfirmationLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/filedialogconfirmationlabel(_:)-44m9i","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/filedialogconfirmationlabel(_:)-5y2hd","title":"func fileDialogConfirmationLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/filedialogmessage(_:)-2k63o","title":"func fileDialogMessage<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/filedialogmessage(_:)-3j0q6","title":"func fileDialogMessage(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/filedialogmessage(_:)-664da","title":"func fileDialogMessage(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-88xki","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-9fo21","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-4ziqr","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6dr1g","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-81sch","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-85dem","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-754gp","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-89q04","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fileexporterfilenamelabel(_:)-1v3xb","title":"func fileExporterFilenameLabel(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fileexporterfilenamelabel(_:)-8hegm","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fileexporterfilenamelabel(_:)-fjhi","title":"func fileExporterFilenameLabel<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fixedsize()","title":"func fixedSize() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/focusable(_:)","title":"func focusable(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/focusedobject(_:)-1jxp4","title":"func focusedObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/focusedobject(_:)-2z7iy","title":"func focusedObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/focusedsceneobject(_:)-4eiig","title":"func focusedSceneObject<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/focusedsceneobject(_:)-6f4e5","title":"func focusedSceneObject<T>(T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/focusedscenevalue(_:_:)-5q73a","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/focusedscenevalue(_:_:)-7eh8b","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/focusedvalue(_:_:)-6o4gy","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/focusedvalue(_:_:)-7u3r1","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/font(_:)","title":"func font(Font?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/foregroundcolor(_:)","title":"func foregroundColor(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/frame()","title":"func frame() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/geometrygroup()","title":"func geometryGroup() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/grayscale(_:)","title":"func grayscale(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/help(_:)-16pws","title":"func help<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/help(_:)-9iy6c","title":"func help(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/help(_:)-clsp","title":"func help(Text) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/hidden()","title":"func hidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/hovereffect(_:isenabled:)","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/id(_:)","title":"func id<ID>(ID) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/italic(_:)","title":"func italic(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/kerning(_:)","title":"func kerning(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/keyboardshortcut(_:)-59wje","title":"func keyboardShortcut(KeyboardShortcut) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/keyboardshortcut(_:)-7530q","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/labelshidden()","title":"func labelsHidden() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/linelimit(_:)-2kd5t","title":"func lineLimit(Int?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/linelimit(_:)-6rews","title":"func lineLimit(PartialRangeThrough<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/linelimit(_:)-8nq50","title":"func lineLimit(PartialRangeFrom<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/linelimit(_:)-9spwf","title":"func lineLimit(ClosedRange<Int>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/listitemtint(_:)-6ervu","title":"func listItemTint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/listitemtint(_:)-7t56e","title":"func listItemTint(ListItemTint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/listsectionspacing(_:)-2o8kq","title":"func listSectionSpacing(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/listsectionspacing(_:)-45hpl","title":"func listSectionSpacing(ListSectionSpacing) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/mask(_:)","title":"func mask<Mask>(Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/monospaced(_:)","title":"func monospaced(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/monospaceddigit()","title":"func monospacedDigit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationbarhidden(_:)","title":"func navigationBarHidden(Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationbaritems(leading:)","title":"func navigationBarItems<L>(leading: L) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationbaritems(leading:trailing:)","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationbaritems(trailing:)","title":"func navigationBarItems<T>(trailing: T) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationbartitle(_:)-2zkss","title":"func navigationBarTitle(LocalizedStringKey) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationbartitle(_:)-6z6p9","title":"func navigationBarTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationbartitle(_:)-80ufh","title":"func navigationBarTitle<S>(S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationbartitle(_:displaymode:)-5s89p","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationbartitle(_:displaymode:)-5txjh","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationbartitle(_:displaymode:)-6n2lg","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationdocument(_:)","title":"func navigationDocument(URL) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationdocument(_:preview:)-1o7q9","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationdocument(_:preview:)-3wh9","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationdocument(_:preview:)-49ekn","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationdocument(_:preview:)-tbr3","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationtitle(_:)-15ufw","title":"func navigationTitle(Binding<String>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationtitle(_:)-1exqe","title":"func navigationTitle(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationtitle(_:)-64mw1","title":"func navigationTitle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationtitle(_:)-8ava6","title":"func navigationTitle<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationtitle(_:)-mnn1","title":"func navigationTitle(Text) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/navigationviewstyle(_:)","title":"func navigationViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/offset(_:)","title":"func offset(CGSize) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/onchange(of:initial:_:)-8e6sf","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/onchange(of:initial:_:)-8pwp4","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/onchange(of:perform:)","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/oncontinuoushover(coordinatespace:perform:)","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/ondrop(of:delegate:)-2o87a","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/ondrop(of:delegate:)-es3z","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/ondrop(of:istargeted:perform:)-44e8l","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/ondrop(of:istargeted:perform:)-47z3a","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/ondrop(of:istargeted:perform:)-4bgo5","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/ondrop(of:istargeted:perform:)-4k4va","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/onlongpressgesture(minimumduration:pressing:perform:)","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, (() -> Void)) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/ontapgesture(count:coordinatespace:perform:)","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/opacity(_:)","title":"func opacity(Double) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/overlay(_:alignment:)","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/padding(_:)-2ybbu","title":"func padding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/padding(_:)-94lqf","title":"func padding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/position(_:)","title":"func position(CGPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/renameaction(_:)-1njr0","title":"func renameAction(FocusState<Bool>.Binding) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/renameaction(_:)-5ca7h","title":"func renameAction(() -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/safeareainset(edge:alignment:spacing:content:)-18doe","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/safeareainset(edge:alignment:spacing:content:)-9aqhm","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/safeareapadding(_:)-61pe3","title":"func safeAreaPadding(EdgeInsets) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/safeareapadding(_:)-ill3","title":"func safeAreaPadding(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/saturation(_:)","title":"func saturation(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/scaleeffect(_:anchor:)-18cxt","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/scaleeffect(_:anchor:)-4xzvh","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/scaledtofill()","title":"func scaledToFill() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/scaledtofit()","title":"func scaledToFit() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3x6tf","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-8dgmy","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-y6nk","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:editabletokens:placement:prompt:token:)-4smr6","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:editabletokens:placement:prompt:token:)-6fvtj","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:editabletokens:placement:prompt:token:)-6we98","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:ispresented:placement:prompt:)-65okm","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:ispresented:placement:prompt:)-79k0u","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:ispresented:placement:prompt:)-7fsm4","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:placement:prompt:)-2xqc7","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:placement:prompt:)-4dat4","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:placement:prompt:)-5a93e","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:placement:prompt:suggestions:)-1hrzm","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:placement:prompt:suggestions:)-4uwf1","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:placement:prompt:suggestions:)-5s27z","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:tokens:ispresented:placement:prompt:token:)-1e73p","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:tokens:ispresented:placement:prompt:token:)-53e5h","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6a3dz","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:tokens:placement:prompt:token:)-6dldw","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:tokens:placement:prompt:token:)-755fs","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:tokens:placement:prompt:token:)-791c7","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3zwi0","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-51j2l","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-8qj39","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2ba7b","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2xdna","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-xzs9","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/sensoryfeedback(trigger:_:)","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","type":"method"},{"deprecated":true,"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/statusbar(hidden:)","title":"func statusBar(hidden: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/submitscope(_:)","title":"func submitScope(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/tabitem(_:)","title":"func tabItem<V>(() -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/tag(_:)","title":"func tag<V>(V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/textselection(_:)","title":"func textSelection<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/tint(_:)","title":"func tint(Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/toolbar(_:for:)","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/toolbar(content:)-26i8t","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/toolbar(content:)-2m9wh","title":"func toolbar<Content>(content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/toolbarbackground(_:for:)","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/tracking(_:)","title":"func tracking(CGFloat) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/transition(_:)","title":"func transition(AnyTransition) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/typeselectequivalent(_:)-3jg8s","title":"func typeSelectEquivalent(Text?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/typeselectequivalent(_:)-6cmtg","title":"func typeSelectEquivalent<S>(S) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/typeselectequivalent(_:)-7mezz","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/typesettinglanguage(_:isenabled:)-481qz","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/typesettinglanguage(_:isenabled:)-62f77","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/unredacted()","title":"func unredacted() -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","type":"method"},{"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/zindex(_:)","title":"func zIndex(Double) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview\/view-implementations","title":"View Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/yearlyhabitcalendarview","title":"YearlyHabitCalendarView","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/suggestedsymbols","title":"let suggestedSymbols: [String]","type":"var"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/calculateheight(selectedhabit:day:)","title":"func calculateHeight(selectedHabit: Habit, day: Date) -> CGFloat","type":"func"},{"path":"\/documentation\/goalsapp\/calculatewidth(selectedhabit:month:)","title":"func calculateWidth(selectedHabit: Habit, month: String) -> CGFloat","type":"func"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/accent\/dark","title":"case Dark","type":"case"},{"path":"\/documentation\/goalsapp\/accent\/light","title":"case Light","type":"case"},{"path":"\/documentation\/goalsapp\/accent\/accentblue","title":"case accentBlue","type":"case"},{"path":"\/documentation\/goalsapp\/accent\/accentgraphite","title":"case accentGraphite","type":"case"},{"path":"\/documentation\/goalsapp\/accent\/accentgreen","title":"case accentGreen","type":"case"},{"path":"\/documentation\/goalsapp\/accent\/accentorange","title":"case accentOrange","type":"case"},{"path":"\/documentation\/goalsapp\/accent\/accentpink","title":"case accentPink","type":"case"},{"path":"\/documentation\/goalsapp\/accent\/accentpurple","title":"case accentPurple","type":"case"},{"path":"\/documentation\/goalsapp\/accent\/accentred","title":"case accentRed","type":"case"},{"path":"\/documentation\/goalsapp\/accent\/accentyellow","title":"case accentYellow","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/accent\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/accent\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/goalsapp\/accent\/maincolor","title":"var mainColor: LinearGradient","type":"property"},{"path":"\/documentation\/goalsapp\/accent\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/goalsapp\/accent\/standardcolor","title":"var standardColor: Color","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/accent\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/goalsapp\/accent\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/accent\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/accent\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/accent\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/goalsapp\/accent\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/goalsapp\/accent\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/accent","title":"Accent","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/backgroundtheme\/dark","title":"case Dark","type":"case"},{"path":"\/documentation\/goalsapp\/backgroundtheme\/light","title":"case Light","type":"case"},{"path":"\/documentation\/goalsapp\/backgroundtheme\/navy","title":"case navy","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/backgroundtheme\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/backgroundtheme\/colorscheme","title":"var colorScheme: ColorScheme","type":"property"},{"path":"\/documentation\/goalsapp\/backgroundtheme\/complementarycolor","title":"var complementaryColor: Color","type":"property"},{"path":"\/documentation\/goalsapp\/backgroundtheme\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/goalsapp\/backgroundtheme\/maincolor","title":"var mainColor: Color","type":"property"},{"path":"\/documentation\/goalsapp\/backgroundtheme\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/backgroundtheme\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/goalsapp\/backgroundtheme\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/backgroundtheme\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/backgroundtheme\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/backgroundtheme\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/goalsapp\/backgroundtheme\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/goalsapp\/backgroundtheme\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/backgroundtheme","title":"BackgroundTheme","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habittheme\/bubblegumblue","title":"case bubblegumBlue","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/bubblegumpink","title":"case bubblegumPink","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/bubblegumred","title":"case bubblegumRed","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/bubblegumteal","title":"case bubblegumTeal","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/bubblegumyellow","title":"case bubblegumYellow","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/easterblue","title":"case easterBlue","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/eastergreen","title":"case easterGreen","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/easterpink","title":"case easterPink","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/easterpurple","title":"case easterPurple","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/easteryellow","title":"case easterYellow","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/gradientlime","title":"case gradientLime","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/gradientlime2","title":"case gradientLime2","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/gradientocean","title":"case gradientOcean","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/gradientocean2","title":"case gradientOcean2","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/gradientpear","title":"case gradientPear","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/gradientpear2","title":"case gradientPear2","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/gradientpink","title":"case gradientPink","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/gradientpink2","title":"case gradientPink2","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/gradientsanguine","title":"case gradientSanguine","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/gradientsanguine2","title":"case gradientSanguine2","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/gradientspace","title":"case gradientSpace","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/gradientspace2","title":"case gradientSpace2","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/gradientwinter","title":"case gradientWinter","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/gradientwinter2","title":"case gradientWinter2","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/halloweendarkorange","title":"case halloweenDarkOrange","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/halloweendarkpurple","title":"case halloweenDarkPurple","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/halloweengreen","title":"case halloweenGreen","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/halloweenorange","title":"case halloweenOrange","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/halloweenpurple","title":"case halloweenPurple","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/halloweenred","title":"case halloweenRed","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/halloweenteal","title":"case halloweenTeal","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/organicblue","title":"case organicBlue","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/organicbrown","title":"case organicBrown","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/organicgreen","title":"case organicGreen","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/organicred","title":"case organicRed","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/organicwhite","title":"case organicWhite","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/popblue","title":"case popBlue","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/popgreen","title":"case popGreen","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/poppink","title":"case popPink","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/popred","title":"case popRed","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/popyellow","title":"case popYellow","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/sunsetblue","title":"case sunsetBlue","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/sunsetorange","title":"case sunsetOrange","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/sunsetred","title":"case sunsetRed","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/sunsetteal","title":"case sunsetTeal","type":"case"},{"path":"\/documentation\/goalsapp\/habittheme\/sunsetyellow","title":"case sunsetYellow","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habittheme\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habittheme\/complementarycolor","title":"var complementaryColor: Color","type":"property"},{"path":"\/documentation\/goalsapp\/habittheme\/groupname","title":"var groupName: String","type":"property"},{"path":"\/documentation\/goalsapp\/habittheme\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/goalsapp\/habittheme\/isgradient","title":"var isGradient: Bool","type":"property"},{"path":"\/documentation\/goalsapp\/habittheme\/maincolor","title":"var mainColor: LinearGradient","type":"property"},{"path":"\/documentation\/goalsapp\/habittheme\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/goalsapp\/habittheme\/showgradientoption","title":"var showGradientOption: Bool","type":"property"},{"path":"\/documentation\/goalsapp\/habittheme\/standardcolor","title":"var standardColor: Color","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habittheme\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/goalsapp\/habittheme\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habittheme\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habittheme\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/habittheme\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/goalsapp\/habittheme\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/goalsapp\/habittheme\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/habittheme","title":"HabitTheme","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/sound\/basso","title":"case Basso","type":"case"},{"path":"\/documentation\/goalsapp\/sound\/blow","title":"case Blow","type":"case"},{"path":"\/documentation\/goalsapp\/sound\/bottle","title":"case Bottle","type":"case"},{"path":"\/documentation\/goalsapp\/sound\/frog","title":"case Frog","type":"case"},{"path":"\/documentation\/goalsapp\/sound\/funk","title":"case Funk","type":"case"},{"path":"\/documentation\/goalsapp\/sound\/glass","title":"case Glass","type":"case"},{"path":"\/documentation\/goalsapp\/sound\/hero","title":"case Hero","type":"case"},{"path":"\/documentation\/goalsapp\/sound\/morse","title":"case Morse","type":"case"},{"path":"\/documentation\/goalsapp\/sound\/ping","title":"case Ping","type":"case"},{"path":"\/documentation\/goalsapp\/sound\/pop","title":"case Pop","type":"case"},{"path":"\/documentation\/goalsapp\/sound\/purr","title":"case Purr","type":"case"},{"path":"\/documentation\/goalsapp\/sound\/sosumi","title":"case Sosumi","type":"case"},{"path":"\/documentation\/goalsapp\/sound\/submarine","title":"case Submarine","type":"case"},{"path":"\/documentation\/goalsapp\/sound\/tink","title":"case Tink","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/sound\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/sound\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/goalsapp\/sound\/name","title":"var name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/sound\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/goalsapp\/sound\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/sound\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/sound\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/sound\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/goalsapp\/sound\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/goalsapp\/sound\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/goalsapp\/sound","title":"Sound","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/accentblue","title":"static let accentBlue: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/accentgraphite","title":"static let accentGraphite: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/accentgreen","title":"static let accentGreen: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/accentorange","title":"static let accentOrange: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/accentpink","title":"static let accentPink: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/accentpurple","title":"static let accentPurple: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/accentred","title":"static let accentRed: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/accentyellow","title":"static let accentYellow: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/bubblegumblue","title":"static let bubblegumBlue: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/bubblegumpink","title":"static let bubblegumPink: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/bubblegumred","title":"static let bubblegumRed: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/bubblegumteal","title":"static let bubblegumTeal: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/bubblegumyellow","title":"static let bubblegumYellow: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/dark","title":"static let dark: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/easterblue","title":"static let easterBlue: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/eastergreen","title":"static let easterGreen: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/easterpink","title":"static let easterPink: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/easterpurple","title":"static let easterPurple: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/easteryellow","title":"static let easterYellow: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/gradientlime","title":"static let gradientLime: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/gradientlime2","title":"static let gradientLime2: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/gradientocean","title":"static let gradientOcean: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/gradientocean2","title":"static let gradientOcean2: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/gradientpear","title":"static let gradientPear: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/gradientpear2","title":"static let gradientPear2: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/gradientpink","title":"static let gradientPink: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/gradientpink2","title":"static let gradientPink2: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/gradientsanguine","title":"static let gradientSanguine: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/gradientsanguine2","title":"static let gradientSanguine2: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/gradientspace","title":"static let gradientSpace: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/gradientspace2","title":"static let gradientSpace2: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/gradientwinter","title":"static let gradientWinter: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/gradientwinter2","title":"static let gradientWinter2: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/halloweendarkorange","title":"static let halloweenDarkOrange: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/halloweendarkpurple","title":"static let halloweenDarkPurple: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/halloweengreen","title":"static let halloweenGreen: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/halloweenorange","title":"static let halloweenOrange: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/halloweenpurple","title":"static let halloweenPurple: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/halloweenred","title":"static let halloweenRed: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/halloweenteal","title":"static let halloweenTeal: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/light","title":"static let light: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/navy","title":"static let navy: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/organicblue","title":"static let organicBlue: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/organicbrown","title":"static let organicBrown: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/organicgreen","title":"static let organicGreen: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/organicpink","title":"static let organicPink: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/organicred","title":"static let organicRed: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/organicwhite","title":"static let organicWhite: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/popblue","title":"static let popBlue: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/popgreen","title":"static let popGreen: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/poppink","title":"static let popPink: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/popred","title":"static let popRed: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/popyellow","title":"static let popYellow: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/sunsetblue","title":"static let sunsetBlue: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/sunsetorange","title":"static let sunsetOrange: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/sunsetred","title":"static let sunsetRed: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/sunsetteal","title":"static let sunsetTeal: ColorResource","type":"property"},{"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource\/sunsetyellow","title":"static let sunsetYellow: ColorResource","type":"property"}],"path":"\/documentation\/goalsapp\/developertoolssupport\/colorresource","title":"ColorResource","type":"extension"}],"path":"\/documentation\/goalsapp\/developertoolssupport","title":"DeveloperToolsSupport","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/foundation\/date\/calendardisplaydays","title":"var calendarDisplayDays: [Date]","type":"property"},{"path":"\/documentation\/goalsapp\/foundation\/date\/calendardisplaymonths","title":"var calendarDisplayMonths: [Date]","type":"property"},{"path":"\/documentation\/goalsapp\/foundation\/date\/currentweek","title":"var currentWeek: [Date]","type":"property"},{"path":"\/documentation\/goalsapp\/foundation\/date\/dayint","title":"var dayInt: Int","type":"property"},{"path":"\/documentation\/goalsapp\/foundation\/date\/endofday","title":"var endOfDay: Date","type":"property"},{"path":"\/documentation\/goalsapp\/foundation\/date\/endofmonth","title":"var endOfMonth: Date","type":"property"},{"path":"\/documentation\/goalsapp\/foundation\/date\/endofweek","title":"var endOfWeek: Date","type":"property"},{"path":"\/documentation\/goalsapp\/foundation\/date\/firstweekdaybeforestart","title":"var firstWeekDayBeforeStart: Date","type":"property"},{"path":"\/documentation\/goalsapp\/foundation\/date\/monthint","title":"var monthInt: Int","type":"property"},{"path":"\/documentation\/goalsapp\/foundation\/date\/numberofdaysinmonth","title":"var numberOfDaysInMonth: Int","type":"property"},{"path":"\/documentation\/goalsapp\/foundation\/date\/randomdatewithinlastthreemonths","title":"var randomDateWithinLastThreeMonths: Date","type":"property"},{"path":"\/documentation\/goalsapp\/foundation\/date\/startofday","title":"var startOfDay: Date","type":"property"},{"path":"\/documentation\/goalsapp\/foundation\/date\/startofmonth","title":"var startOfMonth: Date","type":"property"},{"path":"\/documentation\/goalsapp\/foundation\/date\/startofpreviousmonth","title":"var startOfPreviousMonth: Date","type":"property"},{"path":"\/documentation\/goalsapp\/foundation\/date\/startofweek","title":"var startOfWeek: Date","type":"property"},{"path":"\/documentation\/goalsapp\/foundation\/date\/thisweek","title":"var thisWeek: DateInterval","type":"property"},{"path":"\/documentation\/goalsapp\/foundation\/date\/yearint","title":"var yearInt: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/foundation\/date\/capitalizedfirstlettersofweekdays","title":"static var capitalizedFirstLettersOfWeekdays: [String]","type":"property"},{"path":"\/documentation\/goalsapp\/foundation\/date\/firstdayofweek","title":"static var firstDayOfWeek: Int","type":"property"},{"path":"\/documentation\/goalsapp\/foundation\/date\/fullmonthnames","title":"static var fullMonthNames: [String]","type":"property"}],"path":"\/documentation\/goalsapp\/foundation\/date","title":"Date","type":"extension"}],"path":"\/documentation\/goalsapp\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/accentblue","title":"static var accentBlue: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/accentgraphite","title":"static var accentGraphite: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/accentgreen","title":"static var accentGreen: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/accentorange","title":"static var accentOrange: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/accentpink","title":"static var accentPink: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/accentpurple","title":"static var accentPurple: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/accentred","title":"static var accentRed: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/accentyellow","title":"static var accentYellow: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/bubblegumblue","title":"static var bubblegumBlue: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/bubblegumpink","title":"static var bubblegumPink: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/bubblegumred","title":"static var bubblegumRed: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/bubblegumteal","title":"static var bubblegumTeal: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/bubblegumyellow","title":"static var bubblegumYellow: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/dark","title":"static var dark: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/easterblue","title":"static var easterBlue: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/eastergreen","title":"static var easterGreen: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/easterpink","title":"static var easterPink: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/easterpurple","title":"static var easterPurple: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/easteryellow","title":"static var easterYellow: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/gradientlime","title":"static var gradientLime: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/gradientlime2","title":"static var gradientLime2: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/gradientocean","title":"static var gradientOcean: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/gradientocean2","title":"static var gradientOcean2: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/gradientpear","title":"static var gradientPear: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/gradientpear2","title":"static var gradientPear2: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/gradientpink","title":"static var gradientPink: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/gradientpink2","title":"static var gradientPink2: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/gradientsanguine","title":"static var gradientSanguine: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/gradientsanguine2","title":"static var gradientSanguine2: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/gradientspace","title":"static var gradientSpace: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/gradientspace2","title":"static var gradientSpace2: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/gradientwinter","title":"static var gradientWinter: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/gradientwinter2","title":"static var gradientWinter2: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/halloweendarkorange","title":"static var halloweenDarkOrange: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/halloweendarkpurple","title":"static var halloweenDarkPurple: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/halloweengreen","title":"static var halloweenGreen: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/halloweenorange","title":"static var halloweenOrange: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/halloweenpurple","title":"static var halloweenPurple: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/halloweenred","title":"static var halloweenRed: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/halloweenteal","title":"static var halloweenTeal: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/light","title":"static var light: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/navy","title":"static var navy: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/organicblue","title":"static var organicBlue: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/organicbrown","title":"static var organicBrown: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/organicgreen","title":"static var organicGreen: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/organicpink","title":"static var organicPink: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/organicred","title":"static var organicRed: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/organicwhite","title":"static var organicWhite: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/popblue","title":"static var popBlue: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/popgreen","title":"static var popGreen: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/poppink","title":"static var popPink: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/popred","title":"static var popRed: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/popyellow","title":"static var popYellow: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/sunsetblue","title":"static var sunsetBlue: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/sunsetorange","title":"static var sunsetOrange: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/sunsetred","title":"static var sunsetRed: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/sunsetteal","title":"static var sunsetTeal: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/shapestyle\/sunsetyellow","title":"static var sunsetYellow: SwiftUI.Color","type":"property"}],"path":"\/documentation\/goalsapp\/swiftui\/shapestyle","title":"ShapeStyle","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/swiftui\/view\/border(width:edges:color:)","title":"func border(width: CGFloat, edges: [Edge], color: Color) -> some View","type":"method"}],"path":"\/documentation\/goalsapp\/swiftui\/view","title":"View","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/swiftui\/binding\/tounwrapped(defaultvalue:)","title":"func toUnwrapped<T>(defaultValue: T) -> Binding<T>","type":"method"}],"path":"\/documentation\/goalsapp\/swiftui\/binding","title":"Binding","type":"extension"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/accentblue","title":"static var accentBlue: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/accentgraphite","title":"static var accentGraphite: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/accentgreen","title":"static var accentGreen: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/accentorange","title":"static var accentOrange: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/accentpink","title":"static var accentPink: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/accentpurple","title":"static var accentPurple: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/accentred","title":"static var accentRed: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/accentyellow","title":"static var accentYellow: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/bubblegumblue","title":"static var bubblegumBlue: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/bubblegumpink","title":"static var bubblegumPink: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/bubblegumred","title":"static var bubblegumRed: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/bubblegumteal","title":"static var bubblegumTeal: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/bubblegumyellow","title":"static var bubblegumYellow: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/dark","title":"static var dark: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/easterblue","title":"static var easterBlue: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/eastergreen","title":"static var easterGreen: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/easterpink","title":"static var easterPink: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/easterpurple","title":"static var easterPurple: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/easteryellow","title":"static var easterYellow: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/gradientlime","title":"static var gradientLime: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/gradientlime2","title":"static var gradientLime2: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/gradientocean","title":"static var gradientOcean: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/gradientocean2","title":"static var gradientOcean2: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/gradientpear","title":"static var gradientPear: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/gradientpear2","title":"static var gradientPear2: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/gradientpink","title":"static var gradientPink: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/gradientpink2","title":"static var gradientPink2: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/gradientsanguine","title":"static var gradientSanguine: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/gradientsanguine2","title":"static var gradientSanguine2: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/gradientspace","title":"static var gradientSpace: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/gradientspace2","title":"static var gradientSpace2: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/gradientwinter","title":"static var gradientWinter: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/gradientwinter2","title":"static var gradientWinter2: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/halloweendarkorange","title":"static var halloweenDarkOrange: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/halloweendarkpurple","title":"static var halloweenDarkPurple: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/halloweengreen","title":"static var halloweenGreen: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/halloweenorange","title":"static var halloweenOrange: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/halloweenpurple","title":"static var halloweenPurple: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/halloweenred","title":"static var halloweenRed: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/halloweenteal","title":"static var halloweenTeal: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/light","title":"static var light: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/navy","title":"static var navy: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/organicblue","title":"static var organicBlue: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/organicbrown","title":"static var organicBrown: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/organicgreen","title":"static var organicGreen: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/organicpink","title":"static var organicPink: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/organicred","title":"static var organicRed: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/organicwhite","title":"static var organicWhite: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/popblue","title":"static var popBlue: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/popgreen","title":"static var popGreen: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/poppink","title":"static var popPink: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/popred","title":"static var popRed: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/popyellow","title":"static var popYellow: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/sunsetblue","title":"static var sunsetBlue: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/sunsetorange","title":"static var sunsetOrange: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/sunsetred","title":"static var sunsetRed: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/sunsetteal","title":"static var sunsetTeal: SwiftUI.Color","type":"property"},{"path":"\/documentation\/goalsapp\/swiftui\/color\/sunsetyellow","title":"static var sunsetYellow: SwiftUI.Color","type":"property"}],"path":"\/documentation\/goalsapp\/swiftui\/color","title":"Color","type":"extension"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/swiftui\/horizontalalignment\/controlalignment","title":"static let controlAlignment: HorizontalAlignment","type":"property"}],"path":"\/documentation\/goalsapp\/swiftui\/horizontalalignment","title":"HorizontalAlignment","type":"extension"}],"path":"\/documentation\/goalsapp\/swiftui","title":"SwiftUI","type":"extension"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/accentblue","title":"static var accentBlue: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/accentgraphite","title":"static var accentGraphite: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/accentgreen","title":"static var accentGreen: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/accentorange","title":"static var accentOrange: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/accentpink","title":"static var accentPink: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/accentpurple","title":"static var accentPurple: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/accentred","title":"static var accentRed: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/accentyellow","title":"static var accentYellow: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/bubblegumblue","title":"static var bubblegumBlue: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/bubblegumpink","title":"static var bubblegumPink: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/bubblegumred","title":"static var bubblegumRed: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/bubblegumteal","title":"static var bubblegumTeal: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/bubblegumyellow","title":"static var bubblegumYellow: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/dark","title":"static var dark: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/easterblue","title":"static var easterBlue: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/eastergreen","title":"static var easterGreen: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/easterpink","title":"static var easterPink: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/easterpurple","title":"static var easterPurple: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/easteryellow","title":"static var easterYellow: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/gradientlime","title":"static var gradientLime: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/gradientlime2","title":"static var gradientLime2: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/gradientocean","title":"static var gradientOcean: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/gradientocean2","title":"static var gradientOcean2: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/gradientpear","title":"static var gradientPear: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/gradientpear2","title":"static var gradientPear2: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/gradientpink","title":"static var gradientPink: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/gradientpink2","title":"static var gradientPink2: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/gradientsanguine","title":"static var gradientSanguine: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/gradientsanguine2","title":"static var gradientSanguine2: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/gradientspace","title":"static var gradientSpace: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/gradientspace2","title":"static var gradientSpace2: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/gradientwinter","title":"static var gradientWinter: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/gradientwinter2","title":"static var gradientWinter2: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/halloweendarkorange","title":"static var halloweenDarkOrange: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/halloweendarkpurple","title":"static var halloweenDarkPurple: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/halloweengreen","title":"static var halloweenGreen: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/halloweenorange","title":"static var halloweenOrange: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/halloweenpurple","title":"static var halloweenPurple: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/halloweenred","title":"static var halloweenRed: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/halloweenteal","title":"static var halloweenTeal: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/light","title":"static var light: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/navy","title":"static var navy: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/organicblue","title":"static var organicBlue: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/organicbrown","title":"static var organicBrown: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/organicgreen","title":"static var organicGreen: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/organicpink","title":"static var organicPink: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/organicred","title":"static var organicRed: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/organicwhite","title":"static var organicWhite: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/popblue","title":"static var popBlue: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/popgreen","title":"static var popGreen: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/poppink","title":"static var popPink: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/popred","title":"static var popRed: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/popyellow","title":"static var popYellow: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/sunsetblue","title":"static var sunsetBlue: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/sunsetorange","title":"static var sunsetOrange: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/sunsetred","title":"static var sunsetRed: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/sunsetteal","title":"static var sunsetTeal: UIKit.UIColor","type":"property"},{"path":"\/documentation\/goalsapp\/uikit\/uicolor\/sunsetyellow","title":"static var sunsetYellow: UIKit.UIColor","type":"property"}],"path":"\/documentation\/goalsapp\/uikit\/uicolor","title":"UIColor","type":"extension"}],"path":"\/documentation\/goalsapp\/uikit","title":"UIKit","type":"extension"}],"path":"\/documentation\/goalsapp","title":"GoalsApp","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}